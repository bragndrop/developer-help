frame_data["manifest"] = {"xml":"<div title=\"manifest\"><div class=\"components\"><div title=\"web-manifest-component\">\n    <div class=\"allowed-XSS-code\" title=\"Allow manifest-component when filtering for XSS\">\n        <script>\n            allowedXSS[\"tags\"].push(\"manifest-component\");\n        </script>\n    </div>\n    <div class=\"runOnLoad\">\n        <script>\n\n            if (editFrameContent().find('manifest-component').length == 0){\n\n                var manifestName = project_name.substr(0, 45);\n\n                var manifestIcons = \"\";\n                function buildManifestIconRows(href, size){\n                    manifestIcons += '<tr><td><input type=\"text\" value=\"https://editor.bragndrop.com/assets/images/icons/' + href + '\"></td><td><input type=\"text\" value=\"' + size + '\"></td></tr>';\n                }\n\n                buildManifestIconRows(\"android-chrome-36x36.png\", \"36x36\");\n                buildManifestIconRows(\"android-chrome-48x48.png\", \"48x48\");\n                buildManifestIconRows(\"android-chrome-72x72.png\", \"72x72\");\n                buildManifestIconRows(\"android-chrome-96x96.png\", \"96x96\");\n                buildManifestIconRows(\"android-chrome-144x144.png\", \"144x144\");\n                buildManifestIconRows(\"android-chrome-192x192.png\", \"192x192\");\n                buildManifestIconRows(\"android-chrome-256x256.png\", \"256x256\");\n                buildManifestIconRows(\"android-chrome-384x384.png\", \"384x384\");\n                buildManifestIconRows(\"android-chrome-512x512.png\", \"512x512\");\n\n                editFrameContent().find(\"body\").append('<manifest-component id=\"web-manifest\"><div><input type=\"text\" class=\"manifest-name\" value=\"' + manifestName + '\"><input type=\"text\" class=\"manifest-short-name\"><input type=\"text\" class=\"manifest-description\"></div><div><input type=\"color\" class=\"manifest-theme-color\" value=\"#cccccc\"><input type=\"color\" class=\"manifest-background-color\" value=\"#ffffff\"></div><div><table class=\"manifest-icons\"><tbody>' + manifestIcons + '</tbody></table></div><div><select class=\"manifest-display\" data-value=\"standalone\"></select><select class=\"manifest-orientation\" data-value=\"any\"></select></div><div><input type=\"text\" class=\"manifest-start-url\" value=\"' + publishURL() + '\"><input type=\"text\" class=\"manifest-scope\" value=\"' + publishURL() + '\"></div><div><table class=\"manifest-related-apps\"><tbody><tr><td><input type=\"text\"></td><td><input type=\"text\"></td><td><input type=\"text\"></td></tr></tbody></table><select class=\"manifest-pref-related-app\" data-value=\"no\"></select></div><div><input type=\"text\" class=\"manifest-lang\"></div></manifest-component>');\n\n            }else{\n\n                editFrameContent().find(\"manifest-component\").find(\"label, small, thead, .manifest-remove-row, .manifest-add-row, .browser-mockup\").remove();\n                editFrameContent().find(\"manifest-component\").find(\"input, select\").removeAttr(\"id\"); editFrameContent().find(\"manifest-component\").find(\"select\").each(function() {\n                    $(this).html(\"\");\n                }); \n                editFrameContent().find(\"manifest-component\").find(\"input[placeholder]\").removeAttr(\"placeholder\");\n            }\n\n\n            tagReName(\"Web Manifest\", \"manifest-component\");\n            tagReName(\"Name\", \".manifest-name\");\n            tagReName(\"Short Name\", \".manifest-short-name\");\n            tagReName(\"Description\", \".manifest-description\");\n            tagReName(\"Start URL\", \".manifest-start-url\");\n            tagReName(\"Scope\", \".manifest-scope\");\n            tagReName(\"Display\", \".manifest-display\");\n            tagReName(\"Orientation\", \".manifest-orientation\");\n            tagReName(\"Background Color\", \".manifest-background-color\");\n            tagReName(\"Theme Color\", \".manifest-theme-color\");\n            tagReName(\"Language\", \".manifest-lang\");\n\n            tagReName(\"location\", \".manifest-icons td:nth-child(1) input\");\n            tagReName(\"size\", \".manifest-icons td:nth-child(2) input\");\n\n            tagReName(\"Platform\", \".manifest-related-apps td:nth-child(1) input\");\n            tagReName(\"App ID\", \".manifest-related-apps td:nth-child(2) input\");\n            tagReName(\"URL\", \".manifest-related-apps td:nth-child(3) input\");\n\n            tagReName(\"Prefer Related App \", \".manifest-pref-related-app\");\n\n            designSetting(\"noCopy\", \"manifest-component, manifest-component input, manifest-component select\");\n            designSetting(\"notDraggable\", \"manifest-component, manifest-component input, manifest-component select\");\n            designSetting(\"notDroppable\", \"manifest-component, manifest-component input, manifest-component select\");\n\n            designSetting(\"noRemove\", \"manifest-component, manifest-component input, manifest-component select\");\n            designSetting(\"noMove\", \"manifest-component input, manifest-component select\");\n            designSetting(\"disableCustomButtons\", \"manifest-component input, manifest-component select\");\n\n            designSetting(\"dontAddTextTo\", \"manifest-component label, manifest-component th, manifest-component button\");\n\n            designSetting(\"unTouchElement\", \"manifest-component div, manifest-component label, manifest-component label *, manifest-component small, manifest-component table, manifest-component thead, manifest-component th, manifest-component tbody, manifest-component tr, manifest-component td, manifest-component button, manifest-component span\");\n\n\n            designSetting(\"hiddenContent\", \"manifest-component\");\n\n            designSetting(\"disablePropInspector\", \"manifest-component, manifest-component *\");\n\n            editFrameContent().find('body').on('focusin', 'manifest-component select', function() {\n                $(this).data('val', $(this).val());\n            }).on('focusout', 'manifest-component select', function(){\n                var prev = $(this).data('val');\n                var current = $(this).val();\n                var elem = selectedElement();\n\n                elem.attr(\"data-value\", current);\n\n                if (prev != current) {\n\n\n                    undoManager.add({\n                        undo: function () {\n                            showIfHidden(elem);\n                            elem.val(prev);\n                            elem.attr(\"data-value\", prev);\n                            resetBreadcrumbAndProps(elem, false);\n                        },\n                        redo: function () {\n                            showIfHidden(elem);\n                            elem.val(current);\n                            elem.attr(\"data-value\", current);\n                            resetBreadcrumbAndProps(elem, false);\n\n                        }\n                    });\n                    undoRedoStatus();\n                }\n            });\n\n            function updateMobilePreviewColor(){\n\n                var manifestComp = editFrameContent().find(\"manifest-component\");\n\n                var themeColor = manifestComp.find(\".manifest-theme-color\").val();\n\n                manifestComp.find(\".browser-mockup\").css(\"border-top-color\", themeColor);\n\n                var bgColor = manifestComp.find(\".manifest-background-color\").val();\n\n                manifestComp.find(\".browser-mockup div\").css(\"background-color\", bgColor);\n            }\n\n            editFrameContent().find('body').on('focusin', 'manifest-component input[type=\"color\"]', function() {\n                $(this).data('val', $(this).val());\n            }).on('focusout', 'manifest-component input[type=\"color\"]', function(){\n                var prev = $(this).data('val');\n                var current = $(this).val(); \n\n                if (prev != current) {\n                    var elem = selectedElement();\n                    elem.attr(\"value\", current); \n\n                    undoManager.add({\n                        undo: function () {\n                            showIfHidden(elem);\n                            elem.val(prev);\n                            elem.attr(\"value\", prev); \n                            updateMobilePreviewColor();\n                            resetBreadcrumbAndProps(elem, false);\n                        },\n                        redo: function () {\n                            showIfHidden(elem);\n                            elem.val(current);\n                            elem.attr(\"value\", current); \n                            updateMobilePreviewColor();\n                            resetBreadcrumbAndProps(elem, false);\n\n                        }\n                    });\n                    undoRedoStatus();\n                }\n            }).on('change', 'manifest-component input[type=\"color\"]', function(){\n                updateMobilePreviewColor();\n            });\n\n            editFrameContent().find('body').on('click', 'manifest-component .manifest-remove-row button', function() {\n\n                var currentRow = $(this).closest(\"tr\");\n                var rowAttachInfo = reAttachHow(currentRow);\n                var elem = currentRow.find(\"input\").eq(0);\n                currentRow.detach();\n\n                undoManager.add({\n                    undo: function () {\n                        reAttachNow(rowAttachInfo);\n                        showIfHidden(elem);\n                        resetBreadcrumbAndProps(elem, false);\n                    },\n                    redo: function () {\n                        showIfHidden(elem);\n                        currentRow.detach();\n                        resetBreadcrumbAndProps(elem.closest(\"manifest-component\"), false);\n\n                    }\n                });\n                undoRedoStatus();\n            });\n\n            editFrameContent().find('body').on('click', 'manifest-component .manifest-add-row button', function() {\n\n                var targetTable = $(this).parent().parent().find(\"tbody\");\n                var emptyRow;\n\n                targetTable.each(function() {\n                    $(this).find(\"tr\").each(function() {\n                        var rowVal = \"\"; \n                        $(this).find(\"input\").each(function() {\n                            rowVal = rowVal + $(this).val();\n                        });\n\n                        if (rowVal == \"\"){\n                            emptyRow = $(this);\n                            return false;\n                        }\n                    });\n                });\n\n                if (typeof emptyRow === \"undefined\") {\n\n                    if (targetTable.closest(\".manifest-related-apps\").length > 0){\n                        var newRow = targetTable.append('<tr class=\"ag-new-row\"><td><input type=\"text\" placeholder=\"itunes\"></td><td><input type=\"text\"></td><td><input type=\"text\" placeholder=\"https://itunes.apple.com/app/\"></td><td class=\"manifest-remove-row\"><button type=\"button\"><span class=\"fa fa-times\"></span></button></td></tr>');\n                    }else{\n                        var newRow = targetTable.append('<tr class=\"ag-new-row\"><td><input type=\"text\"></td><td><input type=\"text\"></td><td class=\"manifest-remove-row\"><button type=\"button\"><span class=\"fa fa-times\"></span></button></td></tr>');\n                    }\n\n\n                    targetTable.find(\".ag-new-row\").wrap(\"<div class='newStuff'></div>\");\n\n                    runUndoAddNew(false);\n                    var ifram = editFrameContent();\n                    finishNewElem(ifram, false, false);\n\n                    setTimeout(function(){ \n                        targetTable.find(\".ag-new-row\").find(\"input\").eq(0).click();\n                        targetTable.find(\".ag-new-row\").removeClass(\"ag-new-row\");\n                    }, 150);\n\n                }else{\n\n                    setTimeout(function(){ \n                        emptyRow.find(\"input\").eq(0).click();\n                    }, 100);\n                }\n\n            });\n\n            editFrameContent().find('body').on('click', 'manifest-component .manifest-icons td:nth-child(1) input', function(event) {\n\n                var elem = $(this);\n\n                // \"openImageGallery\" is a function used to open the image gallery\n                // you must pass an array of affected elements (with a target attribute) for the image url\n                openImageGallery([\n                    {\n                        \"element\": elem,\n                        \"attribute\": \"value\"\n                    }\n                ]);\n\n\n\n                $('#ImageGallery').off('click', '.thumbnail');\n\n                $('#ImageGallery').on('click', '.thumbnail', function (event) {\n\n                    if ($(this).hasClass(\"imageActive\") == false) {\n\n                        // \"currentImage\" is an internal variable that tracks the active image url\n                        var oldImage = currentImage;\n\n                        // \"getSelectedImage\" is a function which grabs the url of the selected image\n                        var newImage = getSelectedImage($(this));\n\n                        showLoad();\n\n                        var imageInfo = new Image();\n                        imageInfo.src = newImage;\n\n                        var imageLoadTimer = setInterval(function(){\n                            if (imageInfo.width > 0){\n                                clearInterval(imageLoadTimer);\n                                undoRedoManifestIconChange(elem, oldImage, newImage, imageInfo);\n                                hideLoad();\n                            }\n                        }, 50);\n\n                    }\n\n                });\n\n\n                $('#UpdateImageURLviaInputBox').off('click');\n\n                $('#UpdateImageURLviaInputBox').on('click', function (event) {\n\n                    if (currentImage != $(\"#ImageURLInputBox\").val()) {\n\n                        // \"currentImage\" is an internal variable that tracks the active image url\n                        var oldImage = currentImage;\n\n                        // \"#ImageURLInputBox\" is the input box were the user enters the img URL\n                        var newImage = $(\"#ImageURLInputBox\").val();\n\n                        showLoad();\n\n                        var imageInfo = new Image();\n                        imageInfo.src = newImage;\n\n                        var imageLoadTimer = setInterval(function(){\n                            if (imageInfo.width > 0){\n                                clearInterval(imageLoadTimer);\n                                undoRedoManifestIconChange(elem, oldImage, newImage, imageInfo);\n                                hideLoad();\n                            }\n                        }, 50);\n\n\n                    }\n\n                    $('#SelectImageModal').modal('hide');\n\n                });\n\n                function undoRedoManifestIconChange(elem, oldImage, newImage, imageInfo) {\n\n                    elem.val(newImage);\n\n                    var iconSizeInput = elem.closest(\"td\").next().find(\"input\");\n\n                    var oldSize = iconSizeInput.val();\n                    var newSize = imageInfo.width + \"x\" + imageInfo.height;\n                    iconSizeInput.val(newSize);\n\n                    undoManager.add({\n                        undo: function () {\n                            showIfHidden(elem);\n                            elem.val(oldImage);\n                            iconSizeInput.val(oldSize);\n                            resetBreadcrumbAndProps(elem, false);\n                        },\n                        redo: function () {\n                            showIfHidden(elem);\n                            elem.val(newImage);\n                            iconSizeInput.val(newSize);\n                            resetBreadcrumbAndProps(elem, false);\n\n                        }\n                    });\n\n                    undoRedoStatus();\n                }\n                event.stopPropagation();\n            });\n        </script>\n        <style>\n                manifest-component{\n                    padding: 19px 0px !important;\n                    background-color: #ffffff !important;\n                    display: none;\n                }\n\n                manifest-component .ag-focus{\n                    outline-style: solid !important;\n                }\n\n                manifest-component > div {\n                    display: block !important;\n                    padding: 8px 20px 15px 20px !important;\n                    background-color: #f2f2f2 !important;\n                    margin: 0px 30px 30px 30px !important;\n                    border: 1px solid #d6d6d6 !important;\n                    max-width: 480px !important;\n                }\n\n                manifest-component > div:first-child {\n                    margin-top: 15px !important;\n                }   \n\n                manifest-component label {\n                    display: block !important;\n                    font-weight: bold !important;\n                    font-size: 13px !important;\n                    padding: 4px 0px !important;\n                    margin: 30px 0px 0px 0px !important;\n                    color: #000000 !important;\n                }\n\n                manifest-component div label:first-child {\n                    margin-top: 0px !important;\n                }\n\n                manifest-component input::-webkit-input-placeholder {\n                    font-weight: normal !important;\n                    color: #b1b1b1 !important;\n                }\n\n                manifest-component input::-moz-placeholder {\n                    font-weight: normal !important;\n                    color: #b1b1b1 !important;\n                }\n\n                manifest-component input:-ms-input-placeholder {\n                    font-weight: normal !important;\n                    color: #b1b1b1 !important;\n                }\n\n                manifest-component input:-moz-placeholder {\n                    font-weight: normal !important;\n                    color: #b1b1b1 !important;\n                }\n\n                manifest-component input, manifest-component select {\n                    display: block !important;\n                    width: 100% !important;\n                    padding: 5px 9px !important;\n                    font-size: 13px !important;\n                    line-height: 1.5 !important;\n                    color: #333333 !important;\n                    background-color: #fff !important;\n                    background-clip: padding-box !important;\n                    border: 1px solid #ced4da !important;\n                    border-radius: 0px !important;\n                    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out !important;\n                    font-weight: 600 !important;\n                }\n\n                manifest-component input:focus, manifest-component select:focus {\n                    color: #495057 !important;\n                    background-color: #fff !important;\n                    border-color: #80bdff !important;\n                    outline: 0 !important;\n                    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25) !important;\n                }\n\n                manifest-component .manifest-icons td:nth-child(1) input {\n                    direction: rtl !important;\n                }\n\n                manifest-component .manifest-icons td:nth-child(1) input.ag-focus {\n                    direction: ltr !important;\n                }\n\n                manifest-component input[type='color'] {\n                    padding: 0px !important;\n                    width: 50px !important;\n                    height: 27px !important;\n                    border-radius: 0px !important;\n                    margin-bottom: 56px !important;\n                }\n\n                manifest-component small {\n                    font-size: 13px !important;\n                    font-weight: 400 !important;\n                    display: block !important;\n                    margin-top: .25rem !important;\n                    color: #6c757d !important;\n                }\n\n                manifest-component table, manifest-component tr, manifest-component input {\n                    width: 100% !important;\n                }\n\n                manifest-component table {\n                    background: #f2f2f2 !important;\n                }\n\n                manifest-component tbody tr {\n                    border-top: 1px solid #d2d2d2;\n                    background: #f2f2f2 !important;\n                }\n\n                manifest-component td{\n                    padding: 4px 1px !important;\n                    color: #000000 !important;\n                    background: #f2f2f2 !important;\n                }\n\n                manifest-component .manifest-remove-row button{\n                    width: 32px !important;\n                }\n\n                manifest-component .manifest-remove-row button{\n                    width: 30px !important;\n                    height: 30px !important;\n                    background: #f2f2f2 !important;\n                    border: 0px !important;\n                    color: #424242 !important;\n                 }\n\n                 manifest-component .manifest-add-row button{\n                     background: #dedede !important;\n                     border: 1px solid #a9a9a9 !important;\n                     margin: 4px 0px 0px 1px !important;\n                 }\n\n                 manifest-component button{\n                     cursor: pointer !important;\n                     color: #000000 !important;\n                 }\n\n                manifest-component th {\n                    padding: 8px 0px 3px 0px !important;\n                    font-size: 12px !important;\n                    color: #555555 !important;\n                    background: #f2f2f2 !important;\n                }\n\n                manifest-component .web-manifest{\n                    margin-bottom: 23px !important;\n                    border: 1px solid #000000 !important;\n                }\n\n                manifest-component .browser-mockup {\n                    border-top-width: 2em !important;\n                    border-top-style: solid !important;\n                    border-top-color: #cccccc;\n                    box-shadow: 0px 0px 1px 1px rgba(0, 0, 0, 0.6) !important;\n                    position: relative !important;\n                    border-radius: 3px 3px 0 0 !important;\n                    float: right !important;\n                    display: block !important;\n                    width: 116px !important;\n                    margin-top: 13px !important;\n                }\n\n                .browser-mockup:before {\n                    display: block !important;\n                    position: absolute !important;\n                    content: '' !important;\n                    top: -1.25em !important;\n                    left: 8px !important;\n                    width: 0.5em !important;\n                    height: 0.5em !important;\n                    border-radius: 50% !important;\n                    background-color: #f44 !important;\n                    box-shadow: 0 0 0 2px #f44, 18px 0 0 2px #9b3, 36px 0 0 2px #fb5 !important;\n                }\n\n                manifest-component .browser-mockup > div{\n                    width: 100% !important;\n                    height: 170px !important;\n                    display: block !important;\n                    border-top: 1px solid rgba(0, 0, 0, 0.6) !important;\n                    background-color: #ffffff;\n                }\n        </style>\n    </div>\n    <div class=\"addButtons\">\n        <script>\n\n            addCustomButton(inEditor, \"webManifest\", \"Web Manifest\", \"\", \"\", \"body\", \"body.ag-body-height-ton\");\n\n            inEditor.find(\"#webManifest\").click(function (event) {\n                $(\"#vis-content-web-manifest\").click();\n                event.stopPropagation();\n            });\n        </script>\n    </div>\n    <div class=\"whenInHideMode\">\n        <script>\n            if (elm.is(\"manifest-component\")) {\n                // Add static data to the form\n                // Why? because theres no need to save this in the database!\n\n                if (elm.find(\"label\").length == 0) {\n\n                    elm.find(\".manifest-name\").before(\"<label>Name:</label>\");\n                    elm.find(\".manifest-name\").after(\"<small>Name of your Web App (max 45 characters)</small>\");\n                    elm.find(\".manifest-name\").attr(\"placeholder\", \"My Super Duper App\");\n\n                    elm.find(\".manifest-short-name\").before(\"<label>Short Name:</label>\");\n                    elm.find(\".manifest-short-name\").after(\"<small>This will be used when there is insufficient space to display the full name, such as the homescreen (max 12 characters)</small>\");\n                    elm.find(\".manifest-short-name\").attr(\"placeholder\", \"Super App\");\n\n                    elm.find(\".manifest-description\").before(\"<label>Description:</label>\");\n                    elm.find(\".manifest-description\").after(\"<small>Describe the purpose of the web application</small>\");\n                    elm.find(\".manifest-description\").attr(\"placeholder\", \"This App will help you with stuff\");\n\n                    elm.find(\".manifest-icons\").before(\"<label>Icons <small>(WxH) - 192x192, 512x512</small></label>\");\n\n\n                    elm.find(\".manifest-related-apps\").before(\"<label>Related Apps:</label>\");\n                    elm.find(\".manifest-related-apps\").find(\"tr\").each(function() {\n                        $(this).find(\"td\").eq(0).find(\"input\").attr(\"placeholder\", \"play\");\n                        $(this).find(\"td\").eq(1).find(\"input\").attr(\"placeholder\", \"com.example.app\");\n                        $(this).find(\"td\").eq(2).find(\"input\").attr(\"placeholder\", \"https://play.google.com/store/apps/\");\n                    });\n\n                    elm.find(\".manifest-pref-related-app\").before(\"<label>Prefer Related App:</label>\");\n\n                    elm.find(\".manifest-start-url\").before(\"<label>Start Url:</label>\");\n                    elm.find(\".manifest-start-url\").after(\"<small>Your homescreen shortcut will load this URL</small>\");\n                    elm.find(\".manifest-start-url\").attr(\"placeholder\", publishURL());\n\n                    elm.find(\".manifest-scope\").before(\"<label>Scope:</label>\");\n                    elm.find(\".manifest-scope\").after(\"<small>The scope of your domain that this manifest applies to</small>\");\n                    elm.find(\".manifest-scope\").attr(\"placeholder\", \"/\");\n\n                    elm.find(\".manifest-display\").before(\"<label>Display:</label>\");\n                    elm.find(\".manifest-orientation\").before(\"<label>Screen Orientation:</label>\"); \n\n                    elm.find(\".manifest-theme-color\").before('<div class=\"browser-mockup\"><div>\t&nbsp;</div></div>');\n\n                    elm.find(\".browser-mockup\").css(\"border-top-color\", elm.find(\".manifest-theme-color\").val());\n\n                    elm.find(\".browser-mockup div\").css(\"background-color\", elm.find(\".manifest-background-color\").val());\n\n                    elm.find(\".manifest-theme-color\").before(\"<label>Theme Color:</label>\");\n\n                    elm.find(\".manifest-background-color\").before(\"<label>Background Color:</label>\");\n\n                    elm.find(\".manifest-lang\").before(\"<label>Language:</label>\");\n                    elm.find(\".manifest-lang\").after(\"<small>The primary language for the name, short name and description properties. For example, en or en-CA</small>\");\n                    elm.find(\".manifest-lang\").attr(\"placeholder\", \"en-GB\");\n\n                    elm.find(\".manifest-display\").html('<option value=\"fullscreen\">Fullscreen (no browser or system UI shown)</option><option value=\"standalone\">Standalone (an app-like experience, no browser UI, only system UI)</option><option value=\"minimal-ui\">Minimal UI</option><option value=\"browser\">Browser</option>');\n\n                    elm.find(\".manifest-orientation\").html('<option value=\"any\">any</option><option value=\"natural\">natural</option><option value=\"landscape\">landscape</option><option value=\"portrait\">portrait</option><option value=\"portrait-primary\">portrait-primary</option><option value=\"portrait-secondary\">portrait-secondary</option><option value=\"landscape-primary\"landscape-primary>landscape-primary</option><option value=\"landscape-secondary\">landscape-secondary</option>');\n\n                    elm.find(\".manifest-pref-related-app\").html('<option value=\"yes\">Yes</option><option value=\"no\">No</option>');\n\n\n                    elm.find(\"table tbody tr\").each(function() {\n                        if ($(this).find(\".manifest-remove-row\").length == 0){\n                            $(this).append('<td class=\"manifest-remove-row\"><button type=\"button\"><span class=\"fa fa-times\"></span></button></td>');\n                        }\n                    });\n\n                    elm.find(\"table\").after('<div class=\"manifest-add-row\"><button type=\"button\">Add another...</button></div>');\n\n                    elm.find(\".manifest-icons\").prepend(\"<thead><tr><th style='width: 75%'>location</th><th>size</th></tr></thead>\");\n\n                    elm.find(\".manifest-related-apps\").prepend(\"<thead><tr><th>Platform</th><th style='width: 30%'>\tApp ID</th><th style='width: 45%'>URL</th></tr></thead>\");\n                }\n\n                elm.find(\"select\").each(function() {\n                    $(this).val($(this).attr(\"data-value\"));\n                });\n            }\n        </script>\n    </div>\n    <div class=\"whenOutOfHideMode\">\n        <script>\n            if (elm.length == 1){\n                if (elm.is(\"manifest-component\")) {\n                    // Remove static data from the form\n                    // Why? because theres no need to save this in the database!\n                    elm.find(\"label, small, thead, .manifest-remove-row, .manifest-add-row, .browser-mockup\").remove();\n                    elm.find(\"input, select\").removeAttr(\"id\");\n                    elm.find(\"select\").each(function() {\n                        $(this).attr(\"data-value\", $(this).val());\n                        $(this).html(\"\");\n                    });\n                    elm.find(\"input[placeholder]\").removeAttr(\"placeholder\");\n                }\n            }\n        </script>\n    </div>\n</div></div><div class=\"codeUsedForPublishing\"><script>myPage['manifestData'] = {}; \nif (pageClone.find(\"manifest-component\").length > 0) {\n\n    var manifestData = {};\n    var manifestComponent  = pageClone.find(\"manifest-component\");\n\n    manifestData['manifestMetaTheme'] = '<meta name=\"theme-color\" content=\"' + manifestComponent.find(\".manifest-theme-color\").val() + '\"/>';\n\n    var manifestJSON = {};\n\n    if (manifestComponent.find(\".manifest-name\").val() != \"\"){\n        manifestJSON[\"name\"] = encodeURIComponent(manifestComponent.find(\".manifest-name\").val());\n    }else{\n        manifestJSON[\"name\"] = encodeURIComponent(\"A BragnDrop App\");\n    }\n\n    if (manifestComponent.find(\".manifest-short-name\").val() != \"\"){\n        manifestJSON[\"short_name\"] = encodeURIComponent(manifestComponent.find(\".manifest-short-name\").val());\n    }\n\n    if (manifestComponent.find(\".manifest-description\").val() != \"\"){\n        manifestJSON[\"description\"] = encodeURIComponent(manifestComponent.find(\".manifest-description\").val());\n    }\n\n    manifestJSON[\"background_color\"] = encodeURIComponent(manifestComponent.find(\".manifest-background-color\").val());\n\n    manifestJSON[\"theme_color\"] = encodeURIComponent(manifestComponent.find(\".manifest-theme-color\").val());\n\n    var manifestIcons = [];\n\n    manifestComponent.find(\".manifest-icons\").find(\"tbody\").find(\"tr\").each(function() {\n        if ($(this).find(\"input\").eq(0).val() != \"\"){\n\n            var manifestIcon = {};\n\n            var iconUrl = $(this).find(\"input\").eq(0).val();\n            manifestIcon[\"src\"] = iconUrl;\n\n            var imageType = iconUrl.split('.').pop().toLowerCase();\n\n            if (imageType == \"gif\") {\n                imageType = \"image/gif\";\n            } else if (imageType == \"png\") {\n                imageType = \"image/png\";\n            } else if (imageType == \"jpeg\") {\n                imageType = \"image/jpeg\";\n            } else if (imageType == \"jpg\") {\n                imageType = \"image/jpeg\";\n            } else if (imageType == \"bmp\") {\n                imageType = \"image/bmp\";\n            } else if (imageType == \"webp\") {\n                imageType = \"image/webp\";\n            } else if (imageType == \"svg\") {\n                imageType = \"image/svg+xml\";\n            } else if (imageType == \"ico\") {\n                imageType = \"image/x-icon\";\n            }\n\n            manifestIcon[\"type\"] = imageType;\n\n            if ($(this).find(\"input\").eq(1).val() != \"\"){\n                manifestIcon[\"sizes\"] = encodeURIComponent($(this).find(\"input\").eq(1).val());\n            }\n            manifestIcons.push(manifestIcon);\n\n        }\n    });\n\n    if (manifestIcons.length > 0) {\n        manifestJSON[\"icons\"] = manifestIcons;\n    }\n\n    manifestJSON[\"display\"] = manifestComponent.find(\".manifest-display\").attr(\"data-value\");\n\n    manifestJSON[\"orientation\"] = manifestComponent.find(\".manifest-orientation\").attr(\"data-value\");\n\n    manifestJSON[\"start_url\"] = manifestComponent.find(\".manifest-start-url\").val();\n\n    manifestJSON[\"scope\"] = manifestComponent.find(\".manifest-scope\").val();\n\n    var manifestRelatedApps = [];\n    manifestComponent.find(\".manifest-related-apps\").find(\"tbody\").find(\"tr\").each(function() {\n        if ($(this).find(\"input\").eq(0).val() != \"\"){\n            var manifestRelatedApp = {};\n            manifestRelatedApp[\"platform\"] = $(this).find(\"input\").eq(0).val();\n            if ($(this).find(\"input\").eq(1).val() != \"\"){\n                manifestRelatedApp[\"id\"] = $(this).find(\"input\").eq(1).val();\n            }\n            if ($(this).find(\"input\").eq(2).val() != \"\"){\n                manifestRelatedApp[\"url\"] = $(this).find(\"input\").eq(2).val();\n            }\n            manifestRelatedApps.push(manifestRelatedApp);\n        }\n    });\n\n    if (manifestRelatedApps.length > 0) {\n        manifestJSON[\"related_applications\"] = manifestRelatedApps;\n        manifestJSON[\"prefer_related_applications\"] = ((manifestComponent.find(\".manifest-pref-related-app\").attr(\"data-value\") == \"yes\") ? true : false);\n    }\n\n    if (manifestComponent.find(\".manifest-lang\").val() != \"\"){\n        manifestJSON[\"lang\"] = manifestComponent.find(\".manifest-lang\").val();\n    }\n\n    manifestData['manifestJSON'] = manifestJSON;\n\n\n    myPage['manifestData'] = manifestData; \n    manifestComponent.remove();\n}</script></div><div class=\"onShowSourceCode\"><script>if (Object.keys(myPage['manifestData']).length > 0){\n\n    var manifestData = myPage['manifestData'];\n\n    var manifestCode = \"\\n\";\n\n    manifestCode += manifestData[\"manifestMetaTheme\"];\n    manifestCode += \"<link rel='manifest' href='data:application/manifest+json,\" + JSON.stringify(manifestData[\"manifestJSON\"]) + \"'>\";\n\n    code = code.replace(/\\<head[\\s\\S]*?\\>/ig,function(h, m) { \n        return h + manifestCode;\n    });\n\n}</script></div></div>"};