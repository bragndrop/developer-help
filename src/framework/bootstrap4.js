frame_data["bootstrap4"] = {"xml":"<div title=\"bootstrap 4.3.1\">\n    <div class=\"components\">\n        <div class=\"allowed-XSS-code\" title=\"Allow these attributes when filtering for XSS\">\n            <script>\n                allowedXSS[\"attributes\"].push(\"aria-hidden\", \"data-toggle\", \"data-target\", \"role\", \"aria-expanded\", \"data-ride\", \"data-interval\", \"data-slide-to\", \"data-slide\", \"aria-controls\", \"aria-labelledby\", \"aria-label\", \"data-dismiss\", \"aria-multiselectable\", \"data-parent\", \"aria-valuenow\", \"aria-valuemin\", \"aria-valuemax\", \"data-placement\", \"data-html\");\n            </script>\n        </div>\n        <div class=\"category\" title=\"Text, Images, Lists, Paragraphs\">\n            <div class=\"component\" title=\"Text\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Text.png\">\n                <div class=\"html-content\"><span class=\"ag-text-edit\"></span></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Text\", \".ag-text-edit\");\n                        designSetting(\"disablePropInspector\", \".ag-text-edit\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n\n                        addCustomButton(inEditor, \"addNewText\", \"Add New Text\", \"\", \"\", \".ag-text-edit\");\n\n                        inEditor.find(\"#addNewText\").click(function (event) {\n                            var elm = selectedElement();\n\n                            var newCol = elm.after('<div class=\"newStuff\"><span class=\"ag-text-edit\"></span></div>');\n                            runUndoAddNew(false);\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, false, true);\n\n                            setTimeout(function () {\n                                selectedElement().click();\n                            }, 200);\n\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n                <div class=\"beforeDrop\">\n                    <script>\n                        // if a link contains only a single text element, then drop it outside the link\n                        if (elmDrag.is(\".ag-text-edit\")) {\n                            if (injectPoint.element.parent().is(\"a\")) {\n                                if (injectPoint.element.parent().children().length == 1) {\n                                    if (injectPoint.element) {\n                                        useCustomDrop = true;\n\n                                        if (injectPoint.position == \"before\") {\n                                            injectPoint.element.closest(\"a\").before(elmDragCode);\n                                        } else if (injectPoint.position == \"after\") {\n                                            injectPoint.element.closest(\"a\").after(elmDragCode);\n                                        } else if (injectPoint.position == \"prepend\") {\n                                            injectPoint.element.closest(\"a\").before(elmDragCode);\n                                        } else if (injectPoint.position == \"append\") {\n                                            injectPoint.element.closest(\"a\").after(elmDragCode);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"cleanUpBeforePublish\">\n                    <script>\n                        pageClone.find(\".ag-text-edit\").each(function () {\n                            $(this).replaceWith($(this).text());\n                        });\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Text Element\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Text_Element.png\">\n                <div class=\"html-content\"><span class=\"ag-text-span\"></span></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        hideClassFromPropInspector(\"ag-text-span\", true);\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n\n                        addCustomButton(inEditor, \"addNewSpan\", \"Add New Text\", \"\", \"\", \".ag-text-span\");\n\n                        inEditor.find(\"#addNewSpan\").click(function (event) {\n                            var elm = selectedElement();\n\n                            var newCol = elm.after('<div class=\"newStuff\"><span class=\"ag-text-span\"></span></div>');\n                            runUndoAddNew(false);\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, false, true);\n\n                            setTimeout(function () {\n                                selectedElement().click();\n                            }, 200);\n\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n            </div>\n            <div class=\"copyComponent\" title=\"container\"></div>\n            <div class=\"component\" title=\"Heading\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Heading_3.png\">\n                <div class=\"html-content\"><div class=\"ag-header h3\">Heading<small> Subtext</small></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Heading\", \".ag-header\");\n                        hideClassFromPropInspector(\"ag-header\", true);\n                        designSetting(\"addTextTo\", \".ag-header\");\n                    </script>\n                    <style>\n                    \t.ag-header:not(.h1):not(.h2):not(.h3):not(.h4):not(.h5):not(.h6){\n                        \tfont-weight: 500;\n                        }\n                    </style>\n                </div>\n                <div class=\"cleanUpBeforePublish\">\n                    <script>\n                        pageClone.find(\".ag-header\").each(function () {\n                            var hTag = \"<h6></h6>\";\n                            if ($(this).hasClass(\"h1\")) {\n                                hTag = \"<h1></h1>\";\n                            } else if ($(this).hasClass(\"h2\")) {\n                                hTag = \"<h2></h2>\";\n                            } else if ($(this).hasClass(\"h3\")) {\n                                hTag = \"<h3></h3>\";\n                            } else if ($(this).hasClass(\"h4\")) {\n                                hTag = \"<h4></h4>\";\n                            } else if ($(this).hasClass(\"h5\")) {\n                                hTag = \"<h5></h5>\";\n                            } else if ($(this).hasClass(\"h6\")) {\n                                hTag = \"<h6></h6>\";\n                            }\n                            var newElem = $(hTag, {html: $(this).html()});\n                            $.each(this.attributes, function() {\n                                newElem.attr(this.name, this.value);\n                            });\n                            newElem.removeClass(\"h1 h2 h3 h4 h5 h6\");\n                            $(this).replaceWith(newElem);\n\n                        });\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"h1,h2,h3,h4,h5,h6\");\n                        list.altCaption = {\"h1\": \"Heading 1\", \"h2\": \"Heading 2\", \"h3\": \"Heading 3\", \"h4\": \"Heading 4\", \"h5\": \"Heading 5\", \"h6\": \"Heading 6\", };\n                        list.hasNone = false;\n                        addListButton(inEditor, \"Size\", list, \".h1,.h2,.h3,.h4,.h5,.h6\");\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrop.closest(\".ag-header\").length > 0) {\n                            if ((dragTag == \"span\") || (dragTag == \"small\")) {\n                            }else{\n                                if (elmDrop.hasClass(\"ag-header\")) {\n                                    isOut = true;\n                                }else{\n                                    finalShow = false;\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Paragraph\" id=\"paragraph\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Paragraph.png\">\n                <div class=\"html-content\"><p>Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nullam id dolor id nibh ultricies vehicula.</p></div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Lead\", \"lead\", \"p\");\n                        addClassButton(inEditor, \"Form Control Static\", \"form-control-static\", \"form p\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Link\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Link.png\">\n                <div class=\"html-content\"><a href=\"\"><span class=\"ag-text-edit\">Links</span></a></div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Stretched\", \"stretched-link\", \"a\");\n\n                        addCustomButton(inEditor, \"scrolToLink\", \"Scroll To\", \"\", \"\", \"a\", \".dropdown-toggle, [data-toggle='tab']\");\n                        showIDlist(inEditor, \"scrolToLink\", \"Scrollable points\", \"*[id]\", \"href\", \"#\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Images\">\n                <div class=\"component\" title=\"Image\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Image-v2.png\">\n                    <div class=\"html-content\"><img class=\"img-fluid\" alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/140x140.png\" ></div>\n                    <div class=\"addButtons\">\n                        <script>\n                            addCustomButton(inEditor, \"imgSrc\", \"Change Image\", \"\", \"\", \"img\", \"\", \"#15CD72\");\n\n                            function undoRedoImageURLChanges(elem, oldImage, newImage) {\n                                // update the \"src\" value in the \"Property Inspector\" box\n                                var srcAttribute = $('.attrName[value=\"src\"]').closest(\"tr\").find(\".attrVal\");\n                                srcAttribute.attr(\"value\", newImage);\n                                srcAttribute.val(newImage);\n                                srcAttribute.attr(\"title\", newImage);\n\n                                elem.attr(\"src\", newImage);\n\n                                undoManager.add({\n                                    undo: function () {\n                                        showIfHidden(elem);\n                                        elem.attr(\"src\", oldImage);\n                                        resetBreadcrumbAndProps(elem, false);\n                                    },\n                                    redo: function () {\n                                        showIfHidden(elem);\n                                        elem.attr(\"src\", newImage);\n                                        resetBreadcrumbAndProps(elem, false);\n\n                                    }\n                                });\n\n                                undoRedoStatus();\n                            }\n\n                            inEditor.find(\"#imgSrc\").click(function (event) {\n\n                                var elem = selectedElement();\n\n                                // \"openImageGallery\" is a function used to open the image gallery\n                                // you must pass an array of affected elements (with a target attribute) for the image url\n                                openImageGallery([\n                                    {\n                                        \"element\": elem,\n                                        \"attribute\": \"src\"\n                                    }\n                                ]);\n\n\n                                $('#ImageGallery').off('click', '.thumbnail');\n\n                                $('#ImageGallery').on('click', '.thumbnail', function (event) {\n\n                                    if ($(this).hasClass(\"imageActive\") == false) {\n\n                                        // \"currentImage\" is an internal variable that tracks the active image url\n                                        var oldImage = currentImage;\n\n                                        // \"getSelectedImage\" is a function which grabs the url of the selected image\n                                        var newImage = getSelectedImage($(this));\n\n                                        undoRedoImageURLChanges(elem, oldImage, newImage);\n\n                                    }\n\n                                });\n\n\n                                $('#UpdateImageURLviaInputBox').off('click');\n\n                                $('#UpdateImageURLviaInputBox').on('click', function (event) {\n\n                                    if (currentImage != $(\"#ImageURLInputBox\").val()) {\n\n                                        // \"currentImage\" is an internal variable that tracks the active image url\n                                        var oldImage = currentImage;\n\n                                        // \"#ImageURLInputBox\" is the input box were the user enters the img URL\n                                        var newImage = $(\"#ImageURLInputBox\").val();\n\n                                        undoRedoImageURLChanges(elem, oldImage, newImage);\n\n                                        setTimeout(function () {\n                                            elem.click();\n                                        }, 200); \n                                    }\n\n                                    $('#SelectImageModal').modal('hide');\n\n                                });\n\n                                event.stopPropagation();\n                            });\n                        </script>\n                    </div>\n                    <div class=\"addButtons\">\n                        <script>\n                            addClassButton(inEditor,\"Responsive\", \"img-fluid\", \"img\");\n                            addClassButton(inEditor,\"Thumbnail\", \"img-thumbnail\", \"img\");\n                            addClassButton(inEditor,\"Rounded\", \"rounded\", \"img\");\n                            addClassButton(inEditor,\"Center\", \"ml-auto mr-auto d-block\", \"img\");\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Image Figures\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Image_Figures.png\">\n                    <div class=\"html-content\"><figure class=\"figure\"><img class=\"figure-img img-fluid ml-auto mr-auto d-block\" alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/140x140.png\" ><figcaption class=\"figure-caption\">A caption for the above image.</figcaption></figure></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            designSetting(\"addOutline\", \"figure\");\n                        </script>\n                    </div>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Address\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Address.png\">\n                <div class=\"html-content\"><address><div><span class=\"ag-text-edit\">ABC, Inc.</span></div><div><span class=\"ag-text-edit\">123 Abc Ave, Suite 600</span></div><div><span class=\"ag-text-edit\">San Francisco, CA 90210</span></div><div><span class=\"ag-text-edit\">P: (123) 456-7890</span></div></address></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Address Line\", \"address > div\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Blockquote\" id=\"blockquote\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Blockquote.png\">\n                <div class=\"html-content\"><blockquote class=\"blockquote\"><p class=\"mb-0\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p><footer class=\"blockquote-footer\">Someone famous in <cite title=\"Source Title\">Source Title</cite></footer></blockquote></div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Blockquote\", \"blockquote\", \"blockquote\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Unordered List\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Unordered_List.png\">\n                <div class=\"html-content\"><ul><li>Lorem ipsum dolor sit amet</li><li>Consectetur adipiscing elit</li><li>Integer molestie lorem at massa</li></ul></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        designSetting(\"addTextTo\", \"ul > li\");\n                        designSetting(\"notContentEditable\", \"ul > li\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Unstyled\", \"list-unstyled\", \"ul\", \".nav, .pagination\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Ordered List\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Ordered_List.png\">\n                <div class=\"html-content\"><ol><li>Lorem ipsum dolor sit amet</li><li>Consectetur adipiscing elit</li><li>Integer molestie lorem at massa</li></ol></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        designSetting(\"addTextTo\", \"ol > li\");\n                        designSetting(\"notContentEditable\", \"ol > li\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Inline List\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Inline_List.png\">\n                <div class=\"html-content\"><ul class=\"list-inline\"><li class=\"list-inline-item\">Lorem ipsum</li><li class=\"list-inline-item\">Phasellus iaculis</li><li class=\"list-inline-item\">Nulla volutpat</li></ul></div>\n            </div>\n            <div class=\"component\" title=\"Description\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Description.png\">\n                <div class=\"html-content\"><dl class=\"row\"><dt class=\"col-sm-3\">Description lists</dt><dd class=\"col-sm-9\"><p>A description list is perfect for defining terms.</p></dd><dt class=\"col-sm-3\">Euismod</dt><dd class=\"col-sm-9\"><p>Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.</p><p>Donec id elit non mi porta gravida at eget metus.</p></dd><dt class=\"col-sm-3\">Malesuada porta</dt><dd class=\"col-sm-9\"><p>Etiam porta sem malesuada magna mollis euismod.</p></dd><dt class=\"col-sm-3 text-truncate\">Truncated term is truncated</dt><dd class=\"col-sm-9\"><p>Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</p></dd></dl></div>\n                <div class=\"whenCopy\">\n                    <script>\n                        //when dt is being copied, then insert a dd tag as well\n                        if (elm.is(\"dt\") == true) { //we are copyng a dt tag\n                            overrideClone = true; //trigger custom clone\n\n                            //get any dd element so that we can match the grid system\n                            var getAnyDD = elm.closest(\"dl\").find(\"dd\");\n\n                            if (getAnyDD.length == 0){\n                                var copyClass = \"\";\n                            }else{\n                                //get first dd element\n                                var anyDD = getAnyDD.eq(0);\n                                //get class value\n                                var classNameDD = anyDD.attr(\"class\");\n                                //clean class value\n                                classNameDD = cleanUpClassValues(classNameDD, false);\n                                //use class value for appended dd\n                                var copyClass = \" class='\" + classNameDD + \"'\";\n                            }\n\n                            //append dd tag\n                            clonedElement.closest(\".newStuff\").append(\"<dd\" + copyClass + \"><p>Description</p></dd>\"); //add a dd tag\n\n\n                            var currentElm = elm;\n                            //this adds our new dt and dd tag after the last occurrence of a dd tag\n                            if (currentElm.is(':last-child') == false) {\n                                while ((currentElm.next().is(\"dd\"))) {\n                                    currentElm = currentElm.next();\n                                    if (currentElm.is(':last-child')) {\n                                        break;\n                                    }\n                                }\n                            }\n                            currentElm.after(clonedElement.parent()); // add the new dt and dd tag\n                        }\n                    </script>\n                </div>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Design Components\">\n            <div class=\"component\" title=\"Container\" id=\"container\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Container.png\">\n                <div class=\"html-content\"><div class=\"ag-container container\"></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Container\", \".ag-container:not(form)\", true);\n\n                        hideClassFromPropInspector(\"ag-container\", true);\n                    </script>\n                    <style>\n                        .ag-container:empty{\n                            padding-bottom: 150px;\n                        }\n                        .ag-container:empty:before  {\n                            content: \"Container\";\n                        }\n                        ag-container.container-fluid:empty:before  {\n                            content: \"Container Fluid\";\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"container,container-fluid\");\n                        addListButton(inEditor, \"Container Type\", list, \".ag-container\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Breadcrumbs\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Breadcrumbs.png\">\n                <div class=\"html-content\"><nav aria-label=\"breadcrumb\" role=\"navigation\"><ol class=\"breadcrumb\"><li class=\"breadcrumb-item\"><a href=\"#\">Home</a></li><li class=\"breadcrumb-item\"><a href=\"#\">Library</a></li><li class=\"breadcrumb-item active\"><span>Data</span></li></ol></nav></div>       \n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName( \"Breadcrumb\", \".breadcrumb\", true);\n                        designSetting(\"notDraggable\", \".breadcrumb a\");\n                        designSetting(\"addOutline\", \".breadcrumb\");\n                        designSetting(\"notContentEditable\", \".breadcrumb li\");\n                        contentEditableButNoToolbar(\".breadcrumb a\");\n                    </script>\n                </div>\n                <div class=\"beforeCopy\">\n                    <script>\n                        if (elm.closest(\".breadcrumb\").length > 0) {//we are in breadcrumb\n                            if (elm.hasClass(\"breadcrumb\") == false) {//but don't select the outer breadcrumb\n                                if (elm.closest(\"li\").length > 0) {//just to make sure there is atleast 1 li\n                                    elm = elm.closest(\"li\");\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Jumbotron\" data-alias=\"banner\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Jumbotron.png\">\n                <div class=\"html-content\"><div class=\"jumbotron jumbotron-fluid\"><div class=\"ag-container container\"><div class=\"ag-header h1 display-3\">Hello, world!</div><p class=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p><hr class=\"my-4\"><p>It uses utility classes for typography and spacing to space content out within the larger container.</p><button type=\"button\" class=\"btn btn-primary btn-lg\">Learn more</button></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Jumbotron\", \".jumbotron\", true);\n                        designSetting(\"addOutline\", \".jumbotron\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Jumbotron Fluid\", \"jumbotron-fluid\", \".jumbotron\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Horizontal Line\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Horizontal_Line.png\">\n                <div class=\"html-content\"><hr class=\"m-t-2 m-b-2\"></div>\n            </div>\n            <div class=\"component\" title=\"Image Carousel\" data-alias=\"banner,slide\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Image_Carousel.png\">\n                <div class=\"html-content\"><div id=\"carousel-with-captions-x\" class=\"carousel slide\" data-ride=\"carousel\" data-interval=\"5000\"><ol class=\"carousel-indicators\"><li data-target=\"#carousel-with-captions-x\" data-slide-to=\"0\" class=\"active\"></li><li data-target=\"#carousel-with-captions-x\" data-slide-to=\"1\"></li><li data-target=\"#carousel-with-captions-x\" data-slide-to=\"2\"></li></ol><div class=\"carousel-inner\"><div class=\"carousel-item active\"><img class=\"d-block w-100\" alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/1220x600.png\"><div class=\"carousel-caption\"><div class=\"carousel-caption\"><div class=\"ag-header h3\">First slide label</div><p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p></div></div></div><div class=\"carousel-item\"><img class=\"d-block w-100\" alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/1220x600xgrey.png\"><div class=\"carousel-caption\"><div class=\"carousel-caption\"><div class=\"ag-header h3\">Second slide label</div><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p></div></div></div><div class=\"carousel-item\"><img class=\"d-block w-100\" alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/1220x600xwhite.png\"><div class=\"carousel-caption\"><div class=\"carousel-caption\"><div class=\"ag-header h3\">Third slide label</div><p>Praesent commodo cursus magna.</p></div></div></div></div><a class=\"carousel-control-prev ag-carousel-control\" href=\"#carousel-with-captions-x\" role=\"button\" data-slide=\"prev\"><span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span><span class=\"sr-only\">Previous</span></a><a class=\"carousel-control-next ag-carousel-control\" href=\"#carousel-with-captions-x\" role=\"button\" data-slide=\"next\"><span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span><span class=\"sr-only\">Next</span></a></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Carousel\", \".carousel\", true);\n                        tagReName(\"Carousel Caption\", \".carousel-caption\");\n                        hideClassFromPropInspector(\"ag-carousel-control\", true);\n                        designSetting(\"unTouchElement\", \".ag-carousel-control, .ag-carousel-control *, .carousel-indicators, .carousel-indicators *, .carousel-inner, .carousel-inner .carousel-item, .carousel-caption, .carousel-inner img\");\n                        designSetting(\"noCopy\", \".carousel\");\n                        designSetting(\"removeOnCopy\", \".carousel\");\n                    </script>\n                    <style>\n                        .carousel-indicators li:empty{\n                            padding: 0px !important;\n                            background-image: none !important;\n                            outline: none !important;\n\n                        }\n                        .carousel-indicators li:empty:before {\n                            content: \"\" !important;\n                        }\n                        .carousel-indicators li::before{\n                        \theight: auto;\n                        }\n                    </style>\n                </div>\n                <div class=\"requireCSS\" data-check=\".hide-carousel-control\">\n                    <style>\n                        .hide-carousel-control > .carousel-control-prev,\n                        .hide-carousel-control > .carousel-control-next\n                        {\n                        \tdisplay: none !important;\n                        }\n                    </style>\n                </div>\n                <div class=\"requireCSS\" data-check=\".hide-carousel-indicators\">\n                    <style>\n                        .hide-carousel-indicators > .carousel-indicators{\n                        \tdisplay: none !important;\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"changeImage\", \"Select Image\", \"\", \"\", \".carousel\", \"\", \"#15CD72\");\n\n                        addClassButton(inEditor, \"Crossfade\", \"carousel-fade\", \".carousel\");\n\n                        addClassButton(inEditor, \"Hide Controls\", \"hide-carousel-control\", \".carousel\");\n                        addClassButton(inEditor, \"Hide Indicators\", \"hide-carousel-indicators\", \".carousel\");\n\n                        addCustomButton(inEditor, \"addSlide\", \"Add Slide\", \"\", \"\", \".carousel\");\n                        addCustomButton(inEditor, \"removeSlide\", \"Remove Slide\", \"\", \"\", \".carousel\");\n\n                        function addCarouselSlide(runUndo) {\n                            var elm = selectedElement();\n\n\n                            var ci = elm.find(\".carousel-indicators\");//add after active indicator in carousel\n                            var sl = elm.find(\".carousel-inner\");//add after slider from carousel                        \n                            var aca = ci.children(\".active\");\n                            var sla = sl.children(\".active\");\n\n                            aca.after(aca.clone(false));\n                            aca.removeClass(\"active\");\n\n                            var clonedElement = sla.clone(false);\n                            var cc = clonedElement.find(\".carousel-caption\");\n\n                            var ccAll = cc.find(\"*\");\n                            ccAll.removeAttr('id');\n                            ccAll.removeClass(internalClassValues().join(\" \"));\n                            cc.html(\"<div class='newStuff'>\" + cc.html() + \"</div>\");\n                            sla.after(clonedElement);\n                            sla.removeClass(\"active\");\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, false, true);\n\n                            var nwaca = ci.children(\".active\");\n                            var nwsla = sl.children(\".active\");\n                            var acaAttachInfo = reAttachHow(nwaca);\n                            var slaAttachInfo = reAttachHow(nwsla);\n\n                            elm.find(\".carousel-indicators\").find(\"li\").each(function (index) {\n                                $(this).attr(\"data-slide-to\", index);\n                            });\n                            if (runUndo == true) {\n                                undoManager.add({\n                                    undo: function () {\n                                        showIfHidden(elm);\n                                        ci.children(\".active\").removeClass(\"active\");\n                                        sl.children(\".active\").removeClass(\"active\");\n                                        aca.addClass(\"active\");\n                                        sla.addClass(\"active\");\n                                        nwaca.detach();\n                                        nwsla.detach();\n                                        elm.find(\".carousel-indicators\").find(\"li\").each(function (index) {\n                                            $(this).attr(\"data-slide-to\", index);\n                                        });\n                                        resetBreadcrumbAndProps(elm, false);\n\n                                    },\n                                    redo: function () {\n                                        showIfHidden(elm);\n                                        ci.children(\".active\").removeClass(\"active\");\n                                        sl.children(\".active\").removeClass(\"active\");\n                                        reAttachNow(acaAttachInfo);\n                                        reAttachNow(slaAttachInfo);\n                                        acaAttachInfo[\"elm\"].addClass(\"active\");\n                                        slaAttachInfo[\"elm\"].addClass(\"active\");\n\n                                        elm.find(\".carousel-indicators\").find(\"li\").each(function (index) {\n                                            $(this).attr(\"data-slide-to\", index);\n                                        });\n                                        resetBreadcrumbAndProps(elm, false);\n                                    }\n                                });\n\n                                undoRedoStatus();\n                            }\n                        }\n\n                        inEditor.find(\"#addSlide\").click(function (event) {\n                            addCarouselSlide(true);\n                            event.stopPropagation();\n                        });\n\n                        function removeCarouselSlide(runUndo) {\n                            var elm = selectedElement();\n\n\n                            var ci = elm.find(\".carousel-indicators\");//remove active indicator in carousel\n                            var sl = elm.find(\".carousel-inner\");//remove slider from carousel\n\n                            if (ci.find(\"li\").length > 1) {\n                                var aca = ci.children(\".active\");\n                                var sla = sl.children(\".active\");\n\n\n                                if (aca.is(':last-child')) {\n                                    var nwaca = aca.parent().find(\"li\").first();\n                                    var nwsla = sla.parent().find(\".carousel-item\").first();\n                                } else {\n                                    var nwaca = aca.next();\n                                    var nwsla = sla.next();\n                                }\n\n                                nwaca.addClass(\"active\");\n                                nwsla.addClass(\"active\");\n\n                                var acaAttachInfo = reAttachHow(aca);\n                                var slaAttachInfo = reAttachHow(sla);\n                                aca.detach();\n                                sla.detach();\n\n                                elm.find(\".carousel-indicators\").find(\"li\").each(function (index) {\n                                    $(this).attr(\"data-slide-to\", index);\n                                });\n                                if (runUndo == true) {\n                                    undoManager.add({\n                                        undo: function () {\n\n                                            showIfHidden(elm);\n                                            ci.children(\".active\").removeClass(\"active\");\n                                            sl.children(\".active\").removeClass(\"active\");\n                                            reAttachNow(acaAttachInfo);\n                                            reAttachNow(slaAttachInfo);\n                                            acaAttachInfo[\"elm\"].addClass(\"active\");\n                                            slaAttachInfo[\"elm\"].addClass(\"active\");\n\n                                            elm.find(\".carousel-indicators\").find(\"li\").each(function (index) {\n                                                $(this).attr(\"data-slide-to\", index);\n                                            });\n                                            resetBreadcrumbAndProps(elm, false);\n                                        },\n                                        redo: function () {\n                                            showIfHidden(elm);\n                                            ci.children(\".active\").removeClass(\"active\");\n                                            sl.children(\".active\").removeClass(\"active\");\n                                            nwaca.addClass(\"active\");\n                                            nwsla.addClass(\"active\");\n                                            aca.detach();\n                                            sla.detach();\n                                            elm.find(\".carousel-indicators\").find(\"li\").each(function (index) {\n                                                $(this).attr(\"data-slide-to\", index);\n                                            });\n                                            resetBreadcrumbAndProps(elm, false);\n\n                                        }\n                                    });\n\n                                    undoRedoStatus();\n                                }\n\n                            }\n                        }\n\n                        inEditor.find(\"#removeSlide\").click(function (event) {\n\n                            removeCarouselSlide(true);\n                            event.stopPropagation();\n                        });\n\n\n                        function undeRedoSlideImageChanges(elem, slideImage, oldImage, newImage) {\n                            slideImage.attr(\"src\", newImage);\n\n                            undoManager.add({\n                                undo: function () {\n                                    showIfHidden(elem);\n                                    var itm = slideImage.closest(\".carousel-item\");\n                                    if (itm.length > 0) {\n                                        if (itm.hasClass(\"active\") == false) {\n                                            var carsel = slideImage.closest(\".carousel\");\n                                            if (carsel.length > 0) {\n                                                carsel.find(\".active\").removeClass(\"active\");\n                                                itm.addClass(\"active\");\n                                                carsel.find(\"ol.carousel-indicators\").find(\"li\").eq(itm.index()).addClass(\"active\");\n                                            }\n                                        }\n                                    }\n\n                                    slideImage.attr(\"src\", oldImage);\n                                    resetBreadcrumbAndProps(elem, false);\n                                },\n                                redo: function () {\n                                    showIfHidden(elem);\n                                    var itm = slideImage.closest(\".carousel-item\");\n                                    if (itm.length > 0) {\n                                        if (itm.hasClass(\"active\") == false) {\n                                            var carsel = slideImage.closest(\".carousel\");\n                                            if (carsel.length > 0) {\n                                                carsel.find(\".active\").removeClass(\"active\");\n                                                itm.addClass(\"active\");\n                                                carsel.find(\"ol.carousel-indicators\").find(\"li\").eq(itm.index()).addClass(\"active\");\n                                            }\n                                        }\n                                    }\n                                    slideImage.attr(\"src\", newImage);\n                                    resetBreadcrumbAndProps(elem, false);\n\n                                }\n                            });\n\n                            undoRedoStatus();\n                        }\n\n                        inEditor.find(\"#changeImage\").click(function (event) {\n\n                            var elem = selectedElement();\n                            var slideImage = elem.find(\".carousel-inner\").find(\".active\").find(\"img\");\n\n                            // \"openImageGallery\" is a function used to open the image gallery\n                            // you must pass an array of affected elements (with a target attribute) for the image url\n                            openImageGallery([\n                                {\n                                    \"element\": slideImage,\n                                    \"attribute\": \"src\"\n                                }\n                            ]);\n\n                            $('#ImageGallery').off('click', '.thumbnail');\n\n                            $('#ImageGallery').on('click', '.thumbnail', function (event) {\n\n                                if ($(this).hasClass(\"imageActive\") == false) {\n\n                                    // \"currentImage\" is an internal variable that tracks the active image url\n                                    var oldImage = currentImage;\n\n                                    // \"getSelectedImage\" is a function which grabs the url of the selected image\n                                    var newImage = getSelectedImage($(this));\n\n                                    undeRedoSlideImageChanges(elem, slideImage, oldImage, newImage);\n                                }\n\n                            });\n\n                            $('#UpdateImageURLviaInputBox').off('click');\n\n                            $('#UpdateImageURLviaInputBox').on('click', function (event) {\n\n                                if (currentImage != $(\"#ImageURLInputBox\").val()) {\n\n                                    // \"currentImage\" is an internal variable that tracks the active image url\n                                    var oldImage = currentImage;\n\n                                    // \"#ImageURLInputBox\" is the input box were the user enters the img URL\n                                    var newImage = $(\"#ImageURLInputBox\").val();\n\n                                    undeRedoSlideImageChanges(elem, slideImage, oldImage, newImage);\n\n                                    setTimeout(function () {\n                                        elem.click();\n                                    }, 200); \n                                }\n\n                                $('#SelectImageModal').modal('hide');\n\n                            });\n\n                            event.stopPropagation();\n\n                        });\n                    </script>\n                </div>\n                <div class=\"afterDrop\" id=\"stopCarouselSlide\">\n                    <script>\n                        //stop new Carousel from sliding\n                        designWindow().stopCarousel();\n\n                        //adds unique id to every new navbar\n                        var id = \"carousel-with-captions-\";\n                        var i = uniqueID(id);\n                        var elm = designFrame.find(\"#\" + id + \"x\");\n                        elm.attr(\"id\", id + i);\n                        elm.find(\".carousel-indicators\").find(\"li\").each(function () {\n                            $(this).attr(\"data-target\", \"#\" + id + i);\n                        });\n                        elm.find(\".ag-carousel-control\").each(function () {\n                            $(this).attr(\"href\", \"#\" + id + i);\n                        });\n\n                    </script>\n                </div>\n                <div class=\"afterUnHide\">\n                    <script>\n                        var itm = visibleElm.closest(\".carousel-item\");\n                        if (itm.length > 0) {\n                            if (itm.hasClass(\"active\") == false) {\n                                var carsel = visibleElm.closest(\".carousel\");\n                                if (carsel.length > 0) {\n                                    carsel.find(\".active\").removeClass(\"active\");\n                                    itm.addClass(\"active\");\n                                    carsel.find(\"ol.carousel-indicators\").find(\"li\").eq(itm.index()).addClass(\"active\");\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrop.hasClass(\"carousel\")) { // is drop elem a carousel\n                            isOut = true; // therefore never drop inside\n                        }\n\n                        if (elmDrop.hasClass(\"carousel-caption\")) { //is drop elem carousel caption box\n                            isOut = false; //drop inside\n                        }\n\n                        // A carousel can not be dropped into another carousel\n                        if (elmDrop.closest(\".carousel\").length > 0) {\n                            if (elmDrag.hasClass(\"carousel\")) {\n                                if (elmDrop.hasClass(\"carousel\")) {\n                                    isOut = true;\n                                }else{\n                                    finalShow = false;\n                                }  \n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"copyComponent\" title=\"blockquote\"></div>\n            <div class=\"component\" title=\"Table\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Table.png\">\n                <div class=\"html-content\"><table class=\"table table-responsive-md\"><thead><tr><th scope=\"col\">#</th><th scope=\"col\">Col</th><th scope=\"col\">Col</th><th scope=\"col\">Col</th></tr></thead><tbody><tr><th scope=\"row\">1</th><td>Cell</td><td>Cell</td><td>Cell</td></tr><tr><th scope=\"row\">2</th><td>Cell</td><td>Cell</td><td>Cell</td></tr><tr><th scope=\"row\">3</th><td>Cell</td><td>Cell</td><td>Cell</td></tr></tbody></table></div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"table-responsive,table-responsive-sm,table-responsive-md,table-responsive-lg,table-responsive-xl\");\n                        list.altCaption = {\"table-responsive\": \"Responsive on all screen sizes\", \"table-responsive-sm\": \"Responsive on Mobile screens\", \"table-responsive-md\": \"Responsive on Mobile (Landscape) screens or smaller\", \"table-responsive-lg\": \"Responsive on Tablet screens or smaller\", \"table-responsive-xl\": \"Responsive on Desktop screens or smaller\"};\n                        addListButton(inEditor, \"Responsive\", list, \"table\");\n\n                        addClassButton(inEditor, \"Dark\", \"table-dark\", \"table\");\n\n                        var list = new listOption(\"table-active,table-primary,table-secondary,table-success,table-warning,table-danger,table-info,table-light,table-dark\");\n                        addListButton(inEditor, \"Style\", list, \"table, tr, td\");\n\n                        var list = new listOption(\"table-bordered,table-borderless\");\n                        addListButton(inEditor, \"Border\", list, \"table\");\n\n                        addClassButton(inEditor, \"Striped\", \"table-striped\", \"table\");\n                        addClassButton(inEditor, \"Hover\", \"table-hover\", \"table\");\n                        addClassButton(inEditor, \"Small\", \"table-sm\", \"table\");\n\n                        var list = new listOption(\"thead-dark,thead-light\");\n                        addListButton(inEditor, \"Head Color\", list, \"thead\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Media Object\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Media_Object.png\">\n                <div class=\"html-content\"><div class=\"media\"><img class=\"align-self-start mr-3\" alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/64.png\"><div class=\"media-body\"><div class=\"ag-header h5 mt-0\">Media heading</div><p>Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin commodo. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.</p></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Media\", \".media\", true);\n                        tagReName(\"Media Body\", \".media-body\");\n                        designSetting(\"addOutline\", \".media\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"align-self-start,align-self-center,align-self-end\");\n                        list.altCaption = {\"align-self-start\": \"Top\", \"align-self-center\": \"Middle\", \"align-self-end\": \"Bottom\"};\n                        addListButton(inEditor, \"Vertical Align\", list, \".media > img\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Pagination\" id=\"Pagination\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Pagination.png\">\n                <div class=\"html-content\"><nav aria-label=\"Page navigation\"><ul class=\"pagination\"><li class=\"page-item\"><a class=\"page-link\" href=\"#\" aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span><span class=\"sr-only\">Previous</span></a></li><li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li><li class=\"page-item\"><a class=\"page-link\" href=\"#\">2</a></li><li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li><li class=\"page-item\"><a class=\"page-link\" href=\"#\">4</a></li><li class=\"page-item\"><a class=\"page-link\" href=\"#\">5</a></li><li class=\"page-item\"><a class=\"page-link\" href=\"#\" aria-label=\"Next\"><span aria-hidden=\"true\">&raquo;</span><span class=\"sr-only\">Next</span></a></li></ul></nav></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Pagination\", \".pagination\");\n                        designSetting(\"notDroppable\", \".pagination > li, .pagination > li *\");\n                        contentEditableButNoToolbar(\".pagination > li > a\");\n                        designSetting(\"showWhenEmpty\", \".pagination\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"pagination-lg,pagination-sm\");\n                        list.altCaption = {\"pagination-lg\": \"Large\", \"pagination-sm\": \"Small\"};\n                        addListButton(inEditor, \"Sizing\", list, \".pagination\");\n\n                        var list = new listOption(\"justify-content-center,justify-content-end\");\n                        list.altCaption = {\"justify-content-center\": \"Center\", \"justify-content-end\": \"Right\"};\n                        addListButton(inEditor, \"Align\", list, \".pagination\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Active\", \"active\", \".pagination > li > a\", \"\", 'selectedElement().closest(\"li\")');\n                        addClassButton(inEditor, \"Disable\", \"disabled\", \".pagination > li > a\", \"\", 'selectedElement().closest(\"li\")');\n                    </script>\n                </div>\n                <div class=\"afterDrop\">\n                    <script>\n                        setTimeout(function () {\n                            selectedElement().find(\"ul.pagination\").eq(0).click();\n                        }, 100);\n                    </script>\n                </div>\n                <div class=\"beforeCopy\">\n                    <script>\n                        if (elm.closest(\".pagination\").length > 0) {//we are in pagination\n                            if (elm.hasClass(\"pagination\") == false) {//but don't select the outer pagination\n                                if (elm.closest(\"li\").length > 0) {//just to make sure there are at least 1 li\n                                    elm = elm.closest(\"li\");\n                                    runClick = false;//don't click the new item yet\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"afterCopy\">\n                    <script>\n                        if (elm.closest(\".pagination\").length > 0) {//we are in pagination\n                            if (elm.is(\"li\")) {\n                                focusElement(elm.next().find(\"a\"));\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"IFrame\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/IFrame.png\">\n                <div class=\"html-content\"><div src=\"...\" class=\"embed-responsive embed-responsive-16by9\"><div class=\"embed-responsive-item\"></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"IFrame\", \".embed-responsive\");\n                        designSetting(\"unTouchElement\", \".embed-responsive-item\");\n                    </script>\n                    <style>\n                        .embed-responsive-item{\n                            width:100%;\n                            height:100%;\n                            background-color: #EEEEEE;\n                            padding: 0px !important;\n                            -webkit-box-shadow: inset 0px 0px 35px 4px rgba(0,0,0,0.06);\n                            -moz-box-shadow: inset 0px 0px 35px 4px rgba(0,0,0,0.06);\n                            box-shadow: inset 0px 0px 35px 4px rgba(0,0,0,0.06);\n                        }\n\n                        .embed-responsive-item:empty:before {\n                            content:none;\n                        }\n                        .embed-responsive-item:after{\n                            content: \"IFrame\";\n                            display: block;\n                            position: absolute;\n                            top: 40%;\n                            width: 100%;\n                            height: 100%;\n                            text-align: center;\n                            color: #C0C0C0;\n                        }\n                    </style>\n                </div> \n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"embed-responsive-21by9,embed-responsive-16by9,embed-responsive-4by3,embed-responsive-1by1\");\n                        list.prefixMatch = \"embed-responsive-\";\n                        list.hasNone = false;\n                        addListButton(inEditor, \"Aspect Ratio\", list, \".embed-responsive\");\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrop.hasClass(\"embed-responsive\")) {//is drop elem embed, therefore put it outside\n                            isOut = true;\n                        }\n                    </script>\n                </div>\n                <div class=\"cleanUpBeforePublish\">\n                    <script>\n                        pageClone.find(\".embed-responsive\").each(function () {\n                            //replace the div with an iFrame when publishing\n                            $(this).html('<iframe class=\"embed-responsive-item\" src=\"' + $(this).attr(\"src\") + '\"></iframe>');\n                            $(this).removeAttr(\"src\");\n                        });\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"List Group\">\n                <div class=\"component\" title=\"List (Basic)\" data-alias=\"side\" id=\"listGroupBasic\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/List_Basic.png\">\n                    <div class=\"html-content\"><ul class=\"list-group\"><li class=\"list-group-item\">Cras justo odio</li><li class=\"list-group-item\">Dapibus ac facilisis in</li><li class=\"list-group-item\">Morbi leo risus</li><li class=\"list-group-item\">Porta ac consectetur ac</li><li class=\"list-group-item\">Vestibulum at eros</li></ul></div>\n                </div>\n                <div class=\"component\" title=\"List (Linked Items)\" data-alias=\"side\" id=\"listGroupLinked\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/List_Linked_Items.png\">\n                    <div class=\"html-content\"><div class=\"list-group\"><a href=\"#\" class=\"list-group-item list-group-item-action\"> Cras justo odio </a><a href=\"#\" class=\"list-group-item list-group-item-action\">Dapibus ac facilisis in</a><a href=\"#\" class=\"list-group-item list-group-item-action\">Morbi leo risus</a><a href=\"#\" class=\"list-group-item list-group-item-action\">Porta ac consectetur ac</a><a href=\"#\" class=\"list-group-item list-group-item-action\">Vestibulum at eros</a></div></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"List Group\", \".list-group\");\n                        designSetting(\"notDraggable\", \".list-group .list-group-item\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Active\", \"active\", \"a.list-group-item, li.list-group-item\");\n                        addClassButton(inEditor, \"Disabled\", \"disabled\", \"a.list-group-item, li.list-group-item\");\n                        var list = new listOption(\"list-group-item-primary,list-group-item-secondary,list-group-item-success,list-group-item-danger,list-group-item-warning,list-group-item-info,list-group-item-light,list-group-item-dark\");\n                        list.prefixMatch = \"list-group-item-\";\n                        addListButton(inEditor, \"Type\", list, \"a.list-group-item, li.list-group-item\");\n\n                        var list = new listOption(\"justify-content-around,justify-content-between,justify-content-start,justify-content-center,justify-content-end\");\n                        list.altCaption = {\"list-group-horizontal\": \"All Screen Sizes\", \"list-group-horizontal-sm\": \"Mobile (Landscape) screens or wider\", \"list-group-horizontal-md\": \"Tablet screens or wider\", \"list-group-horizontal-lg\": \"Desktop screens or wider\", \"list-group-horizontal-xl\": \"Large Device screens or wider\"};\n                        addListButton(inEditor, \"Horizontal\", list, \".list-group\");\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrag.hasClass(\"list-group-item\")) {  //draggable is list-group-items\n                            if (elmDrop.hasClass(\"list-group-item\")) {  //droppable is list-group-items therefor make it drop outside\n                                isOut = true;\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Badge\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Tags.png\">\n                <div class=\"html-content\"><span class=\"badge badge-primary\">Danger</span></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Badge\", \".badge\");\n                    </script>\n                    <style>\n                        .badge:empty{\n                            display: inline-block;\n                        }\n                        .badge:after{\n                            content: \"\\00a0\";\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Rounded\", \"badge-pill\", \".badge\");\n                        var list = new listOption(\"badge-primary,badge-secondary,badge-success,badge-danger,badge-warning,badge-info,badge-light,badge-dark\");\n                        list.hasNone = false;\n                        addListButton(inEditor, \"Type\", list, \".badge\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Footer\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Footer.png\">\n                <div class=\"html-content\"><div class=\"footer pt-1 pb-1\"><div class=\"ag-container container\"><p class=\"mb-0 text-muted\">Copyright 1999-2099 by ...</p></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Footer\", \"div.footer\");\n                    </script>\n                </div>\n                <div class=\"requireCSS\" data-check=\".footer\">\n                    <style>\n                        .footer {\n                            width: 100%;\n                            background-color: #f5f5f5;\n                        }\n                    </style>\n                </div>\n                <div class=\"addJStoFinal\" data-check=\".footer\">\n                    <script>\n                        $(function () {\n                            if ($(\".footer\").length > 0) {\n                                $(\"html\").css(\"position\", \"relative\");\n                                $(\"html\").css(\"min-height\", \"100%\");\n                                $(\"body\").css(\"margin-bottom\", $(\".footer\").outerHeight(true));\n                                $(\".footer\").css(\"position\", \"absolute\");\n                                $(\".footer\").css(\"bottom\", \"0\");\n                            }\n                        });\n                    </script>\n                </div>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Responsive Grid\">\n            <div class=\"component\" title=\"Basic Grid\" data-alias=\"responsive\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Basic_Grid.png\">\n                <div class=\"html-content\"><div class=\"ag-container container\"><div class=\"row\"><div class=\"col-12 col-md-3 col-sm-6\"></div></div></div></div>\n                <div class=\"afterDrop\" id=\"selectFirstColumn\">\n                    <script>\n                        setTimeout(function () {\n                            focusElement(selectedElement().find(\".row\").children(\"div\").eq(0));\n                            setTimeout(function () {\n                                inEditor.find(\"#editColumnWidth\").click();\n                            }, 200);    \n                        }, 100);\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"12 Cell Grid\" data-alias=\"responsive\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/12_Cell_Grid.png\">\n                <div class=\"html-content\"><div class=\"ag-container container\"><div class=\"row\"><div class=\"col-12\"></div></div></div></div>\n                <div class=\"afterDropCopy\" title=\"selectFirstColumn\"></div>\n            </div>\n            <div class=\"component\" title=\"6-6 Cell Grid\" data-alias=\"responsive\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/6-6_Cell_Grid.png\">\n                <div class=\"html-content\"><div class=\"ag-container container\"><div class=\"row\"><div class=\"col-md-6\"></div><div class=\"col-md-6\"></div></div></div></div>\n                <div class=\"afterDropCopy\" title=\"selectFirstColumn\"></div>\n            </div>\n            <div class=\"component\" title=\"8-4 Cell Grid\" data-alias=\"responsive\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/8-4_Cell_Grid.png\">\n                <div class=\"html-content\"><div class=\"ag-container container\"><div class=\"row\"><div class=\"col-md-8\"></div><div class=\"col-md-4\"></div></div></div></div>\n                <div class=\"afterDropCopy\" title=\"selectFirstColumn\"></div>\n            </div>\n            <div class=\"component\" title=\"4-4-4 Cell Grid\" data-alias=\"responsive\" id=\"grid444\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/4-4-4_Cell_Grid.png\">\n                <div class=\"html-content\"><div class=\"ag-container container\"><div class=\"row\"><div class=\"col-md-4\"></div><div class=\"col-md-4\"></div><div class=\"col-md-4\"></div></div></div></div>\n                <div class=\"afterDropCopy\" title=\"selectFirstColumn\"></div>\n            </div>\n            <div class=\"component\" title=\"2-6-4 Cell Grid\" data-alias=\"responsive\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/2-6-4_Cell_Grid.png\">\n                <div class=\"html-content\"><div class=\"ag-container container\"><div class=\"row\"><div class=\"col-md-2\"></div><div class=\"col-md-6\"></div><div class=\"col-md-4\"></div></div></div></div>\n                <div class=\"afterDropCopy\" title=\"selectFirstColumn\"></div>\n            </div>\n            <div class=\"runOnLoad\">\n                <script>\n                    var bootCol = \".col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col, .col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm, .col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md, .col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg, .col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl, .col-xl-auto\";\n\n                    //had to do this to avoid labels, dd and dt being re-named to column\n                    tagReName(\"Label\", bootCol.split(\".\").join(\"label.\"));\n                    tagReName(\"Controls\", bootCol.split(\".\").join(\".form-group > div.\"));\n                    tagReName(\"Description\", bootCol.split(\".\").join(\"dd.\"));\n                    tagReName(\"Description Term\", bootCol.split(\".\").join(\"dt.\"));\n\n                    tagReName(\"Row\", \"div.row\", false, \"boot-row\");\n                    tagReName(\"Column\", bootCol, true, \"boot-col\");\n\n                </script>\n            </div>\n            <div class=\"addButtons\">\n                <script>\n                    var list = new listOption(\"justify-content-around,justify-content-between,justify-content-start,justify-content-center,justify-content-end\");\n                    list.altCaption = {\"justify-content-around\": \"Around\", \"justify-content-between\": \"Between\", \"justify-content-start\": \"Start\", \"justify-content-center\": \"Center\", \"justify-content-end\": \"End\" };\n                    addListButton(inEditor, \"H-align\", list, \".row\");\n\n                    var list = new listOption(\"align-items-start,align-items-center,align-items-end\");\n                    list.altCaption = {\"align-items-start\": \"Start\", \"align-items-center\": \"Center\", \"align-items-end\": \"End\" };\n                    addListButton(inEditor, \"V-align\", list, \".row\");\n\n                    addClassButton(inEditor, \"No Gutters\", \"no-gutters\", \".row\")\n                </script>\n            </div>\n            <div class=\"addButtons\">\n                <div id=\"bootstrapGridOptions\"><form><div class=\"deviceTypeSelectorControl\"><div class=\"form-group\"><label class=\"control-label\">Device Screen Size:</label><select class=\"form-control deviceTypeSelector\"><option value=\"xl\">Large Device screens and wider</option><option value=\"lg\" selected=\"selected\">Desktop screens and wider</option><option value=\"md\">Tablet screens and wider<option value=\"sm\">Mobile (Landscape) screens and wider</option><option value=\"xs\">All screen sizes</option></select></div></div><div class=\"form-group\"><label class=\"control-label\"><span id=\"col-label\">Column Width</span>: <span id=\"col-slider-val\"></span></label><div id=\"col-slider\"></div></div></form></div>\n                <script>\n                    addCustomButton(inEditor, \"editColumnWidth\", \"Width\", \"\", \"\", getVar[\"boot-col\"]);\n                    addCustomButton(inEditor, \"editColumnOffset\", \"Offset\", \"\", \"\", getVar[\"boot-col\"]);\n                    addCustomButton(inEditor, \"editColumnOrder\", \"Order\", \"\", \"\", getVar[\"boot-col\"]);\n\n                    var gridOptionsHTML = controlLayout.find(\"#bootstrapGridOptions\").html();\n                    var gridOptions = buildCustomProp(\"#column-prop\", gridOptionsHTML);\n\n                    function getColCSS(ds) {\n                        var deviceID = ds.val();\n                        if (deviceID == \"xs\"){\n                            deviceID = \"\";\n                        }else{\n                            deviceID = \"-\" + deviceID;\n                        }\n                        var elm = selectedElement();\n                        var id = colSlideType;\n                        var nm = 0\n                        var min = 0;\n                        var max = 0;\n                        var cssVal = \"\";\n                        var colLabel = \"\";\n                        var colVal = \"Not Set\";\n\n                        switch(id) {\n                            case \"editColumnWidth\":\n                                cssVal = \"col\" + deviceID + \"-\";\n                                colLabel = \"Column Width\";\n                                min = 0;\n                                max = 13;\n                                break;\n                            case \"editColumnOffset\":\n                                cssVal = \"offset\" + deviceID + \"-\";\n                                colLabel = \"Offset\";\n                                min = 0;\n                                max = 11;\n                                break;\n                            case \"editColumnOrder\":\n                                cssVal = \"order\" + deviceID + \"-\";\n                                colLabel = \"Order\";\n                                min = 0;\n                                max = 12;\n                                break;\n                        }\n\n                        for (var i = min; i <= max; i++) {\n                            if (elm.hasClass(cssVal + i)) {\n                                nm = i;\n                                colVal  = i;\n                                break;\n                            }\n                        }\n\n                        if (id == \"editColumnWidth\"){\n                            if (elm.hasClass(\"col\" + deviceID)) {\n                                nm = 13;\n                                colVal  = \"Fit Space\";\n                            }else if (elm.hasClass(\"col\" + deviceID + \"-auto\")) {\n                                nm = 0;\n                                colVal  = \"Fit Content\";\n                            }\n                        }\n\n                        if (id == \"editColumnOrder\"){\n                            if (nm == 0){\n                                colVal  = \"Initial\";\n                            }\n                        }\n\n                        $(\"#col-label\").text(colLabel);\n                        $(\"#col-slider-val\").text(colVal);\n                        columnSlider.slider(\"option\", \"min\", min);\n                        columnSlider.slider(\"option\", \"max\", max);\n                        columnSlider.slider(\"option\", \"value\", nm);\n\n                    }\n\n                    var deviceTypeSelector = gridOptions.find(\".deviceTypeSelector\");\n\n                    function deviceSelected() {\n\n                        var deviceID = deviceTypeSelector.val();\n                        var s = \"\";\n\n                        switch(deviceID) {\n                            case \"xl\":\n                                s = \"large_screen\";\n                                break;\n                            case \"lg\":\n                                s = \"desktop\";\n                                break;\n                            case \"md\":\n                                s = \"tablet\";\n                                break;\n                            case \"sm\":\n                                s = \"mobile_landscape\";\n                                break;\n                            default:\n                                s = \"mobile_portrait\";\n                                break;\n                        }\n\n                        return s;\n\n                    }\n\n                    deviceTypeSelector.change(function () {\n                        var ds = deviceSelected();\n                        getColCSS(deviceTypeSelector);\n                        $(\"#viewportList\").val(ds);\n                        changeViewport(ds);\n                    });\n\n                    function setSlider(id, nm){\n\n                        var colLabel = \"\";\n                        var colVal = \"Not Set\";\n                        var min = 0;\n                        var max = 12;\n\n                        switch(id) {\n                            case \"editColumnWidth\":\n                                colLabel = \"Column Width\";\n                                min = 0;\n                                max = 13;\n                                break;\n                            case \"editColumnOffset\":\n                                colLabel = \"Offset\";\n                                min = 0;\n                                max = 11;\n                                break;\n                            case \"editColumnOrder\":\n                                colLabel = \"Order\";\n                                min = 0;\n                                max = 12;\n                                break;\n                        }\n\n                        colVal = nm;\n\n                        if (id == \"editColumnWidth\"){\n                            if (nm == 13) {\n                                colVal  = \"Fit Space\";\n                            }else if (nm == 0) {\n                                colVal  = \"Fit Content\";\n                            }\n                        }\n\n                        if (id == \"editColumnOrder\"){\n                            if (nm == 0){\n                                colVal  = \"Initial\";\n                            }\n                        }\n\n                        $(\"#col-label\").text(colLabel);\n                        $(\"#col-slider-val\").text(colVal);  \n                        columnSlider.slider(\"option\", \"min\", min);\n                        columnSlider.slider(\"option\", \"max\", max);\n                        columnSlider.slider(\"option\", \"value\", nm);\n                    }\n\n                    var colSlideType = \"editColumnWidth\";\n                    var colSlideOldVal = \"\";\n                    var colSlideNewVal = \"\";\n                    var colSlideOldIndex = 0;\n                    var colSlidePrefx = \"\";\n\n                    var columnSlider = gridOptions.find(\"#col-slider\").slider({\n                        min: 0,\n                        max: 13,\n                        range: \"min\",\n                        start: function (event, ui) {\n\n                            colSlideOldVal = \"\";\n                            colSlideOldIndex = ui.value;\n                            var deviceID = gridOptions.find(\".deviceTypeSelector\").val();\n                            if (deviceID == \"xs\"){\n                                deviceID = \"\";\n                            }else{\n                                deviceID = \"-\" + deviceID;\n                            }\n                            var id = colSlideType;\n                            var elm = selectedElement();\n\n                            switch(id) {\n                                case \"editColumnWidth\":\n                                    colSlidePrefx = \"col\" + deviceID;\n                                    break;\n                                case \"editColumnOffset\":\n                                    colSlidePrefx = \"offset\" + deviceID;\n                                    break;\n                                case \"editColumnOrder\":\n                                    colSlidePrefx = \"order\" + deviceID;\n                                    break;\n                            }\n\n                            for (var i = 0; i <= 13; i++) {\n                                if (elm.hasClass(colSlidePrefx + \"-\" + i)) {\n                                    colSlideOldVal = colSlidePrefx + \"-\" + i;\n                                    break;\n                                }\n                            }\n\n                            if (id == \"editColumnWidth\"){\n                                if (elm.hasClass(colSlidePrefx)) {\n                                    colSlideOldVal = colSlidePrefx;\n                                }else if (elm.hasClass(colSlidePrefx + \"-auto\")) {\n                                    colSlideOldVal = colSlidePrefx + \"-auto\";\n                                }\n                            }\n                        },\n                        slide: function (event, ui) {\n\n                            var elm = selectedElement();\n                            var sufx = ui.value;\n                            var colVal = sufx;\n                            var id = colSlideType;\n\n                            for (var i = 0; i <= 13; i++) {\n                                elm.removeClass(colSlidePrefx + \"-\" + i);\n                            }\n                            if (id == \"editColumnWidth\"){\n                                elm.removeClass(colSlidePrefx);\n                                elm.removeClass(colSlidePrefx + \"-auto\");\n                            }\n\n                            colSlideNewVal = \"\";\n                            if (id == \"editColumnWidth\") {\n                                if (Number(sufx) == 0) {\n                                    colSlideNewVal = colSlidePrefx + \"-auto\";\n                                    colVal = \"Fit Content\";\n                                }else if (Number(sufx) == 13) {\n                                    colSlideNewVal = colSlidePrefx;\n                                    colVal = \"Fit Space\";\n                                }else{\n                                    colSlideNewVal = colSlidePrefx + \"-\" + sufx;\n                                }\n                            }else if (id == \"editColumnOrder\") {\n                                if (Number(sufx) == 0) {\n                                    colSlideNewVal = \"\";\n                                    colVal = \"Initial\";\n                                }else{\n                                    colSlideNewVal = colSlidePrefx + \"-\" + sufx;\n                                }\n                            } else {\n                                colSlideNewVal = colSlidePrefx + \"-\" + sufx;\n                            }\n\n                            if (colSlideNewVal != \"\") {\n                                elm.addClass(colSlideNewVal);\n                            }\n\n                            $(\"#col-slider-val\").text(colVal);\n                        },\n                        stop: function (event, ui) {\n\n                            var elm = selectedElement();\n                            updateClassValue(elm);\n\n                            if (colSlideOldVal != colSlideNewVal) {\n\n                                var tempOld = colSlideOldVal;\n                                var tempNew = colSlideNewVal;\n                                var oldIndex = colSlideOldIndex;\n                                var newIndex = ui.value;\n\n\n\n                                var id = colSlideType;\n                                var ds = deviceSelected();\n                                var dt = deviceTypeSelector.val();\n                                undoManager.add({\n                                    undo: function () {\n                                        eastPanelShowContent(\"#column-prop\");\n                                        showIfHidden(elm);\n                                        elm.removeClass(tempNew);\n\n                                        if (tempOld != \"\") {\n                                            elm.addClass(tempOld);\n                                        }\n\n                                        setSlider(id, oldIndex);\n\n                                        deviceTypeSelector.val(dt);\n                                        $(\"#viewportList\").val(ds);\n                                        changeViewport(ds);\n                                        updateClassValue(elm);\n                                        resetBreadcrumbAndProps(elm, false, true);\n\n                                    },\n                                    redo: function () {\n                                        eastPanelShowContent(\"#column-prop\");\n                                        showIfHidden(elm);\n                                        elm.addClass(tempNew);\n\n                                        if (tempOld != \"\") {\n                                            elm.removeClass(tempOld);\n                                        }\n\n                                        setSlider(id, newIndex);\n                                        deviceTypeSelector.val(dt);\n                                        $(\"#viewportList\").val(ds);\n                                        changeViewport(ds);\n                                        updateClassValue(elm);\n                                        resetBreadcrumbAndProps(elm, false, true);\n\n                                    }\n                                });\n\n                                undoRedoStatus();\n                            }\n\n                        }\n                    });\n\n                    inEditor.find(\"#editColumnWidth, #editColumnOffset, #editColumnOrder\").click(function (event) {\n\n                        var elm = selectedElement();\n                        var id = $(this).attr(\"id\");\n\n                        colSlideType = id;\n\n                        var dv = $(\"#viewportList\").val();\n\n                        switch(dv) {\n                            case \"large_screen\":\n                                deviceTypeSelector.val(\"xl\");\n                                break;\n                            case \"desktop\":\n                                deviceTypeSelector.val(\"lg\");\n                                break;\n                            case \"tablet\":\n                                deviceTypeSelector.val(\"md\");\n                                break;\n                            case \"mobile_landscape\":\n                                deviceTypeSelector.val(\"sm\");\n                                break;\n                            case \"mobile_portrait\":\n                                deviceTypeSelector.val(\"xs\");\n                                break;\n                            default:\n                                deviceTypeSelector.val(\"lg\");\n                                break;\n                        }\n\n                        getColCSS(deviceTypeSelector);\n\n                        if ($(\"#viewportList\").val() == 'browser_width') {\n                            $(\"#viewportList\").val('desktop');\n                            changeViewport('desktop');\n                        }\n\n                        eastPanelShowContent(\"#column-prop\");\n\n                        event.stopPropagation();\n                    });\n\n                </script>\n            </div>\n            <div class=\"addButtons\">\n                <script>\n                    var list = new listOption(\"align-self-start,align-self-center,align-self-end\");\n                    list.altCaption = {\"align-self-start\": \"Start\", \"align-self-center\": \"Center\", \"align-self-end\": \"End\" };\n                    addListButton(inEditor, \"V-align\", list, \".row > *\");\n                </script>\n            </div>\n            <div class=\"addButtons\">\n                <script>\n\n                    addCustomButton(inEditor, \"addNewColumn\", \"Add New Column\", \"\", \"\", getVar[\"boot-col\"]);\n\n                    inEditor.find(\"#addNewColumn\").click(function (event) {\n                        var elm = selectedElement();\n\n                        var cloneClass = elm.attr(\"class\").slice().split(\" \");\n                        for (var i = 0; i < internalClassValues().length; i++) {\n                            if (internalClassValues()[i] != \"\") {\n                                if ($.inArray(internalClassValues()[i], cloneClass) != -1) {\n                                    cloneClass.splice($.inArray(internalClassValues()[i], cloneClass), 1);\n                                }\n                            }\n                        }\n\n                        var newCol = elm.after('<div class=\"newStuff\"><div class=\"' + cloneClass.join(\" \") + '\"></div></div>');\n                        runUndoAddNew(false);\n                        var ifram = editFrameContent();\n                        finishNewElem(ifram, false, true);\n                        event.stopPropagation();\n                    });\n                </script>\n            </div>\n            <div class=\"whenDrag\">\n                <script>\n                    if (elmDrag.is(getVar[\"boot-col\"])) {  //draggable is a column\n\n                        if (elmDrop.is(getVar[\"boot-col\"])) {  //droppable is column therefor make it outside\n                            isOut = true;\n                        } else if (elmDrop.is(\"ag-container\")) {  //droppable is container therefor make it inside\n                            isOut = false;\n                        } else if (elmDrop.is(getVar[\"boot-row\"])) {  //droppable is row therefor make it inside\n                            isOut = false;\n                        }\n                    } else if (elmDrag.is(getVar[\"boot-row\"])) {  //draggable is a row\n                        if (elmDrop.is(getVar[\"boot-row\"])) {  //droppable is row therefor make it outside\n                            isOut = true;\n                        } else if (elmDrop.is(getVar[\"boot-col\"])) { //droppable is a column therefor make it inside\n                            isOut = false;\n                        }\n                    } else {\n                        if (elmDrop.is(getVar[\"boot-col\"])) { //droppable is a column outside therefor make it inside\n                            isOut = false;\n                        } else if (elmDrop.is(getVar[\"boot-row\"])) {  //droppable is a row therefor not allowed\n                            finalShow = false;\n                        } else if (elmDrop.is(\"ag-container\")) {  //droppable is a container inside therefor not allowed\n                            if (elmDrag.is(\"ag-container\")) {  //draggable is a container therefor make it outside\n                                isOut = true;\n                            }\n                        }\n                    }\n                </script>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Cards (Masonry Style, Grouped)\">\n            <div class=\"component-group\">\n                <div class=\"component divider\" title=\"Card Holder\"></div>\n                <div class=\"component\" title=\"Attached Cards\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Attached_Cards.png\">\n                    <div class=\"html-content\"><div class=\"card-group\"><div class=\"card\"></div><div class=\"card\"></div><div class=\"card\"></div></div></div>\n                </div>\n                <div class=\"component\" title=\"Masonry like Cards\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Masonry_like_Cards.png\">\n                    <div class=\"html-content\"><div class=\"card-columns\"><div class=\"card\"></div><div class=\"card\"></div><div class=\"card\"></div><div class=\"card\"></div><div class=\"card\"></div><div class=\"card\"></div></div></div>\n                </div>\n                <div class=\"component\" title=\"Detached Cards\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Detached_Cards.png\">\n                    <div class=\"html-content\"><div class=\"card-deck\"><div class=\"card\"></div><div class=\"card\"></div><div class=\"card\"></div></div></div>\n                </div>\n                <div class=\"copyComponent\" title=\"grid444\"></div>\n            </div>\n            <div class=\"component-group\">\n                <div class=\"component divider\" title=\"Card Items\"></div>\n                <div class=\"component\" title=\"Empty Card\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Empty_Card_v2.png\">\n                    <div class=\"html-content\"><div class=\"card\"></div></div>\n                </div>\n                <div class=\"component\" title=\"Card Text Content\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Card_Text_Content.png\">\n                    <div class=\"html-content\"><div class=\"card-body\"><div class=\"ag-header h4 card-title\">Card title</div><p class=\"card-text\">This card has supporting text below as a natural lead-in to additional content.</p><p class=\"card-text\"><span class=\"ag-text-smaller text-muted\">Last updated 3 mins ago</span></p><a href=\"#\" class=\"card-link\">Card link</a><a href=\"#\" class=\"card-link\">Another link</a></div></div>\n                </div>\n                <div class=\"component\" title=\"Card with Image Overlays\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Card_with_Image_Overlays.png\">\n                    <div class=\"html-content\"><div class=\"card\"><img class=\"card-img\" alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/500x300.png\"><div class=\"card-img-overlay\"><div class=\"ag-header h4 card-title\">Card title</div><p class=\"card-text\">This card has supporting text below as a natural lead-in to additional content.</p><p class=\"card-text\"><span class=\"ag-text-smaller text-muted\">Last updated 3 mins ago</span></p><a href=\"#\" class=\"card-link\">Card link</a><a href=\"#\" class=\"card-link\">Another link</a></div></div></div>\n                </div>\n                <div class=\"component\" title=\"Card Image\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Card_Image.png\">\n                    <div class=\"html-content\"><img class=\"card-img-top\" alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/500x300.png\"></div>\n                </div>\n                <div class=\"copyComponent\" title=\"blockquote\"></div>\n                <div class=\"component\" title=\"Card List\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Card_List.png\">\n                    <div class=\"html-content\"><ul class=\"list-group list-group-flush\"><li class=\"list-group-item\">Cras justo odio</li><li class=\"list-group-item\">Dapibus ac facilisis in</li><li class=\"list-group-item\">Vestibulum at eros</li></ul></div>\n                </div>\n                <div class=\"component\" title=\"Card Header\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Card_Header.png\">\n                    <div class=\"html-content\"><div class=\"card-header\"> Featured</div></div>\n                </div>\n                <div class=\"component\" title=\"Card Footer\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Card_Footer.png\">\n                    <div class=\"html-content\"><div class=\"card-footer\"> 2 days ago</div></div>\n                </div>\n                <div class=\"component\" title=\"Card Nav Tabs\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Card_Nav_Tabs.png\">\n                    <div class=\"html-content\"><div class=\"card-header\"><ul class=\"nav nav-tabs card-header-tabs\"><li class=\"nav-item\"><a class=\"nav-link active\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li></ul></div><div class=\"card-body\"><p class=\"card-text\">Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis.</p></div></div>\n                </div>\n                <div class=\"component\" title=\"Card Nav Pills\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Card_Nav_Pills.png\">\n                    <div class=\"html-content\"><div class=\"card-header\"><ul class=\"nav nav-pills card-header-pills\"><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li></ul></div></div>\n                </div>\n            </div>\n            <div class=\"runOnLoad\">\n                <script>\n                    tagReName(\"Card\", \".card\");\n                    tagReName(\"Attached Group\", \".card-group\");\n                    tagReName(\"Detached Group\", \".card-deck\");\n                    tagReName(\"Masonry Group\", \".card-columns\");\n                    tagReName(\"Card Body\", \".card-body\");\n                    tagReName(\"Card Image Overlay\", \".card-img-overlay\");\n                    tagReName(\"Card Header\", \".card-header\");\n                    tagReName(\"Card Footer\", \".card-footer\");\n\n                    designSetting(\"addTextTo\", \".card-header\");\n                    designSetting(\"addTextTo\", \".card-footer\");\n\n                </script>\n                <style>\n                    .card-deck:empty, .card-group:empty, .card:empty{\n                        padding-bottom: 150px;\n                    }\n                    .card-deck:empty {\n                        margin: 0px;\n                    }\n                    .card:empty:before  {\n                        content: \"Add Card Content here\";\n                    }\n                    .card-deck:empty:before, .card-group:empty:before, .card-columns:empty:before  {\n                        content: \"Add a Card here\";\n                    }\n                </style>\n            </div>\n            <div class=\"addButtons\">\n                <script>\n                    var list = new listOption(\"card-img-top,card-img-bottom\");\n                    list.altCaption = {\"card-img-top\": \"with Top of the Card\", \"card-img-bottom\": \"with Bottom of the Card\"};\n                    addListButton(inEditor, \"Flush Image\", list, \".card img\");\n\n                    var list = new listOption(\"card-title,card-text,card-link,card-subtitle\");\n                    addListButton(inEditor, \"Card Text Type\", list, \".card *\", \".ag-text, .ag-text-edit, img, li, ul, .card-body\");\n                </script>\n            </div>\n            <div class=\"whenDrag\">\n                <script>\n\n                    if (elmDrag.is(\".card\")) { //draggable is card\n                        if (elmDrop.is(\".card\") == true){//droppable is a  card\n                            isOut = true; //therfore put it outside\n                        }else if (elmDrop.closest(\".card\").length > 0) { //droppable is a child of card\n                            notAllowedMessage = \"Can Not be placed inside a Card!\";\n                            finalShow = false; //don't drop\n                        }\n                    }\n\n                    var cardParent = \".card-group, .card-deck, .card-columns\";\n                    if (elmDrag.is(cardParent)) { //draggable is parent of card\n                        if (elmDrop.is(cardParent) == true){//droppable is a another parent of card\n                            isOut = true; //therfore put it outside\n                        }else if (elmDrop.closest(cardParent).length > 0) { //droppable is a another parent of card\n                            finalShow = false; //don't drop\n                        }else if (elmDrop.closest(\".card\").length > 0) { //droppable is a child of card\n                            notAllowedMessage = \"Can Not be placed inside a Card!\";\n                            finalShow = false; //don't drop\n                        }\n                    }\n\n                    var cardChildren = \".card-body, .list-group-flush, .card-img-top, .card-img-bottom, .card-header, .card-footer, .card-img-overlay, .card-img\";\n                    if (elmDrag.is(cardChildren)) { //draggable is card-body or list-group-flush\n                        // if (elmDrop.closest(\".card\").length == 0) {\n                        //    notAllowedMessage = \"Must be placed inside a Card!\";\n                        //    finalShow = false; //don't drop\n                        // }else{\n\n                        if (elmDrop.closest(\".card\").length != 0) {\n                            if (elmDrop.hasClass(\"card\")) { \n                                isOut = false; //therfore put it inside\n                            }else if (elmDrop.is(cardChildren)) { //droppable is a card-body or list-group-flush\n                                isOut = true; //therfore put it outside\n                            }else if (elmDrop.closest(cardChildren).length > 0) { //droppable is a child of a card-body or list-group-flush\n                                notAllowedMessage = \"Must be placed outside!\";\n                                finalShow = false; //don't drop\n                            }\n                        }\n                    }\n\n                </script>\n            </div>\n            <div class=\"beforeDrop\">\n                <script>\n                    if (dropFromOutside) {\n                        var cardChildren = \".card-body, .list-group-flush, .card-img-top, .card-img-bottom, .card-header, .card-footer, .card-img-overlay, .card-img\";\n                        if (elmDrag.is(cardChildren)) {\n                            if (injectPoint.element.closest(\".card\").length == 0){\n                                elmDragCode = '<div class=\"newStuff\"><div class=\"card\">' + getControlCode($(this), \"html-content\") + \"</div></div>\";\n                            }\n                        }\n                    }\n                </script>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Navigation Components\">\n            <div class=\"component divider\" title=\"Navigation Bars\"></div>\n            <div class=\"component-group\">\n                <div class=\"component\" title=\"Navigation Bar\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Navigation_Bar.png\">\n                    <div class=\"html-content\"><nav class=\"navbar navbar-expand-md navbar-light bg-light\"><a class=\"navbar-brand\" href=\"#\">Navbar</a><button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#bs-navbar-collapse-x\" aria-controls=\"bs-navbar-collapse-x\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span class=\"navbar-toggler-icon\"></span></button><div class=\"collapse navbar-collapse\" id=\"bs-navbar-collapse-x\"><ul class=\"navbar-nav ml-auto\"><li class=\"nav-item\"><a class=\"nav-link active\" href=\"#\">Home</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Button</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Button</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Button</a></li></ul></div></nav></div>\n                    <div class=\"afterDrop\" id=\"addIDtoNavBar\">\n                        <script>\n                            //adds unique id to every new navbar\n                            var id = \"bs-navbar-collapse-\";\n                            var i = uniqueID(id);\n                            var elm = designFrame.find(\"#\" + id + \"x\");\n                            elm.attr(\"id\", id + i);\n                            elm.closest(\".navbar\").find(\".navbar-toggler\").attr(\"data-target\", \"#\" + id + i);\n                            elm.closest(\".navbar\").find(\".navbar-toggler\").attr(\"aria-controls\", id + i);\n                        </script>\n                    </div>\n                    <div class=\"afterDropCopy\" title=\"stopDropdown\"></div>\n                </div>\n                <div class=\"component\" title=\"Nav Bar Form Right\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Nav_Bar_Form_Right.png\">\n                    <div class=\"html-content\"><nav class=\"navbar navbar-expand-md navbar-light bg-light\"><a class=\"navbar-brand\" href=\"#\">Navbar</a><button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#bs-navbar-collapse-x\" aria-controls=\"bs-navbar-collapse-x\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span class=\"navbar-toggler-icon\"></span></button><div class=\"collapse navbar-collapse\" id=\"bs-navbar-collapse-x\"><ul class=\"navbar-nav mr-auto\"><li class=\"nav-item\"><a class=\"nav-link active\" href=\"#\">Home</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Button</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Button</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Button</a></li></ul><form class=\"form-inline my-2 my-lg-0\"><input class=\"form-control mr-sm-2 ag-input-type-search\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"><button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button></form></div></nav></div>\n                    <div class=\"afterDropCopy\" title=\"addIDtoNavBar\"></div>\n                </div>\n                <div class=\"component\" title=\"Nav Bar Form Left\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Nav_Bar_Form_Left.png\">\n                    <div class=\"html-content\"><nav class=\"navbar navbar-expand-md navbar-light bg-light\"><a class=\"navbar-brand\" href=\"#\">Navbar</a><button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#bs-navbar-collapse-x\" aria-controls=\"bs-navbar-collapse-x\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span class=\"navbar-toggler-icon\"></span></button><div class=\"collapse navbar-collapse\" id=\"bs-navbar-collapse-x\"><form class=\"form-inline my-2 my-lg-0\"><input class=\"form-control mr-sm-2 ag-input-type-search\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"><button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button></form><ul class=\"navbar-nav ml-auto\"><li class=\"nav-item\"><a class=\"nav-link active\" href=\"#\">Home</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Button</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Button</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Button</a></li></ul></div></nav></div>\n                    <div class=\"afterDropCopy\" title=\"addIDtoNavBar\"></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Brand\", \".navbar-brand\");\n                        tagReName(\"Toggler\", \".navbar-toggler\");\n                        tagReName(\"Nav Buttons\", \"nav.navbar ul.navbar-nav\");\n\n                        designSetting(\"noCopy\", \".navbar, .navbar-toggler\");\n\n                        designSetting(\"dontAddTextTo\", \".navbar-toggler, .navbar-toggler *\");\n                        designSetting(\"notDraggable\", \".navbar-toggler, .navbar-toggler *\");\n                        designSetting(\"notDroppable\", \".navbar-toggler *\");\n                        designSetting(\"notSelectable\", \".navbar .collapse, .navbar-toggler *\");\n\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrop.hasClass(\"navbar\")) { //is drop elem a navbar\n                            isOut = true;\n                        }\n                    </script>\n                </div>  \n                <div class=\"addButtons\">\n                    <script>\n\n                        var list = new listOption(\"navbar-expand-sm,navbar-expand-md,navbar-expand-lg,navbar-expand-xl\");\n                        list.altCaption = {\"navbar-expand-sm\": \"Mobile (Portrait) only\", \"navbar-expand-md\": \"Mobile (Landscape) and smaller\", \"navbar-expand-lg\": \"Tablet screens and smaller\", \"navbar-expand-xl\": \"Desktop screens and smaller\"};\n                        addListButton(inEditor, \"Hide on Screens\", list, \".navbar\");\n\n                        var list = new listOption(\"navbar-dark,navbar-light\");\n                        list.altCaption = {\"navbar-dark\": \"For use with dark background colors\", \"navbar-light\": \"For use with light background colors\"};\n                        addListButton(inEditor, \"Text Color\", list, \".navbar\");\n\n                        var list = new listOption(\"fixed-top,fixed-bottom,sticky-top\");\n                        list.altCaption = {\"fixed-top\": \"fixed top\", \"fixed-bottom\": \"fixed bottom\", \"sticky-top\": \"sticky top\"};\n                        addListButton(inEditor, \"Position\", list, \".navbar\");\n\n\n                    </script>\n                </div>\n                <div class=\"eventSnippet\">\n                    <script>\n                        eventSnippet['bootstrapScrollspy'] = '$(\"body\").scrollspy({\\n        target: \"?????\"\\n    });';\n                        eventSnippet['bootstrapScrollspyCheck'] = '$(\"body\").scrollspy(';\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n\n                        addCustomButton(inEditor, \"bootstrapScrollspySetup\", \"Scrollspy Setup\", \"\", \"\", \".navbar\", \"\", \"#2196f3\");\n                        inEditor.find(\"#bootstrapScrollspySetup\").click(function (event) {\n\n                            var elm = selectedElement();\n\n                            if (elm.is(\".navbar.fixed-top\") || elm.is(\".navbar.sticky-top\")){\n\n                                if (attrExist(elm, \"id\") != \"\") {\n                                    var qry = \"#\" + elm.attr(\"id\");\n                                }else{\n                                    var qry = \".navbar\";\n                                }\n\n                                goToSourceCode();\n                                handleEvent({\n                                    useSnippet:'bootstrapScrollspy',\n                                    snippetParameters: [qry]\n                                });\n                            }else{\n                                alert(\"Before you setup Scrollspy you must Stick or Fix the Navigation Bar to the Top of the Page (Sticky Top recommended)!\");\n                                inEditor.find(\".ag-button[title='Position:']:visible\").click();\n                            }\n                            event.stopPropagation();\n                        });\n\n                    </script>\n                </div>\n                <div class=\"addJStoFinal\" data-check=\".navbar.fixed-top, .navbar.fixed-bottom, .navbar.fixed-top, .navbar\">\n                    <script>\n                        $(function () {\n                            function scrollToPos(elm, offSets) {\n                                var link = elm.attr('href');\n                                if (link) {\n                                    if ($(link).length > 0) {\n                                        var p = $(link).offset().top - offSets;\n                                        $('body,html').animate({scrollTop: p}, 700);\n                                    }\n                                }\n                            }\n\n                            if ($(\".navbar.fixed-top\").length > 0) {\n                                var h = $(\".navbar.fixed-top\").outerHeight(true);\n                                $('body').scrollspy({target: '.navbar.fixed-top', offset: h});\n                                $('.navbar.fixed-top .nav-link').click(function (e) {\n                                    if ($(this).attr(\"href\").substring(0,1) == \"#\") {\n                                        e.preventDefault();\n                                        scrollToPos($(this), h);\n                                    }\n                                });\n                            } else if ($(\".navbar.sticky-top\").length > 0) {\n                                var h = $(\".navbar.sticky-top\").outerHeight(true);\n                                $('body').scrollspy({target: '.navbar.sticky-top', offset: h});\n                                $('.navbar.sticky-top .nav-link').click(function (e) {\n                                    if ($(this).attr(\"href\").substring(0,1) == \"#\") {\n                                        e.preventDefault();\n                                        scrollToPos($(this), h);\n                                    }\n                                });\n                            } else if ($(\".navbar.fixed-bottom\").length > 0) {\n                                var h = $(\".navbar.fixed-bottom\").outerHeight(true);\n                                $('body').css(\"padding-bottom\", h);\n                                $('body').scrollspy({target: '.navbar.fixed-bottom'});\n                                $('.navbar.fixed-bottom .nav-link').click(function (e) {\n                                    if ($(this).attr(\"href\").substring(0,1) == \"#\") {\n                                        e.preventDefault();\n                                        scrollToPos($(this), 0);\n                                    }\n                                });\n                            } else if ($(\".navbar\").length > 0) {\n                                $('.navbar .nav-link').click(function (e) {\n                                    if ($(this).attr(\"href\").substring(0,1) == \"#\") {\n                                        e.preventDefault();\n                                        scrollToPos($(this), 0);\n                                    }\n                                });\n                            }\n                        });\n\n                    </script>\n                </div>\n                <div class=\"beforeRemove\">\n                    <script>\n                        // Log the Collapsible Button as 'affectElm'\n                        if (elm.is('[data-toggle=\"collapse\"]')) {// collapsible button therefore any hidden content needs to be made visible\n                            //lets track the hidden content\n                            if (elm.is('button')) {\n                                affectElm = elm.attr(\"data-target\");//for <button> type content\n                            }else{\n                                affectElm = elm.attr(\"href\");//for <a> type content\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"afterRemove\">\n                    <script>\n                        // Expand any collapsible items after removing the Collapsible Button\n                        // 'affectElm' is the Collapsible Button (look above)\n                        if (affectElm != \"\") {\n                            var efElm = editFrameContent().find(affectElm); //hidden content\n                            if (efElm.length > 0) {\n                                if (efElm.hasClass(\"show\") == false) { //is hidden therefore unhide it and select it\n                                    efElm.addClass(\"show\");\n                                    if (efElm.hasClass(\"ag-controls\") == true){ //can actually select the item\n                                        //then select the item and scroll into it\n                                        focusElement(efElm);\n                                        sclTop = efElm.offset().top;\n                                        var iFrame = editFrame();\n                                        var frameContent = iFrame.contents();\n                                        if (sclTop > (frameContent.scrollTop() + iFrame.height() - 30)) {\n                                            frameContent.find(\"html, body\").stop().animate({scrollTop: sclTop - 100}, 1000, \"easeOutExpo\");\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component divider\" title=\"Navs\"></div>\n            <div class=\"component-group\">\n                <div class=\"component\" title=\"Navigation Pills\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Navigation_Pills.png\">\n                    <div class=\"html-content\"><ul class=\"nav nav-pills\"><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li></ul></div>\n                </div>\n                <div class=\"component\" title=\"Navigation Stacked\" data-alias=\"side\"v data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Navigation_Stacked.png\">\n                    <div class=\"html-content\"><ul class=\"nav nav-pills flex-column\"><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li></ul></div>\n                </div>\n                <div class=\"component\" title=\"Navigation Tabs\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Navigation_Tabs.png\">\n                    <div class=\"html-content\"><ul class=\"nav nav-tabs\"><li class=\"nav-item\"><a class=\"nav-link active\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane fade active show\" role=\"tabpanel\"><p>Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis.</p></div></div></div>\n                </div>\n                <div class=\"component\" title=\"Base Nav\" data-alias=\"side\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Base_Nav.png\">\n                    <div class=\"html-content\"><ul class=\"nav flex-column\"><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li></ul></div>\n                </div>\n                <div class=\"component\" title=\"Inline Nav\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Inline_Nav.png\">\n                    <div class=\"html-content\"><ul class=\"nav nav-inline\"><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Item</a></li></ul></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Navs\", \"ul.nav\");\n                        designSetting(\"notSelectable\", \".nav-item\");\n                        designSetting(\"notDraggable\", \".nav-item, .nav-link\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Nav Fill\", \"nav-fill\", \".nav\");\n                        addClassButton(inEditor, \"Nav Justified\", \"nav-justified\", \".nav\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"addDropdownToNavs\", \"New Dropdown\", \"\", \"\", \"a.nav-link\", \"[data-toggle='tab']\");\n\n                        inEditor.find(\"#addDropdownToNavs\").click(function (event) {\n                            var elm = selectedElement();\n                            elm.closest(\".nav-item\").after('<div class=\"newStuff\"><li class=\"nav-item dropdown\"><a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a><div class=\"dropdown-menu\"><a class=\"dropdown-item\" href=\"#\">Menu Item</a><a class=\"dropdown-item\" href=\"#\">Menu Item</a><a class=\"dropdown-item\" href=\"#\">Menu Item</a><div class=\"dropdown-divider\"></div><a class=\"dropdown-item\" href=\"#\">Menu Item</a></div></li></div>');\n                            runUndoAddNew(false);\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, true, true);\n\n                            //stop new Dropdown from closing\n                            designWindow().stopDropdown();\n\n                            event.stopPropagation();\n                        });                                                                  \n\n                        addClassButton(inEditor, \"Active\", \"active\", \".nav-link\", \"[data-toggle='tab']\");\n                        addClassButton(inEditor, \"Disabled\", \"disabled\", \".nav-link\");\n\n                        addClassButton(inEditor, \"Drop UP\", \"dropup\", \".nav-item > .dropdown-toggle\", \"\", 'selectedElement().closest(\".nav-item\")'); \n                        addClassButton(inEditor, \"Menu Right\", \"dropdown-menu-right\", \".nav-item> .dropdown-toggle\", \"\", 'selectedElement().closest(\".nav-item\").find(\".dropdown-menu\")'); \n                    </script>\n                </div>\n                <div class=\"beforeCopy\">\n                    <script>\n                        if (elm.is('.nav-link')) {\n                            if (elm.parent().is('.nav-item')) {\n                                elm = elm.parent();\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Form Controls (Basic)\">\n            <div class=\"component divider\" title=\"Form Holders\"></div>\n            <div class=\"component-group\" title=\"Form Types\">\n                <div class=\"component\" title=\"Form (Basic)\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Form_Basic.png\">\n                    <div class=\"html-content\"><form class=\"ag-container container\"><fieldset class=\"form-group\"><label>Email address</label><div class=\"ag-form-control\"></div><small class=\"form-text text-muted\">We'll never share your email with anyone else.</small></fieldset><fieldset class=\"form-group\"><label>Password:</label><div class=\"ag-form-control\"></div><small class=\"form-text text-muted\">Password must be at least 8 characters long</small></fieldset><fieldset class=\"form-group\"><label>Submit</label><div class=\"ag-form-control\"></div><small class=\"form-text text-muted\">Register your new account</small></fieldset></form></div>\n                </div>\n                <div class=\"component\" title=\"Form (Inline)\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Form_Inline.png\">\n                    <div class=\"html-content\"><form class=\"form-inline ag-container container\"><fieldset class=\"form-group  mb-2 mr-sm-2 mb-sm-0\"><div class=\"ag-form-control\"></div><small class=\"form-text text-muted\">required</small></fieldset><fieldset class=\"form-group  mb-2 mr-sm-2 mb-sm-0\"><div class=\"ag-form-control\"></div><small class=\"form-text text-muted\">required</small></fieldset><fieldset class=\"form-group  mb-2 mr-sm-2 mb-sm-0\"><div class=\"ag-form-control\"></div><small class=\"form-text text-muted\">send</small></fieldset></form></div>\n                </div>\n                <div class=\"component\" title=\"Form (Horizontal)\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Form_Horizontal.png\">\n                    <div class=\"html-content\"><form class=\"ag-container container\"><fieldset class=\"form-group\"><div class=\"row\"><label class=\"col-form-label col-sm-2\">Email</label><div class=\"col-sm-10\"><div class=\"ag-form-control\"></div><small class=\"form-text text-muted\">required</small></div></div></fieldset><fieldset class=\"form-group\"><div class=\"row\"><label class=\"col-form-label col-sm-2\">Password</label><div class=\"col-sm-10\"><div class=\"ag-form-control\"></div><small class=\"form-text text-muted\">required</small></div></div></fieldset></form></div>\n                </div>\n                <div class=\"component\" title=\"Form (Grid)\" data-alias=\"responsive\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Form_Grid.png\">\n                    <div class=\"html-content\"><form class=\"ag-container container\"><div class=\"form-row\"><fieldset class=\"form-group col-md-6\"><label>Email</label><div class=\"ag-form-control\"></div><small class=\"form-text text-muted\">required</small></fieldset><fieldset class=\"form-group col-md-6\"><label>Password</label><div class=\"ag-form-control\"></div><small class=\"form-text text-muted\">required</small></fieldset></div><div class=\"form-row\"><fieldset class=\"form-group col-md-6\"><label>City</label><div class=\"ag-form-control\"></div><small class=\"form-text text-muted\">required</small></fieldset><fieldset class=\"form-group col-md-4\"><label>State</label><div class=\"ag-form-control\"></div><small class=\"form-text text-muted\">required</small></fieldset><fieldset class=\"form-group col-md-2\"><label>Zip</label><div class=\"ag-form-control\"></div><small class=\"form-text text-muted\">required</small></fieldset></div></form></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Row\", \".form-row\");\n                        designSetting(\"notSelectable\", \".form-group .ag-form-control\");\n                        designSetting(\"notDraggable\", \".form-group > div, .form-group > label, .form-group .ag-form-control, .form-group small\");\n                        contentEditableButNoToolbar(\".form-group > label\");\n                    </script>\n                    <style>\n                        form:empty{\n                            padding-bottom: 150px;\n                        }\n                        .form-group:empty:before  {\n                            content: \"form-group\";\n                        }\n                        .form-group small:empty:before  {\n                            content: \"help\";\n                        }\n                        .form-group .ag-form-control:empty {\n                            width: 100%;\n                        }\n                        .form-inline .form-group .ag-form-control:empty {\n                            width: 120px;\n                        }\n                        .form-group .ag-form-control:empty:before  {\n                            content: \"Add Control Here!\";\n\n                        }\n                        form small.form-text:not(.ag-edit-focus):empty{\n                            padding-bottom: 20px !important;\n                        }\n                        .invalid-feedback{\n                            display: block !important;\n                            opacity: 0.6;\n                        }\n                    </style>\n                </div>\n                <div class=\"cleanUpBeforePublish\">\n                    <script>\n                        pageClone.find(\"div.ag-form-control\").each(function () {\n                            $(this).replaceWith($(this).html());\n                        });\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"labelFor\", \"Label For...\", \"\", \"\", \".form-group > label, .form-group > .row > label\", \"\", \"#2196f3\");\n                        showIDlist(inEditor, \"labelFor\", \"Form Controls\", \"*[id]\", \"for\", \"\");\n\n                        addClassButton(inEditor, \"Was validated?\", \"was-validated\", \"form\");\n\n                        addClassButton(inEditor, \"Invalid Feedback\", \"invalid-feedback\", \"small.form-text\");\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrag.hasClass(\"form-group\")) { //draggable is form-group\n                            if (dropTag == \"form\") { //droppable is form\n                                isOut = false; //therfore put it inside\n                            } else if (elmDrop.hasClass(\"form-group\")) { //droppable is form-group\n                                isOut = true; //therfore put it outside\n                            } else {\n                                notAllowedMessage = \"Must be placed inside a Form!\";\n                                finalShow = false; //don't drop\n                            }\n                        }\n                        if (elmDrop.hasClass(\"ag-form-control\")) { //droppable is form-group .ag-form-control\n                            isOut = false;\n                        }\n                        if (elmDrop.is(\".form-text\")) { //droppable is a form help text\n                            finalShow = false;\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component divider\" title=\"Form Controls\"></div>\n            <div class=\"component\" title=\"Button\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Button.png\">\n                <div class=\"html-content\"><button type=\"button\" class=\"btn btn-primary\">Button</button></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Button\", \".btn\");\n                        designSetting(\"addIDtoButton\", \".btn\");\n                    </script>\n                    <style>\n                        .btn.disabled, .btn[disabled], fieldset[disabled] .btn {\n                            pointer-events: auto !important;\n                            cursor: pointer;\n                        }\n                    </style> \n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"btn-primary,btn-outline-primary,btn-secondary,btn-outline-secondary,btn-success,btn-outline-success,btn-info,btn-outline-info,btn-warning,btn-outline-warning,btn-danger,btn-outline-danger,btn-light,btn-outline-light,btn-dark,btn-outline-dark,btn-link\");\n                        list.altCaption = {\"btn-primary\": \"primary\", \"btn-outline-primary\": \"primary outline\", \"btn-secondary\": \"secondary\", \"btn-outline-secondary\": \"secondary outline\", \"btn-success\": \"success\", \"btn-outline-success\": \"success outline\", \"btn-info\": \"info\", \"btn-outline-info\": \"info outline\", \"btn-warning\": \"warning\", \"btn-outline-warning\": \"warning outline\", \"btn-danger\": \"danger\", \"btn-outline-danger\": \"danger outline\", \"btn-light\": \"light\", \"btn-outline-light\": \"light outline\", \"btn-dark\": \"dark\", \"btn-outline-dark\": \"dark outline\", \"btn-link\": \"link\"};\n                        list.hasNone = false;\n                        addListButton(inEditor, \"Style\", list, \".btn\");\n\n                        var list = new listOption(\"btn-lg,btn-sm\");\n                        list.altCaption = {\"btn-lg\": \"Large\", \"btn-sm\": \"Small\"};\n                        addListButton(inEditor, \"Sizing\", list, \".btn\");\n\n                        addClassButton(inEditor, \"Block\", \"btn-block\", \".btn\", \".btn-group .btn, .input-group .btn\");\n                        addClassButton(inEditor, \"Active\", \"active\", \".btn\", \"label.btn\");\n                        addClassButton(inEditor, \"Disabled\", \"disabled\", \".btn\");\n                    </script>\n                </div>\n                <div class=\"onDoubleClickHandle\">\n                    <script>\n                        if (eventHandleFile.length > 0){\n                            //double click <a class=\"btn\"> and go into code for click event\n                            if (tag == \"a\") {\n                                if (ths.hasClass(\"btn\") == true){\n                                    if (attributeExist(dbClickItem, \"id\") == true){\n                                        goToSourceCode();\n                                        var id = dbClickItem.attr(\"id\");\n                                        handleEvent({\n                                            useSnippet:'jQueryEvent',\n                                            snippetParameters: [\"#\" + id,\"click\"]\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Common Controls\">\n                <div class=\"component\" title=\"Text Input, Password, Number...\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Text_Input__Password__Number___.png\">\n                    <div class=\"html-content\"><input type=\"text\" placeholder=\"placeholder\" class=\"form-control\"></div>\n                </div>\n                <div class=\"component\" title=\"Drop Down List\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Drop_Down_List.png\">\n                    <div class=\"html-content\"><select class=\"form-control custom-select\"><option value=\"1\">1</option><option value=\"2\">2</option><option value=\"3\">3</option><option value=\"4\">4</option><option value=\"5\">5</option></select></div>\n                    <div class=\"addButtons\">\n                        <script>\n                            var list = new listOption(\"custom-select-lg,custom-select-sm\");\n                            list.altCaption = {\"custom-select-lg\": \"Large\", \"custom-select-sm\": \"Small\"};\n                            addListButton(inEditor, \"Size\", list, \"custom-select.select\");\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Multiple List\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Multiple_List.png\">\n                    <div class=\"html-content\"><select multiple=\"multiple\" class=\"form-control\"><option value=\"1\">1</option><option value=\"2\">2</option><option value=\"3\">3</option><option value=\"4\">4</option><option value=\"5\">5</option></select></div>\n                </div>\n                <div class=\"component\" title=\"Text Area\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Text_Area.png\">\n                    <div class=\"html-content\"><textarea class=\"form-control\" rows=\"3\"></textarea></div>\n                </div>\n                <div class=\"component\" title=\"File Upload Button\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/File_Upload_Button.png\">\n                    <div class=\"html-content\"><div class=\"custom-file\"><input type=\"file\" class=\"custom-file-input\"><label class=\"custom-file-label\">Choose file</label></div></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"File Browser\", \".custom-file\");\n                            designSetting(\"noCopy\", \".custom-file > input, .custom-file-label\");\n                            designSetting(\"noRemove\", \".custom-file > input, .custom-file-label\");\n                            designSetting(\"notDraggable\", \".custom-file > input, .custom-file-label\");\n                            designSetting(\"notDroppable\", \".custom-file > input, .custom-file-label\");\n                            designSetting(\"isAbsolutePosition\", \".custom-file > input, .custom-file-label\");\n                        </script>\n                        <style>\n                            .custom-file input{\n                                width: 76px;\n                                height: initial;\n                                position: absolute;\n                                top: 7px;\n                                right: 0px;\n                            }\n                            .custom-file.ag-focus input, .custom-file input.ag-focus{\n                                opacity: 1;\n                            }\n                        </style>\n                    </div>\n                    <div class=\"addButtons\">\n                        <script>\n                            addCustomButton(inEditor, \"selectFileUpload\", \"File Upload\", \"\", \"\", \".custom-file label\");\n\n                            inEditor.find(\"#selectFileUpload\").click(function (event) {\n                                focusElement(selectedElement().closest(\".custom-file\"));\n                                event.stopPropagation();\n                            });\n                        </script>\n                    </div>\n                    <div class=\"addJStoFinal\" data-check=\".custom-file > label.custom-file-label\">\n                        <script>\n                            $(function () {\n                                $(\".custom-file > label.custom-file-label\").each(function () {\n                                    if (typeof $(this).attr(\"for\") === \"undefined\") {\n                                        var checkBoxID = $(this).closest(\"div\").find(\"input\").attr(\"id\");\n                                        if (typeof checkBoxID !== \"undefined\") {\n                                            $(this).attr(\"for\", checkBoxID);\n                                        }\n                                    }\n                                });\n                            });\n                        </script>\n                    </div>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"form-control-lg,form-control-sm\");\n                        list.altCaption = {\"form-control-lg\": \"Large\", \"form-control-sm\": \"Small\"};\n                        addListButton(inEditor, \"Size\", list, \"input, textarea, select\", \"input[type='radio'], input[type='checkbox'], input[type='file'], input[type='range']\");\n\n                        var list = new listOption(\"col-form-label-lg,col-form-label-sm\");\n                        list.altCaption = {\"col-form-label-lg\": \"Large\", \"col-form-label-sm\": \"Small\"};\n                        addListButton(inEditor, \"Size\", list, \".col-form-label\");\n\n                        addClassButton(inEditor, \"Plaintext\", \"form-control-plaintext\", \"input.form-control\");\n\n                        addClassButton(inEditor, \"Arrow\", \"custom-select\", \"select\", \"select[multiple]\");\n\n                        var list = new listOption(\"is-invalid,is-valid\");\n                        list.altCaption = {\"is-invalid\": \"Invalid\", \"is-valid\": \"Valid\"};\n                        addListButton(inEditor, \"Validation\", list, \"input, textarea, select\", \"input[type='file'], input[type='range']\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Checkboxes\">\n                <div class=\"component\" title=\"Inline Checkboxes\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Inline_Checkboxes.png\">\n                    <div class=\"html-content\"><div class=\"custom-control custom-checkbox custom-control-inline\"><input type=\"checkbox\" class=\"custom-control-input\"><label class=\"custom-control-label\">Label 1</label></div><div class=\"custom-control custom-checkbox custom-control-inline\"><input type=\"checkbox\" class=\"custom-control-input\"><label class=\"custom-control-label\">Label 2</label></div><div class=\"custom-control custom-checkbox custom-control-inline\"><input type=\"checkbox\" class=\"custom-control-input\"><label class=\"custom-control-label\">Label 3</label></div></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Checkbox\", \".custom-checkbox\");\n\n                            designSetting(\"noCopy\", \".custom-checkbox > *\");\n                            designSetting(\"noRemove\", \".custom-checkbox > *\");\n                            designSetting(\"notDraggable\", \".custom-checkbox *\");\n                            designSetting(\"notDroppable\", \".custom-checkbox *\");\n\n                        </script>\n                        <style>\n                            .custom-control.custom-checkbox > input[type=\"checkbox\"]{\n                            \t    opacity: 0.8;\n                                left: 2px;\n                                z-index: 100;\n                                top: 6px;                     \n                            }\n\n                        </style>\n                    </div>\n                    <div class=\"addButtons\">\n                        <script>\n                            addClassButton(inEditor, \"Inline\", \"custom-control-inline\", \".custom-control.custom-checkbox, .custom-contro.custom-radio\");\n                        </script>\n                    </div>\n                    <div class=\"whenDrag\">\n                        <script>\n                            if (elmDrop.is(\".custom-checkbox\")) { // is a custom checkbox\n                                isOut = true;//therefore drop outside only\n                            }\n                        </script>\n                    </div>\n                    <div class=\"addJStoFinal\" data-check=\".custom-control.custom-checkbox > label.custom-control-label\">\n                        <script>\n                            $(function () {\n                                $(\".custom-control.custom-checkbox > label.custom-control-label\").each(function () {\n                                    if (typeof $(this).attr(\"for\") === \"undefined\") {\n                                        var checkBoxID = $(this).closest(\"div\").find(\"input\").attr(\"id\");\n                                        if (typeof checkBoxID !== \"undefined\") {\n                                            $(this).attr(\"for\", checkBoxID);\n                                        }\n                                    }\n                                });\n                            });\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Multiple Checkboxes\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Multiple_Checkboxes.png\">\n                    <div class=\"html-content\"><div class=\"custom-control custom-checkbox\"><input type=\"checkbox\" class=\"custom-control-input\"><label class=\"custom-control-label\">Label 1</label></div><div class=\"custom-control custom-checkbox\"><input type=\"checkbox\" class=\"custom-control-input\"><label class=\"custom-control-label\">Label 2</label></div><div class=\"custom-control custom-checkbox\"><input type=\"checkbox\" class=\"custom-control-input\"><label class=\"custom-control-label\">Label 3</label></div></div>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Radios\">\n                <div class=\"component\" title=\"Inline Radios\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Inline_Radios.png\">\n                    <div class=\"html-content\"><div class=\"custom-control custom-radio custom-control-inline\"><input type=\"radio\" name=\"radioGroup-x\" class=\"custom-control-input\"><label class=\"custom-control-label\">Label 1</label></div><div class=\"custom-control custom-radio custom-control-inline\"><input type=\"radio\" name=\"radioGroup-x\" class=\"custom-control-input\"><label class=\"custom-control-label\">Label 2</label></div><div class=\"custom-control custom-radio custom-control-inline\"><input type=\"radio\" name=\"radioGroup-x\" class=\"custom-control-input\"><label class=\"custom-control-label\">Label 3</label></div></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Radio\", \".custom-radio\");\n\n                            designSetting(\"noCopy\", \".custom-radio > *\");\n                            designSetting(\"noRemove\", \".custom-radio > *\");\n                            designSetting(\"notDraggable\", \".custom-radio *\");\n                            designSetting(\"notDroppable\", \".custom-radio *\");\n\n                        </script>\n                        <style>\n                            .custom-control.custom-radio > input[type=\"radio\"]{\n                            \t    opacity: 0.8;\n                                left: 2px;\n                                z-index: 100;\n                                top: 6px;                     \n                            }\n\n                        </style>\n                    </div>\n                    <div class=\"addButtons\">\n                        <script>\n                            addClassButton(inEditor, \"Inline\", \"custom-control-inline\", \".custom-control.custom-radio, .custom-contro.custom-radio\");\n                        </script>\n                    </div>\n                    <div class=\"whenDrag\">\n                        <script>\n                            if (elmDrop.is(\".custom-radio\")) { // is a custom radio\n                                isOut = true;//therefore drop outside only\n                            }\n                        </script>\n                    </div>\n                    <div class=\"addJStoFinal\" data-check=\".custom-control.custom-radio > label.custom-control-label\">\n                        <script>\n                            $(function () {\n                                $(\".custom-control.custom-radio > label.custom-control-label\").each(function () {\n                                    if (typeof $(this).attr(\"for\") === \"undefined\") {\n                                        var checkBoxID = $(this).closest(\"div\").find(\"input\").attr(\"id\");\n                                        if (typeof checkBoxID !== \"undefined\") {\n                                            $(this).attr(\"for\", checkBoxID);\n                                        }\n                                    }\n                                });\n                            });\n                        </script>\n                    </div>\n                    <div class=\"afterDrop\" id=\"uniqueRadioGroupName\">\n                        <script>\n                            //adds unique name to every new radio group\n                            function uniqueRadioGroup(designFrame, oldName, containerName) {\n\n                                //adds unique name to every new radio group\n                                var namGen = true;\n\n                                var reNam = \"\";\n                                var elm = designFrame.find(\"input[name='\" + oldName + \"x']\");\n                                var fg = elm.closest(containerName);\n\n                                if (fg.length > 0) {\n                                    var rado = fg.find(\"input[type='radio']\");\n\n                                    if (rado.length > 0) {\n                                        var nm = attrExist(rado, \"name\");\n\n                                        if (nm != \"\") {\n                                            if (nm != (oldName + \"x\")) {\n                                                namGen = false;\n                                                reNam = nm;\n                                            }\n                                        }\n                                    }\n                                }\n\n                                if (namGen == true) {\n                                    var i = uniqueAttributeName(oldName);\n                                    reNam = oldName + i;\n                                }\n                                elm.each(function () {\n                                    $(this).attr(\"name\", reNam);\n                                });\n\n                            }\n                            uniqueRadioGroup(designFrame, \"radioGroup-\", \".form-group\");\n\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Multiple Radios\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Multiple_Radios.png\">\n                    <div class=\"html-content\"><div class=\"custom-control custom-radio\"><input type=\"radio\" name=\"radioGroup-x\" class=\"custom-control-input\"><label class=\"custom-control-label\">Label 1</label></div><div class=\"custom-control custom-radio\"><input type=\"radio\" name=\"radioGroup-x\" class=\"custom-control-input\"><label class=\"custom-control-label\">Label 2</label></div><div class=\"custom-control custom-radio\"><input type=\"radio\" name=\"radioGroup-x\" class=\"custom-control-input\"><label class=\"custom-control-label\">Label 3</label></div></div>\n                    <div class=\"afterDropCopy\" title=\"uniqueRadioGroupName\"></div>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Range Slider\" data-alias=\"range,slider\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Range_Slider.png\">\n                <div class=\"html-content\"><input type=\"range\" class=\"custom-range\" min=\"0\" max=\"10\" value=\"2\" step=\"1\"></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Range Slider\", \"input[type='range']\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"rangeSettings\", \"Settings\", \"\", \"\", \"input[type='range']\");\n\n                        inEditor.find(\"#rangeSettings\").click(function (event) {\n\n                            findProperty(\"max\", true, true);\n                            findProperty(\"min\", true, true);\n                            findProperty(\"value\", true, false);\n                            findProperty(\"step\", true, false);\n\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Switches\" data-alias=\"toggle\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Switches.png\">\n                <div class=\"html-content\"><div class=\"custom-control custom-switch\"><input type=\"checkbox\" class=\"custom-control-input\"><label class=\"custom-control-label\">Toggle this switch element</label></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Switches\", \".custom-switch\");\n\n                        designSetting(\"noCopy\", \".custom-switch > *\");\n                        designSetting(\"noRemove\", \".custom-switch > *\");\n                        designSetting(\"notDraggable\", \".custom-switch *\");\n                        designSetting(\"notDroppable\", \".custom-switch *\");\n\n                    </script>\n                    <style>\n                        .custom-control.custom-switch > input[type=\"checkbox\"]{\n                            opacity: 0.8;\n                            left: 2px;\n                            z-index: 100;\n                            top: 6px;                     \n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                    </script>\n                </div>\n                <div class=\"addJStoFinal\" data-check=\".custom-control.custom-switch > label.custom-control-label\">\n                    <script>\n                        $(function () {\n                            $(\".custom-control.custom-switch > label.custom-control-label\").each(function () {\n                                if (typeof $(this).attr(\"for\") === \"undefined\") {\n                                    var checkBoxID = $(this).closest(\"div\").find(\"input\").attr(\"id\");\n                                    if (typeof checkBoxID !== \"undefined\") {\n                                        $(this).attr(\"for\", checkBoxID);\n                                    }\n                                }\n                            });\n                        });\n                    </script>\n                </div>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Form Controls (Advanced)\">\n            <div class=\"component\" title=\"Checkbox Buttons\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Checkbox_Buttons.png\">\n                <div class=\"html-content\"><div class=\"btn-group-toggle\" data-toggle=\"buttons\"><label class=\"btn btn-secondary\"><input type=\"checkbox\" autocomplete=\"off\" class=\"ag-check-button\"><span class=\"ag-text-span\"> Checkbox 1 </span></label><label class=\"btn btn-secondary\"><input type=\"checkbox\" autocomplete=\"off\" class=\"ag-check-button\"><span class=\"ag-text-span\"> Checkbox 2 </span></label><label class=\"btn btn-secondary\"><input type=\"checkbox\" autocomplete=\"off\" class=\"ag-check-button\"><span class=\"ag-text-span\"> Checkbox 3 </span></label></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Button\", \"label.btn\");\n                        hideClassFromPropInspector(\"ag-check-button\", true);\n                        designSetting(\"noCopy\", \".ag-check-button\");\n                        designSetting(\"noRemove\", \".ag-check-button\");\n                        designSetting(\"notDraggable\", '.ag-check-button, [data-toggle=\"buttons\"] > .btn span');\n                        designSetting(\"notDroppable\", \".ag-check-button\");\n                        designSetting(\"ignoreOnOff\", \".ag-check-button\");\n                    </script>\n                    <style>\n                        [data-toggle=\"buttons\"] > .btn:hover input[type=\"checkbox\"]{\n                            position: relative !important;\n                            clip: auto !important;\n                            pointer-events: auto !important;\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n\n                        addCustomButton(inEditor, \"onOffCheckBox\", \"On/Off\", \"\", \"\", \".ag-check-button\");\n\n                        inEditor.find(\"#onOffCheckBox\").click(function (event) {\n                            var elm = selectedElement();\n                            var btn = elm.closest(\".btn\");\n                            var chk = elm.is(\":checked\");\n                            elm.prop('checked', !(chk));\n                            if (chk == false) {\n                                btn.addClass(\"active\");\n                            } else {\n                                btn.removeClass(\"active\");\n                            }\n                            undoManager.add({\n                                undo: function () {\n                                    elm.prop('checked', chk);\n                                    if (chk == true) {\n                                        btn.addClass(\"active\");\n                                    } else {\n                                        btn.removeClass(\"active\");\n                                    }\n                                    showIfHidden(btn);\n                                    resetBreadcrumbAndProps(btn, false);\n\n                                },\n                                redo: function () {\n                                    elm.prop('checked', !(chk));\n                                    if (chk == false) {\n                                        btn.addClass(\"active\");\n                                    } else {\n                                        btn.removeClass(\"active\");\n                                    }\n                                    showIfHidden(btn);\n                                    resetBreadcrumbAndProps(btn, false);\n\n                                }\n                            });\n\n                            undoRedoStatus();\n\n                            event.stopPropagation();\n                        });\n\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Radio Buttons\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Radio_Buttons.png\">\n                <div class=\"html-content\"><div class=\"btn-group btn-group-toggle ag-radio-button-parent\" data-toggle=\"buttons\"><label class=\"btn btn-secondary\"><input type=\"radio\" name=\"radioGroup-x\" class=\"ag-radio-button\" autocomplete=\"off\"><span class=\"ag-text-span\"> Option 1 </span></label><label class=\"btn btn-secondary\"><input type=\"radio\" name=\"radioGroup-x\" class=\"ag-radio-button\" autocomplete=\"off\"><span class=\"ag-text-span\"> Option 2 </span></label><label class=\"btn btn-secondary\"><input type=\"radio\" name=\"radioGroup-x\" class=\"ag-radio-button\" autocomplete=\"off\"><span class=\"ag-text-span\"> Option 3 </span></label></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        hideClassFromPropInspector(\"ag-radio-button\", true);\n                        hideClassFromPropInspector(\"ag-radio-button-parent\", true);\n\n                        designSetting(\"notDraggable\", '.ag-radio-button');\n                        designSetting(\"notDroppable\", '.ag-radio-button');\n                        designSetting(\"ignoreOnOff\", '.ag-radio-button');\n\n                        designSetting(\"noCopy\", \".ag-radio-button-parent > label.btn.active\");\n                        designSetting(\"noCopy\", \".ag-radio-button\");\n                        designSetting(\"noRemove\", \".ag-radio-button\");\n                    </script>\n                    <style>\n                        [data-toggle=\"buttons\"] > .btn:hover input[type=\"radio\"]{\n                            position: relative !important;\n                            clip: auto !important;\n                            pointer-events: auto !important;\n                        }\n                    </style>\n                </div>\n                <div class=\"afterDropCopy\" title=\"uniqueRadioGroupName\"></div>\n                <div class=\"addButtons\">\n                    <script>\n\n                        addCustomButton(inEditor, \"onOffRadio\", \"On/Off\", \"\", \"\", \".ag-radio-button\");\n\n                        inEditor.find(\"#onOffRadio\").click(function (event) {\n                            var elm = selectedElement();\n\n                            var chk = elm.is(\":checked\");\n                            var btn = elm.closest(\".btn\");\n\n                            var nam = attrExist(elm, \"name\");\n\n                            var prevRadio = false;\n\n                            if (chk == false) {\n                                if (nam != \"\") {\n                                    prevRadio = editFrameContent().find(\"input[type='radio'][name='\" + nam + \"']:checked\");\n                                    if (prevRadio.length == 0) {\n                                        prevRadio = false;\n                                    }\n                                }\n                            }\n\n\n                            elm.prop('checked', !(chk));\n                            elm.closest('[data-toggle=\"buttons\"]').find('.active').removeClass('active');\n                            if (chk == false) {\n                                btn.addClass(\"active\");\n                            } else {\n                                btn.removeClass(\"active\");\n                            }\n\n                            undoManager.add({\n                                undo: function () {\n                                    if (prevRadio === false) {\n                                        elm.prop('checked', chk);\n                                        elm.closest('[data-toggle=\"buttons\"]').find('.active').removeClass('active');\n                                        if (chk == true) {\n                                            btn.addClass(\"active\");\n                                        } else {\n                                            btn.removeClass(\"active\");\n                                        }\n                                        showIfHidden(btn);\n                                        resetBreadcrumbAndProps(btn, false);\n                                    } else {\n                                        prevRadio.prop('checked', true);\n                                        var prevRadioBtn = prevRadio.closest(\".btn\");\n                                        elm.closest('[data-toggle=\"buttons\"]').find('.active').removeClass('active');\n                                        if (chk == false) {\n                                            prevRadioBtn.addClass(\"active\");\n                                        } else {\n                                            prevRadioBtn.removeClass(\"active\");\n                                        }\n                                        showIfHidden(prevRadioBtn);\n                                        resetBreadcrumbAndProps(prevRadioBtn, false);\n                                    }\n\n\n                                },\n                                redo: function () {\n                                    elm.prop('checked', !(chk));\n                                    elm.closest('[data-toggle=\"buttons\"]').find('.active').removeClass('active');\n                                    if (chk == false) {\n                                        btn.addClass(\"active\");\n                                    } else {\n                                        btn.removeClass(\"active\");\n                                    }\n                                    showIfHidden(btn);\n                                    resetBreadcrumbAndProps(btn, false);\n\n                                }\n                            });\n\n                            undoRedoStatus();\n\n                            event.stopPropagation();\n                        });\n\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Drop-down menu buttons\">\n                <div class=\"component\" title=\"Drop-down menu button\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Drop-down_menu_button.png\">\n                    <div class=\"html-content\"><div class=\"btn-group ag-dropdown\"><button type=\"button\" class=\"btn btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Action</button><div class=\"dropdown-menu\"><a class=\"dropdown-item\" href=\"#\">Menu Item</a><a class=\"dropdown-item\" href=\"#\">Menu Item</a><a class=\"dropdown-item\" href=\"#\">Menu Item</a><div class=\"dropdown-divider\"></div><a class=\"dropdown-item\" href=\"#\">Menu Item</a></div></div></div>\n                    <div class=\"afterDrop\" id=\"stopDropdown\">\n                        <script>\n                            //stop new Dropdown from closing\n                            designWindow().stopDropdown();\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Split button dropdowns\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Split_button_dropdowns.png\">\n                    <div class=\"html-content\"><div class=\"btn-group ag-dropdown\"><button type=\"button\" class=\"btn btn-danger\">Action</button><button type=\"button\" class=\"btn btn-danger dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" data-reference=\"parent\"><span class=\"sr-only\">Toggle Dropdown</span></button><div class=\"dropdown-menu\"><a class=\"dropdown-item\" href=\"#\">Menu Item</a><a class=\"dropdown-item\" href=\"#\">Menu Item</a><a class=\"dropdown-item\" href=\"#\">Menu Item</a><div class=\"dropdown-divider\"></div><a class=\"dropdown-item\" href=\"#\">Menu Item</a></div></div></div>\n                    <div class=\"afterDropCopy\" title=\"stopDropdown\"></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Divider\", \".dropdown-divider\");\n                        tagReName(\"Dropdown\", \".ag-dropdown\", true);\n\n                        hideClassFromPropInspector(\"ag-dropdown\", true);\n\n                        designSetting(\"notDraggable\", \".dropdown-divider\");\n                        designSetting(\"notDraggable\", \".dropdown-menu a\");\n                        designSetting(\"unTouchElement\", \".dropdown-menu\");\n                        designSetting(\"isAbsolutePosition\", \".dropdown-menu\");\n                    </script>\n                    <style>\n                        .dropdown-menu .dropdown-divider{\n                            height: 20px;\n                            margin: 0px;\n                            background-color: transparent;\n                        }\n                        .dropdown-menu .dropdown-divider:before{\n                            border-top: 1px solid #e5e5e5;\n                            display: block;\n                            height: 1px;\n                            content: \" \";\n                            width: 100%;\n                            margin-top: 9px;\n                            position: relative !important;\n                            top:auto !important;\n\n                        }\n                        .dropdown-menu .dropdown-divider:empty{\n                            padding: 0px !important;\n                            background:none !important;\n                            outline: none;\n                            -webkit-box-shadow: none !important;\n                            -moz-box-shadow: none !important;\n                            box-shadow: none !important; \n                            border-top: 0px !important;\n                        }\n                        .dropdown-item.active, .dropdown-item:active {\n                            color: initial !important;\n                            background-color: initial !important;\n                        }\n                    </style>\n                </div>\n                <div class=\"cleanUpBeforePublish\">\n                    <script>\n                        pageClone.find(\"div.dropdown-menu\").each(function () {\n                            $(this).removeAttr(\"style\");\n                            $(this).removeAttr(\"x-placement\");\n                        });\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n\n                        var list = new listOption(\"dropup,dropright,dropleft\");\n                        list.altCaption = {\"dropup\": \"Up\", \"dropright\": \"Right\", \"dropleft\": \"Left\"};\n                        addListButton(inEditor, \"Drop direction\", list, \".ag-dropdown\");\n\n                        addClassButton(inEditor, \"Menu Right\", \"dropdown-menu-right\", \".btn-group > .dropdown-toggle\", \"\", 'selectedElement().closest(\".btn-group\").find(\".dropdown-menu\")'); \n\n                        addClassButton(inEditor, \"Disabled\", \"disabled\", \"a.dropdown-item\"); \n\n                        addCustomButton(inEditor, \"addDropdownDivider\", \"Add Divider\", \"\", \"\", \".dropdown-menu a\");\n\n                        inEditor.find(\"#addDropdownDivider\").click(function (event) {\n                            var elm = selectedElement();\n                            elm.after('<div class=\"newStuff\"><div class=\"dropdown-divider\"></div></div>');\n                            runUndoAddNew(false);\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, false, true);\n                            event.stopPropagation();\n                        });\n\n                        addCustomButton(inEditor, \"addDropdownHeader\", \"Add Header\", \"\", \"\", \".dropdown-menu a\");\n\n                        inEditor.find(\"#addDropdownHeader\").click(function (event) {\n                            var elm = selectedElement();\n                            elm.after('<div class=\"newStuff\"><div class=\"ag-header h6 dropdown-header\"><span class=\"ag-text\">Header</span></div></div>');\n                            runUndoAddNew(false);\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, false, true);\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (dropTag == \"a\") { //droppable is a link\n                            if (elmDrop.closest(\".dropdown-menu\").length > 0) { //the link is dropdown item link\n                                if (dragTag == \"span\"){\n                                    isOut = false;//therefore put is inside the link\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"beforeRemove\">\n                    <script>\n                        if (elm.attr(\"data-toggle\") == \"dropdown\") { //the item to be removed is a dropdown button\n                            if (elm.parent().is(\".btn-group, .input-group, .nav-item\")) { //check to see if it is defo a dropdown\n                                elm = elm.parent();//if it is then remove parent instead button, this will remove the menu too\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"beforeUnHide\">\n                    <script>\n                        //close all dropdowns before executing undo\n                        var allDrops = editFrameContent().find(\".dropdown-menu\");\n\n                        allDrops.each(function () {\n                            var allParnt = $(this).closest(\".btn-group, .input-group, .nav-item\");\n                            if (allParnt.length > 0) {\n                                allParnt.removeClass(\"show\");\n                                allParnt.find(\".dropdown-menu\").removeClass(\"show\"); allParnt.children(\".btn\").attr(\"aria-expanded\", \"false\");\n                            }\n                        });\n                    </script>\n                </div>\n                <div class=\"afterUnHide\">\n                    <script>\n                        var dropMenu = visibleElm.closest(\".dropdown-menu\");\n                        if (dropMenu.length > 0) {\n                            var dropParnt = dropMenu.closest(\".btn-group, .input-group, .nav-item\");\n                            if (dropParnt.length > 0) {\n                                dropParnt.addClass(\"show\");\n                                dropParnt.find(\".dropdown-menu\").addClass(\"show\");  dropParnt.children(\".btn\").attr(\"aria-expanded\", \"true\");\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Button group types\">\n                <div class=\"component\" title=\"Button toolbar\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Button_toolbar.png\">\n                    <div class=\"html-content\"><div class=\"btn-toolbar\" role=\"toolbar\"><div class=\"btn-group mr-2\" role=\"group\" ><button type=\"button\" class=\"btn btn-secondary\">Left</button><button type=\"button\" class=\"btn btn-secondary\">Middle</button><button type=\"button\" class=\"btn btn-secondary\">Right</button></div><div class=\"btn-group mr-2\" role=\"group\" ><button type=\"button\" class=\"btn btn-secondary\">1</button><button type=\"button\" class=\"btn btn-secondary\">2</button><button type=\"button\" class=\"btn btn-secondary\">3</button></div></div></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Button Toolbar\", \".btn-toolbar\");\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Button groups\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Button_groups.png\">\n                    <div class=\"html-content\"><div class=\"btn-group mr-2\" role=\"group\"><button type=\"button\" class=\"btn btn-secondary\">Left</button><button type=\"button\" class=\"btn btn-secondary\">Middle</button><button type=\"button\" class=\"btn btn-secondary\">Right</button></div></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Button Group\", \".btn-group\");\n                            designSetting(\"notDraggable\", \".btn-group .btn\");\n                            designSetting(\"showWhenEmpty\", \".btn-group\");\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Button groups vertical\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Button_groups_vertical.png\">\n                    <div class=\"html-content\"><div class=\"btn-group-vertical\" role=\"group\"><button type=\"button\" class=\"btn btn-secondary\"> Button 1</button><button type=\"button\" class=\"btn btn-secondary\"> Button 2</button><button type=\"button\" class=\"btn btn-secondary\"> Button 3</button></div></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Button Group Vertical\", \".btn-group-vertical\");\n                            designSetting(\"notDraggable\", \".btn-group-vertical .btn\");\n                            designSetting(\"showWhenEmpty\", \".btn-group-vertical\");\n                        </script>\n                    </div>\n                </div>  \n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"btn-group-lg,btn-group-sm\");\n                        list.altCaption = {\"btn-group-lg\": \"Large\", \"btn-group-sm\": \"Small\"};\n                        addListButton(inEditor, \"Sizing\", list, \".btn-group, .btn-group-vertical\");\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrag.hasClass(\"btn-toolbar\")) { //draggable is toolbar\n                            if (elmDrop.hasClass(\"btn-toolbar\")) { //droppable is toolbar\n                                isOut = true; //therfore put it outside\n                            }\n                            if (elmDrop.hasClass(\"btn-group\")) { //droppable is btn-group\n                                finalShow = false; //therfore not allowed\n                            }\n\n                            if (elmDrop.hasClass(\"btn-group-vertical\")) { //droppable is btn-group-vertical\n                                finalShow = false; //therfore not allowed\n                            }\n\n                            if (elmDrop.hasClass(\"btn\")) { //droppable is button\n                                finalShow = false; //therfore not allowed\n                            }\n                        }\n\n                        if (elmDrag.hasClass(\"btn-group\")) { //draggable is btn-group\n                            if (elmDrop.hasClass(\"btn-group\")) { //droppable is btn-group\n                                isOut = true; //therfore put it outside\n                            }\n                            if (elmDrop.hasClass(\"btn\")) { //droppable is button\n                                if (elmDrag.children(\".dropdown-toggle\").length > 0) {//droppable is a dropdown\n                                    isOut = true; //therfore put it outside\n                                }else{     \n                                    finalShow = false; //therfore not allowed\n                                }\n                            }\n                        }\n\n                        if (elmDrag.hasClass(\"btn-group-vertical\")) { //draggable is btn-group-vertical\n                            if (elmDrop.hasClass(\"btn-group-vertical\")) { //droppable is btn-group\n                                if (elmDrag.find(\"ul\").length == 0) { //so long as the draggable is not a drop down button\n                                    isOut = true; //therfore put it outside\n                                }\n                            }\n                            if (elmDrop.hasClass(\"btn\")) { //droppable is button\n                                if (elmDrag.children(\".dropdown-toggle\").length > 0) {//droppable is a dropdown\n                                    isOut = true; //therfore put it outside\n                                }else{     \n                                    finalShow = false; //therfore not allowed\n                                }\n                            }\n                        }\n\n                    </script>  \n                </div>\n            </div>\n            <div class=\"copyComponent\" title=\"Pagination\"></div>\n            <div class=\"component\" title=\"Control Group Text\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Fix_to_Textbox.png\">\n                <div class=\"html-content\"><div class=\"input-group\"><div class=\"input-group-prepend\"><div class=\"input-group-text\"><span class=\"ag-text-edit\">prepend</span></div></div><div class=\"input-group-append\"><div class=\"input-group-text\"><span class=\"ag-text-edit\">append</span></div></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Input Group\", \".input-group\");\n                        tagReName(\"Prepend\", \".input-group-prepend\");\n                        tagReName(\"Append\", \".input-group-append\");\n                        tagReName(\"Group Text\", \".input-group-text\");\n                        designSetting(\"notDraggable\", \".input-group-prepend, .input-group-append\");\n                        designSetting(\"showWhenEmpty\", \"div.input-group\");\n                        designSetting(\"noMove\", \"div.input-group > *\");\n                    </script>\n                    <style>\n                    \t\t\t\t    .input-group-prepend:empty, .input-group-append:empty{\n                            width: 25%;\n                        }\n                        .input-group-text:empty{\n                            width: 100px; \n                        }\n                    \t\t\t\t    .input-group-append{\n                            margin-left: auto;\n                        }\n                        .input-group-prepend:empty:before{\n                            content: \"prepend...\";\n                        }\n                        .input-group-append:empty:before{\n                            content: \"append...\";\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"input-group-lg,input-group-sm\");\n                        list.altCaption = {\"input-group-lg\": \"Large\", \"input-group-sm\": \"Small\"};\n                        addListButton(inEditor, \"Size\", list, \".input-group\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Control Group Control\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Fix_Button_to_Textbox.png\">\n                <div class=\"html-content\"><div class=\"input-group\"><div class=\"input-group-prepend\"><button type=\"button\" class=\"btn btn-primary\">Button</button></div><div class=\"input-group-append\"><button type=\"button\" class=\"btn btn-primary\">Button</button></div></div></div>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Form Components\">\n            <div class=\"component\" title=\"Modals\" data-alias=\"notice,warn,alert,danger,dialog,prompt,window\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Modals_dialog_prompts.png\">\n                <div class=\"html-content\"><div class=\"modal ag-modal-edit\" id=\"modal-x\" tabindex=\"-1\" role=\"dialog\"><div class=\"modal-dialog bg-white text-body\" role=\"document\"><div class=\"modal-content bg-transparent\"><div class=\"modal-header\"><div class=\"ag-header h4\">Title</div><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div><div class=\"modal-body\"></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-secondary m-r-1\" data-dismiss=\"modal\">Close</button><button type=\"button\" class=\"btn btn-primary\">Save changes</button></div></div></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Modal\", \".modal\", false, \"modal\");\n                        tagReName(\"Modal Header\", \".modal-header\", false, \"modal-header\");\n                        tagReName(\"Modal Dialog\", \".modal-dialog\", false, \"modal-dialog\");\n                        tagReName(\"Modal Body\", \".modal-body\", false, \"modal-body\");\n                        tagReName(\"Modal Footer\", \".modal-footer\", false, \"modal-footer\");\n\n                        designSetting(\"unTouchElement\", \".modal-content\");\n                        designSetting(\"notSelectable\", \".modal-body\");\n                        designSetting(\"noCopy\", \".modal, .modal-header, .modal-footer, .modal-dialog\");\n                        designSetting(\"noRemove\", \".modal-dialog\");\n\n                        hideClassFromPropInspector(\"ag-modal-edit\", true);\n                        hideClassFromPropInspector(\"modal\", false);\n                        designSetting(\"hiddenContent\", \".modal\");\n                    </script>\n                    <style>\n                        .ag-modal-edit {\n                            position: relative;\n                            top: auto;\n                            right: auto;\n                            bottom: auto;\n                            left: auto;\n                            z-index: 1;\n                            margin: 10px;\n                            opacity: 1 !important;\n                            -moz-transition:  none !important;\n                            -webkit-transition:  none !important;\n                            -o-transition: none !important;\n                            transition:  none !important;\n\n                        }\n                        .ag-modal-edit .modal-dialog{\n                            margin: 0px;\n                            -webkit-transition:  none !important;\n                            -o-transition:  none !important;\n                            transition:  none !important;\n                            -webkit-transform:  none !important;;\n                            -ms-transform:  none !important;\n                            -o-transform:  none !important;\n                            transform:  none !important;\n                        }\n                        .modal-body:empty{\n                            padding-bottom: 150px;\n                        }\n                        .fade {\n                            opacity: 1 !important;\n                            -webkit-transition:  none !important;\n                            -o-transition:  none !important;\n                            transition:  none !important;\n                            -webkit-transform: none !important;\n                            -ms-transform: none !important;\n                            -o-transform: none !important;\n                            transform: none !important;\n                        }\n                        .modal.fade .modal-dialog {\n                            -webkit-transition:  none !important;\n                            -o-transition:  none !important;\n                            transition:  none !important;\n                            -webkit-transform: none !important;\n                            -ms-transform: none !important;\n                            -o-transform: none !important;\n                            transform: none !important;\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"openModal\", \"Open Modal\", \"\", \"\", \"a, button\", \".alert button.close, .dropdown-toggle, [data-toggle='tab'], .navbar-toggler\");\n                        showIDlist(inEditor, \"openModal\", \"Modals\", \".modal[id]\", \"data-target\", \"#\", {\"data-toggle\": \"modal\"});\n\n                        addClassButton(inEditor, \"Fade\", \"fade\", \".modal\");\n\n                        var list = new listOption(\"modal-xl,modal-lg,modal-sm\");\n                        list.altCaption = {\"modal-xl\": \"Extra Large\", \"modal-lg\": \"Large\", \"modal-sm\": \"Small\"};\n                        list.applyToFind = \".modal-dialog\";\n                        addListButton(inEditor, \"Size\", list, \".modal\");\n\n                        addClassButton(inEditor, \"Centered\", \"modal-dialog-centered\", \".modal\", \"\", 'selectedElement().children(\".modal-dialog\")');\n                        addClassButton(inEditor, \"Scrollable\", \"modal-dialog-scrollable\", \".modal\", \"\", 'selectedElement().children(\".modal-dialog\")');\n                    </script>\n                </div>\n                <div class=\"beforeDrop\">\n                    <script>\n                        if (dropFromOutside) {//dropped from outside\n                            if (elmDrag.hasClass(\"modal\")) {//is a modal\n                                useCustomDrop = true;\n                                selFrame.find(\"body\").append(elmDragCode);\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n\n                        if (elmDrop.is(getVar[\"modal\"])) {  //droppable is modal therefor make it inside\n                            isOut = false;\n                        } else if (elmDrop.is(getVar[\"modal-header\"])) {  //droppable is modal-header therefor make it inside\n                            isOut = false;\n                        } else if (elmDrop.is(getVar[\"modal-footer\"])) {  //droppable is modal-footer therefor make it inside\n                            isOut = false;\n                        } else if (elmDrop.is(getVar[\"modal-body\"])) {  //droppable is modal-body therefor make it inside\n                            isOut = false;\n                        }\n\n                        //we don't want to drop one modal into another modal\n                        if (elmDrag.is(getVar[\"modal\"])) {  //draggable is modal\n                            if ($(\"#hideModeButton\").hasClass(\"isInHideMode\")== true) {//we are viewing content hidden mode\n                                finalShow = false;\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"afterDrop\">\n                    <script>\n                        //adds unique id to every new navbar\n                        var id = \"modal-\";\n                        var i = uniqueID(id);\n                        var elm = designFrame.find(\"#\" + id + \"x\");\n                        elm.attr(\"id\", id + i);\n\n                        goIntoHideMode(id + i, true);\n\n                        createHiddenControl(id + i);\n\n                    </script>\n                </div>\n                <div class=\"beforeRemove\">\n                    <script>\n                        if (elm.hasClass(\"modal\")) {// collapsible button therefore any hidden content needs to be made vivible\n                            deleteHiddenContNode(\"vis-content-\" + elm.attr(\"id\"));\n                            selectHiddenControl(\"parentPage\");\n                            if (redoRemove == true) {//has the redo to remove button been pressed\n                                if ($(\"#hideModeButton\").hasClass(\"isInHideMode\") == false) { // we are not in content hidden mode therefore we do not know if the otem has been removed when the redo was pressed\n                                    undoRedoCaption(\"Hidden Content Removed (\" + elm.attr(\"id\") + \")\");\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Toasts\" data-alias=\"messages,notifications,push notifications,alert\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Toast.png\">\n                <div class=\"html-content\"><div class=\"toast-container toast-bottom-right pt-3 pb-3 pl-3 pr-3\" id=\"toast-container-x\"><div class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" data-delay=\"10000\"><div class=\"toast-header\"><strong class=\"mr-auto\">Toast</strong><small class=\"text-muted\">11 mins ago</small><button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button></div><div class=\"toast-body\"><p class=\"mb-0\">This is a toast message.</p></div></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Toasts Container\", \".toast-container\", false, \"toast-container\");\n                        tagReName(\"Toasts\", \".toast\");\n                        tagReName(\"Toast Header\", \".toast-header\");\n                        tagReName(\"Toast Body\", \".toast-body\");\n\n                        designSetting(\"noCopy\", \".toast-container, .toast-header, .toast-body\");\n                        designSetting(\"noRemove\", \".toast-header, .toast-body\");\n                        designSetting(\"notDraggable\", \".toast-header, .toast-body\");\n                        designSetting(\"noMove\", \".toast-header, .toast-body\");\n                        designSetting(\"hiddenContent\", \".toast-container\");\n                        hideClassFromPropInspector(\"toast-container\", false);\n                    </script>\n                    <style>\n                        .toast{\n                            opacity: 1 !important;\n                        }\n\n                        .toast-container{\n                            display: none;\n                            position: relative !important;\n                        }\n\n                    </style>\n                </div>\n                <div class=\"requireCSS\" data-check=\".toast-container\">\n                    <style>\n                        .toast-container{\n                            position: fixed;\n                        }\n                    </style>\n                </div>\n                <div class=\"requireCSS\" data-check=\".toast-top-left\">\n                    <style>\n                        .toast-container.toast-top-left{\n                            top: 0;\n                            left: 0;\n                        }\n                    </style>\n                </div>\n                <div class=\"requireCSS\" data-check=\".toast-top-right\">\n                    <style>\n                        .toast-container.toast-top-right{\n                            top: 0;\n                            right: 0;\n                        }\n                    </style>\n                </div>\n                <div class=\"requireCSS\" data-check=\".toast-bottom-left\">\n                    <style>\n                        .toast-container.toast-bottom-left{\n                            bottom: 0;\n                            left: 0;\n                        }\n                    </style>\n                </div>\n                <div class=\"requireCSS\" data-check=\".toast-bottom-right\">\n                    <style>\n                        .toast-container.toast-bottom-right{\n                            bottom: 0;\n                            right: 0;\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"toast-top-left,toast-top-right,toast-bottom-left,toast-bottom-right\");\n                        addListButton(inEditor, \"Placement\", list, \".toast-container\");\n                    </script>\n                </div>\n                <div class=\"eventSnippet\">\n                    <script>\n                        eventSnippet['bootstrapToast'] = '$(\"?????\").toast({\\n        \"autohide\": true,\\n        \"delay\": 5000\\n    }).toast(\"show\");';\n                        eventSnippet['bootstrapToastCheck'] = '$(\"?????\").toast({';\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n\n                        addCustomButton(inEditor, \"bootstrapToastSetup\", \"Toast Setup\", \"\", \"\", \".toast-container\", \"\", \"#2196f3\");\n                        inEditor.find(\"#bootstrapToastSetup\").click(function (event) {\n\n                            var elm = selectedElement();\n\n                            if (elm.is(\".toast-container\")){\n\n                                if (attrExist(elm, \"id\") != \"\") {\n                                    var qry = \"#\" + elm.attr(\"id\") + \" .toast\";\n                                }else{\n                                    var qry = \".toast\";\n                                }\n\n                                goToSourceCode();\n                                handleEvent({\n                                    useSnippet:'bootstrapToast',\n                                    snippetParameters: [qry]\n                                });\n                            }\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n                <div class=\"beforeDrop\">\n                    <script>\n                        if (dropFromOutside) {\n                            if (elmDrag.hasClass(\"toast-container\")) {\n                                useCustomDrop = true;\n                                // append toast container to the body, not to were it was dropped\n                                selFrame.find(\"body\").append(elmDragCode);\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        // we don't want to drop one toast-container into another toast-container\n                        if (elmDrag.is(getVar[\"toast-container\"])) { // draggable is toast-container \n                            // check to see if we are already viewing a toast-container item in the editor\n                            if ($(\"#hideModeButton\").hasClass(\"isInHideMode\") == true) {\n                                finalShow = false;\n                            }\n\n                            if (elmDrop.is(\"body\") == false) { \n                                if (elmDrop.parent().is(\"body\")) {\n                                    isOut = true;\n                                }else{\n                                    notAllowedMessage = \"You can only drop it inside the Body!\";\n                                    finalShow = false;\n                                }\n                            }\n                        } else {\n                            if (elmDrop.is(getVar[\"toast-container\"])) { // droppable is toast-container \n                                isOut = false;\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"afterDrop\">\n                    <script>\n                        //adds unique id to every new toast-container\n                        var id = \"toast-container-\";\n                        var i = uniqueID(id);\n                        var elm = designFrame.find(\"#\" + id + \"x\");\n                        elm.attr(\"id\", id + i);\n                        goIntoHideMode(id + i, true);\n                        createHiddenControl(id + i);\n                    </script>\n                </div>\n                <div class=\"beforeRemove\">\n                    <script>\n                        if (elm.hasClass(\"toast-container\")) {\n                            // remove reference from the editor menu: \n                            deleteHiddenContNode(\"vis-content-\" + elm.attr(\"id\"));\n                            selectHiddenControl(\"parentPage\");\n                            if (redoRemove == true) {//has the redo to remove button been pressed\n                                if ($(\"#hideModeButton\").hasClass(\"isInHideMode\") == false) { // we are not in content hidden mode therefore we do not know if the otem has been removed when the redo was pressed\n                                    undoRedoCaption(\"Hidden Content Removed (\" + elm.attr(\"id\") + \")\");\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Progress bars\" data-alias=\"load\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Progress_bars.png\">\n                <div class=\"html-content\"><div class=\"progress\"><div class=\"progress-bar\" role=\"progressbar\" style=\"width: 25%\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Progress Bar\", \".progress-bar\");\n                        tagReName(\"Progress\", \".progress\");\n                        designSetting(\"notDraggable\", \".progress-bar\");\n                        designSetting(\"notDroppable\", \".progress-bar\");\n                    </script>\n                    <style>\n                        .progress-bar{\n                            min-width: 10% !important;\n                        }\n                        .progress-bar:empty::before{\n                            content: \"\" !important;\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <div id=\"progressValue\">\n                        <form class=\"form-inline col-sm-offset-1\">\n                            <div class=\"form-group\">\n                                <label for=\"prog-val\">Enter a number between <span id=\"prog-min\">0</span> and <span id=\"prog-max\">100</span>: </label>\n                                <div class=\"input-group\">\n                                    <input type=\"number\" min=\"0\" max=\"100\" class=\"form-control\" id=\"prog-val\" aria-label=\"Percentage\">\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <script>\n\n                        addCustomButton(inEditor, \"progValue\", \"Value\", \"\", \"\", \".progress-bar\", \"\", \"#2196f3\");\n                        inEditor.find(\"#progValue\").click(function (event) {\n                            var elm = selectedElement();\n                            var dCont = $(\"#dynamicContent\");\n                            dCont.html(controlLayout.find(\"#progressValue\").html());\n\n                            var progVal = dCont.find(\"#prog-val\");\n                            var valNow = elm.attr('aria-valuenow');\n                            var oldVal = valNow;\n                            progVal.val(valNow);\n\n                            var mx = elm.attr('aria-valuemax');\n                            var mn = elm.attr('aria-valuemin');\n                            progVal.attr(\"min\", mn);\n                            progVal.attr(\"max\", mx);\n\n                            dCont.find(\"#prog-min\").text(mn);\n                            dCont.find(\"#prog-max\").text(mx);\n\n\n                            var okButton = $(\"#CustomModalApplyButton\");\n                            okButton.show();\n                            okButton.off();\n                            okButton.click(function () {\n\n                                var vl = dCont.find(\"#prog-val\").val();\n                                if (vl != \"\") {\n                                    if (isNaN(vl) == false) {\n\n                                        elm.attr(\"aria-valuenow\", vl);\n\n                                        var percentage = Math.floor((vl / Number(mx)) * 100);\n                                        elm.css(\"width\", percentage + \"%\");\n\n                                        focusElement(elm);\n\n                                        undoManager.add({\n                                            undo: function () {\n                                                showIfHidden(elm);\n                                                elm.attr(\"aria-valuenow\", oldVal);\n                                                var oldPercentage = Math.floor((oldVal / Number(mx)) * 100);\n                                                elm.css(\"width\", oldPercentage + \"%\");\n\n                                                resetBreadcrumbAndProps(elm, false);\n                                            },\n                                            redo: function () {\n                                                showIfHidden(elm);\n                                                elm.attr(\"aria-valuenow\", vl);\n                                                elm.css(\"width\", percentage + \"%\");\n\n                                                resetBreadcrumbAndProps(elm, false);\n\n                                            }\n                                        });\n\n                                        undoRedoStatus();\n\n                                    }\n                                }\n\n                                $('#CustomModal').modal('hide');\n\n\n                            });\n\n                            $('#CustomModal').modal('show');\n                            event.stopPropagation();\n                        });\n\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"bg-success,bg-info,bg-warning,bg-danger\");\n                        addListButton(inEditor, \"Style\", list, \".progress-bar\");\n\n                        addClassButton(inEditor, \"Striped\", \"progress-bar-striped\", \".progress-bar\");\n                        addClassButton(inEditor, \"Animated\", \"progress-bar-animated\", \".progress-bar\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Spinners/Pulse\" data-alias=\"load\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/spinners.png\">\n                <div class=\"html-content\"><span class=\"ag-spinner spinner-border\" role=\"status\" aria-hidden=\"true\"></span></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Spinner\", \".spinner-border\");\n                        tagReName(\"Pulse\", \".spinner-grow\");\n                        hideClassFromPropInspector(\"ag-spinner\", true);\n                    </script>\n                    <style>\n                        .spinner-border, .spinner-grow{\n                            -webkit-animation-play-state:paused;\n                            -moz-animation-play-state:paused;\n                            -o-animation-play-state:paused; \n                            animation-play-state:paused;\n                        }\n\n                        .spinner-grow{\n                            opacity: 0.6 !important;\n                        }\n\n                        @keyframes spinner-grow {\n                          0% {\n                            transform: scale(1);\n                          }\n                          50% {\n                            opacity: 1;\n                          }\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"spinner-border,spinner-grow\");\n                        addListButton(inEditor, \"Type\", list, \".ag-spinner\");\n\n                        addClassButton(inEditor, \"Small\", \"spinner-border-sm\", \".ag-spinner\");\n\n                        addCustomButton(inEditor, \"showColor\", \"Color\", \"\", \".ag-spinner\");\n\n                        inEditor.find(\"#showColor\").click(function (event) {\n                            $(\"#tag-att-container\").find(\"input[value='Color']\").closest(\"tr\").find(\"button.btn-link\").click();\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Alerts\">\n                <div class=\"component\" title=\"Alerts (Basic)\" data-alias=\"notice,warn,alert,danger\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Alerts_Basic.png\">\n                    <div class=\"html-content\"><div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><strong>Well done! </strong><span class=\"ag-text-edit\"> You successfully read this important alert message.</span></div></div>\n                    <div class=\"afterDrop\" id=\"alertNoClose\">\n                        <script>\n                            //stop new alert from closing\n                            designWindow().alertNoClose();\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Alerts with Controls\" data-alias=\"notice,warn,info,alert\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Alerts_with_Controls.png\">\n                    <div class=\"html-content\"><div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><div class=\"ag-header h4 alert-heading d-inline-block\">Oh snap! You got an error!</div><p>Change this and that and try again. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras mattis consectetur purus sit amet fermentum.</p><button type=\"button\" class=\"btn btn-danger m-r-1\">Take this action</button><button type=\"button\" class=\"btn btn-secondary\">Or do this</button></div></div>\n                    <div class=\"afterDropCopy\" title=\"alertNoClose\"></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Alert\", \".alert\");\n                        designSetting(\"unTouchElement\", \"button.close > span[aria-hidden='true']\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"alert-primary,alert-secondary,alert-success,alert-info,alert-warning,alert-danger,alert-light,alert-dark\");\n                        list.hasNone = false;\n                        addListButton(inEditor, \"Type\", list, \".alert\");\n\n                        addClassButton(inEditor, \"Visible\", \"show\", \".alert\");\n\n                        addClassButton(inEditor, \"Fix Top\", \"fixed-top\", \".alert\");\n                    </script>\n                </div>\n                <div class=\"contentEditableCleaner\">\n                    <script>\n                        if (contEdt.closest(\".alert\").length > 0) {\n                            contEdt.find(\"a\").addClass(\"alert-link\");\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Tab Panel\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Tabs.png\">\n                <div class=\"html-content\"><div class=\"ag-tabs\" id=\"tabpanel-x\"><ul class=\"nav nav-tabs\" role=\"tablist\"><li class=\"nav-item\"><a class=\"nav-link active\" data-toggle=\"tab\" href=\"#tabpanel-x-tab-1\" role=\"tab\">Home</a></li><li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#tabpanel-x-tab-2\" role=\"tab\">Profile</a></li><li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#tabpanel-x-tab-3\" role=\"tab\">Messages</a></li><li class=\"nav-item\"><a class=\"nav-link\" data-toggle=\"tab\" href=\"#tabpanel-x-tab-4\" role=\"tab\">Settings</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane fade active\" id=\"tabpanel-x-tab-1\" role=\"tabpanel\"></div><div class=\"tab-pane fade\" id=\"tabpanel-x-tab-2\" role=\"tabpanel\"></div><div class=\"tab-pane fade\" id=\"tabpanel-x-tab-3\" role=\"tabpanel\"></div><div class=\"tab-pane fade\" id=\"tabpanel-x-tab-4\" role=\"tabpanel\"></div></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Tab Panel\", \".ag-tabs\");\n\n                        tagReName(\"Tab\", \".ag-tabs > .nav > li > a\");\n                        designSetting(\"unTouchElement\", \".ag-tabs > .nav, .ag-tabs > .nav > li, .ag-tabs > .tab-content\");\n                        designSetting(\"notSelectable\", \".ag-tabs > .tab-content > .tab-pane\");\n                        designSetting(\"noCopy\", \".ag-tabs\");\n                        designSetting(\"noCopy\", \".ag-tabs > .nav > li > a[role='tab']\");\n\n                        designSetting(\"removeOnCopy\", \".ag-tabs\");\n                        designSetting(\"notDraggable\", \".ag-tabs > .nav > li > a, .ag-tabs .tab-pane\");\n                        designSetting(\"notContentEditable\", \".nav li\");\n                        designSetting(\"addOutline\", \".ag-tabs, .tab-content\");\n\n                        hideClassFromPropInspector(\"ag-tabs\", true);\n                    </script>\n                    <style>\n                        .tab-pane:empty{\n                            padding-bottom: 150px;\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"nav-tabs,nav-pills\");\n                        list.hasNone = false;\n                        list.applyToFind = \".nav\";\n                        addListButton(inEditor, \"Type\", list, \".ag-tabs\", \".panel-collapse\");\n\n                        addClassButton(inEditor, \"Stacked\", \"flex-column\", \".ag-tabs\", \".panel-collapse\", 'selectedElement().find(\".nav\")');\n\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"addNewTab\", \"Add New Tab\", \"\", \"\", \".ag-tabs > .nav > li > a[role='tab']\", \"\", \"#2196f3\");\n                        inEditor.find(\"#addNewTab\").click(function (event) {\n\n                            var elm = selectedElement();\n\n                            var tab = elm.closest(\".ag-tabs\");\n                            var tabID = tab.attr(\"id\");\n                            var tabButton = elm.parent();\n                            var tabIndex = tabButton.index();\n                            var tabPanel = tab.children(\".tab-content\").children(\".tab-pane\").eq(tabIndex);\n\n                            var allTabBtns = tabButton.parent().children(\"li\").children(\"a[role='tab']\");\n                            allTabBtns.removeClass(\"active\");\n                            allTabBtns.removeAttr(\"aria-expanded\");\n                            tabButton.after('<div class=\"newStuff\"><li class=\"nav-item\"><a class=\"nav-link active\" data-toggle=\"tab\" href=\"\" role=\"tab\">New Tab</a></li></div>');\n\n                            var allTabPanels = tabPanel.parent().children(\".tab-pane\");\n                            allTabPanels.removeClass(\"active\");\n                            allTabPanels.removeAttr(\"aria-expanded\");\n                            tabPanel.after('<div class=\"newStuff\"><div class=\"tab-pane fade active\" id=\"\" role=\"tabpanel\"></div></div>');\n\n                            runUndoAddNew(false);\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, true, false);\n\n                            tab.children(\".nav\").children(\"li\").each(function (index) {\n                                $(this).children(\"a[role='tab']\").attr(\"href\", \"#\" + tabID + \"-tab-\" + index);\n                            });\n                            tab.children(\".tab-content\").children(\".tab-pane\").each(function (index) {\n                                $(this).attr(\"id\", tabID + \"-tab-\" + index);\n                            });\n\n\n\n                            setTimeout(function () {\n                                focusElement(tabButton.next().children(\"a[role='tab']\"));\n                            }, 100);\n\n\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n                <div class=\"afterDetach\">\n                    <script>\n                        if (addToElm.is(\".ag-tabs > .nav > li\")) {\n                            var tab = addToElm.closest(\".ag-tabs\");\n                            var tabID = tab.attr(\"id\");\n                            tab.children(\".nav\").children(\"li\").each(function (index) {\n                                var tabBtns = $(this).children(\"a[role='tab']\");\n                                tabBtns.attr(\"href\", \"#\" + tabID + \"-tab-\" + index);\n                                tabBtns.removeClass(\"active\");\n                                tabBtns.removeAttr(\"aria-expanded\");\n                                if (index == 0) {\n                                    tabBtns.addClass(\"active\");\n                                }\n                            });\n                            tab.children(\".tab-content\").children(\".tab-pane\").each(function (index) {\n                                $(this).attr(\"id\", tabID + \"-tab-\" + index);\n                                $(this).removeClass(\"active\");\n                                $(this).removeAttr(\"aria-expanded\");\n                                if (index == 0) {\n                                    $(this).addClass(\"active\");\n                                }\n                            });\n\n                        }\n                    </script>\n                </div>\n                <div class=\"afterAttach\">\n                    <script>\n                        if (elm.is(\".ag-tabs > .nav > li\")) {\n                            var tab = elm.closest(\".ag-tabs\");\n                            var tabID = tab.attr(\"id\");\n                            var tabIndex = elm.index();\n                            tab.children(\".nav\").children(\"li\").each(function (index) {\n                                var tabBtns = $(this).children(\"a[role='tab']\");\n                                tabBtns.attr(\"href\", \"#\" + tabID + \"-tab-\" + index);\n                                tabBtns.removeClass(\"active\");\n                                tabBtns.removeAttr(\"aria-expanded\");\n                                if (tabIndex == index){\n                                    tabBtns.addClass(\"active\");\n                                }\n                            });\n                            tab.children(\".tab-content\").children(\".tab-pane\").each(function (index) {\n                                $(this).attr(\"id\", tabID + \"-tab-\" + index);\n                                $(this).removeClass(\"active\");\n                                $(this).removeAttr(\"aria-expanded\");\n                                if (tabIndex == index){\n                                    $(this).addClass(\"active\");\n                                }\n                            });\n                        }\n                    </script>\n                </div>\n                <div class=\"onAttributeSelected\">\n                    <script>\n                        if (elm.hasClass('ag-tabs') == true) {\n                            $(\"#checkID\").prop( \"disabled\", true );\n                        }\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrop.is(\".ag-tabs > .nav > li > a\")) { //is drop elem tab \n                            isOut = false;\n                        }\n                        if (elmDrop.hasClass(\"ag-tabs\")) {\n                            isOut = true;\n                        }\n                        if (elmDrop.is(\".ag-tabs > .tab-content > .tab-pane\")) {\n                            isOut = false;\n                        }\n                    </script>\n                </div>\n                <div class=\"afterDrop\">\n                    <script>\n                        //adds unique id to every new tab\n                        var id = \"tabpanel-\";\n                        var i = uniqueID(id);\n                        var elm = designFrame.find(\"#\" + id + \"x\");\n                        tabId = id + i;\n                        elm.attr(\"id\", tabId);\n                        elm.children(\".nav\").children(\"li\").each(function (index) {\n                            var tabButton = $(this).children(\"a[role='tab']\");\n                            tabButton.attr(\"href\", \"#\" + tabId + \"-tab-\" + index);\n                        });\n                        elm.children(\".tab-content\").children(\".tab-pane\").each(function (index) {\n                            $(this).attr(\"id\", tabId + \"-tab-\" + index);\n                        });\n                    </script>\n                </div>\n                <div class=\"beforeRemove\">\n                    <script>\n                        if (elm.is(\".ag-tabs > .nav > li.nav-item\")) {\n                            var cntrol = attrExist(elm.children(\"a[href]\"), \"href\");\n                            var tab = elm.closest(\".ag-tabs\");\n                            var tabpane = tab.find(cntrol);\n                            extraDetach.push(reAttachHow(tabpane));\n                            tabpane.detach();\n                        }\n                    </script>\n                </div>\n                <div class=\"afterUnHide\">\n                    <script>\n                        var tabPane = visibleElm.closest(\".tab-pane\");\n                        if (tabPane.length > 0) {\n                            if (tabPane.hasClass(\"active\") == false) {\n                                var tab = tabPane.parent().parent();\n                                if (tab.hasClass(\"ag-tabs\")) {\n                                    var tabBtn = tab.children(\".nav\").children(\"li\").children(\"a[role='tab']\");\n                                    tabBtn.removeClass(\"active\");\n                                    tabBtn.removeAttr(\"aria-expanded\");\n\n                                    var tabPanes = tab.children(\".tab-content\").children(\".tab-pane\");\n                                    tabPanes.removeClass(\"active\");\n                                    tabPanes.removeAttr(\"aria-expanded\");\n\n                                    tab.children(\".nav\").children(\"li\").eq(tabPane.index()).children(\"a[role='tab']\").addClass(\"active\");\n                                    tabPane.addClass(\"active\");\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"afterMove\">\n                    <script>\n                        if (movedElm.is(\".ag-tabs > .nav > li > a[data-toggle='tab']\")) {\n                            var tab = movedElm.closest(\".ag-tabs\");\n                            var tabPnlID = movedElm.attr(\"href\");\n                            var tabCont = tab.find(tabPnlID);\n\n                            if (mAfter == true) {\n                                var tNxt = tabCont.next();\n                            } else {\n                                var tNxt = tabCont.prev();\n                            }\n\n                            if (tNxt.length > 0) {\n                                if (mAfter == true) {\n                                    tNxt.after(tabCont);\n                                } else {\n                                    tNxt.before(tabCont);\n                                }\n                                var tabID = tab.attr(\"id\");\n                                tab.children(\".nav\").children(\"li\").each(function (index) {\n                                    var tabButton = $(this).children(\"a[role='tab']\");\n                                    tabButton.attr(\"href\", \"#\" + tabID + \"-tab-\" + index);\n                                    tabButton.removeClass(\"active\");\n                                    tabButton.removeAttr(\"aria-expanded\");\n                                });\n                                tab.children(\".tab-content\").children(\".tab-pane\").each(function (index) {\n                                    $(this).attr(\"id\", tabID + \"-tab-\" + index);\n                                    $(this).removeClass(\"active\");\n                                    $(this).removeAttr(\"aria-expanded\");\n                                });\n                                movedElm.addClass(\"active\");\n                                tabCont.addClass(\"active\");\n\n                            }\n\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Collapsibles\">\n                <div class=\"component\" title=\"Collapsible box\" data-alias=\"show,hide\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Collapsible_box.png\">\n                    <div class=\"html-content\"><a class=\"btn btn-primary\" data-toggle=\"collapse\" href=\"#collapse-basic-x\" aria-expanded=\"true\" aria-controls=\"collapse-basic-x\"> SHOW / HIDE </a><div class=\"collapse show\" id=\"collapse-basic-x\"></div></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Collapsible\", \".collapse.show\");\n                            designSetting(\"noCopy\", \".collapse.show, a[data-toggle='collapse']\");\n                        </script>\n                        <style>\n                            .collapse:empty{\n                                padding-bottom: 150px;\n                            }\n                        </style>\n                    </div>\n                    <div class=\"afterDrop\">\n                        <script>\n                            //adds unique id to every new Collapsible item dropped\n                            var id = \"collapse-basic-\";\n                            var i = uniqueID(id);\n\n                            designFrame.find(\"#\" + id + \"x\").attr(\"id\", id + i);\n                            var elm = designFrame.find(\"a[aria-controls='collapse-basic-x']\");\n                            elm.attr(\"href\", \"#\" + id + i);\n                            elm.attr(\"aria-controls\", id + i);\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Accordion\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap4/Accordion.png\">\n                    <div class=\"html-content\"><div id=\"accordion-x\" class=\"ag-accordion accordion\" role=\"tablist\"><div class=\"card\"><div class=\"card-header p-0\" role=\"tab\" id=\"accordion-x-heading-1\"><a class=\"d-block pl-3 pt-2 pb-2\" data-toggle=\"collapse\" href=\"#accordion-x-collapse-1\" aria-expanded=\"true\" aria-controls=\"accordion-x-collapse-1\"><span class=\"ag-text-span\">Item #1</span></a></div><div id=\"accordion-x-collapse-1\" class=\"collapse show\" role=\"tabpanel\" aria-labelledby=\"accordion-x-heading-1\" data-parent=\"#accordion-x\"><div class=\"card-body\"></div></div></div><div class=\"card\"><div class=\"card-header p-0\" role=\"tab\" id=\"accordion-x-heading-2\"><a class=\"collapsed d-block pl-3 pt-2 pb-2\" data-toggle=\"collapse\" href=\"#accordion-x-collapse-2\" aria-expanded=\"false\" aria-controls=\"accordion-x-collapse-2\"><span class=\"ag-text-span\">Item #2</span></a></div><div id=\"accordion-x-collapse-2\" class=\"collapse\" role=\"tabpanel\" aria-labelledby=\"accordion-x-heading-2\" data-parent=\"#accordion-x\"><div class=\"card-body\"></div></div></div><div class=\"card\"><div class=\"card-header p-0\" role=\"tab\" id=\"accordion-x-heading-3\"><a class=\"collapsed d-block pl-3 pt-2 pb-2\" data-toggle=\"collapse\" href=\"#accordion-x-collapse-3\" aria-expanded=\"false\" aria-controls=\"accordion-x-collapse-3\"><span class=\"ag-text-span\">Item #3</span></a></div><div id=\"accordion-x-collapse-3\" class=\"collapse\" role=\"tabpanel\" aria-labelledby=\"accordion-x-heading-3\" data-parent=\"#accordion-x\"><div class=\"card-body\"></div></div></div></div></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Accordion\", \".ag-accordion\", true);\n\n                            designSetting(\"noCopy\", \".ag-accordion, .ag-accordion .card-header > a > .ag-text-span\");\n                            designSetting(\"noRemove\", \".ag-accordion .card-header > a, .ag-accordion .card-header > a > .ag-text-span\");\n                            designSetting(\"removeOnCopy\", \".ag-accordion\");\n                            designSetting(\"notSelectable\", \".ag-accordion .card-header, .ag-accordion .card-header > a, .ag-accordion div[role='tabpanel'], .ag-accordion .card-body\");\n                            designSetting(\"notDraggable\", \".ag-accordion .card, .ag-accordion .card-header, .ag-accordion .card-header > a, .ag-accordion div[role='tabpanel'], .ag-accordion .card-body\");\n                            designSetting(\"notDroppable\", \".ag-accordion .card, .ag-accordion .card-header, .ag-accordion div[role='tabpanel']\");\n\n                            hideClassFromPropInspector(\"ag-accordion\", true);\n                        </script>\n                        <style>\n                            .ag-accordion > .card > div > .card-body:empty{\n                                padding-bottom: 150px;\n                            }\n                        </style>\n                    </div>\n                    <div class=\"afterDrop\">\n                        <script>\n                            //adds unique id to every new accordian\n                            var id = \"accordion-\";\n                            var i = uniqueID(id);\n                            var elm = designFrame.find(\"#\" + id + \"x\");\n                            accID = id + i;\n                            elm.attr(\"id\", accID);\n                            elm.find('a[data-parent=\"#accordion-x\"]').each(function () {\n                                $(this).attr(\"data-parent\", \"#\" + accID);\n                            });\n                            elm.children(\".card\").each(function (index) {\n                                var pHead = $(this).children(\".card-header\");\n                                var pBody = $(this).children(\"div[role='tabpanel']\");\n\n                                pBody.attr(\"data-parent\", \"#accordion-\" + i);\n\n                                var id = accID + \"-heading-\";\n                                pHead.attr(\"id\", id + index);\n                                pBody.attr(\"aria-labelledby\", id + index);\n\n                                var id = accID + \"-collapse-\";\n                                pBody.attr(\"id\", id + index);\n\n                                var pLink = pHead.children(\"a[data-toggle='collapse']\");\n                                pLink.attr(\"href\", \"#\" + id + index);\n                                pLink.attr(\"aria-controls\", id + index);\n\n                            });\n                        </script>\n                    </div>\n                    <div class=\"onAttributeSelected\">\n                        <script>\n                            if (elm.hasClass('ag-accordion') == true) {\n                                $(\"#checkID\").prop( \"disabled\", true );\n                            }\n                        </script>\n                    </div>\n                    <div class=\"whenDrag\">\n                        <script>\n                            if (elmDrop.is(\".ag-accordion > .card > div > .card-body\")) { //drop element is an Accordion body\n                                isOut = false; // therfore only drop inside\n                            }\n                            if (elmDrop.is(\".ag-accordion > .card > .card-header > a\")) { //drop element is an Accordion title\n                                isOut = false; // therfore only drop inside\n                            }\n                        </script>\n                    </div>\n                    <div class=\"whenCopy\">\n                        <script>\n\n                            //when copying an accordian card we need to setup unigue id's for both the header and body of the new panel\n\n                            if (elm.is(\".ag-accordion > .card\")) { //check if its an accordian card\n\n                                var clClone = clonedElement.closest(\".newStuff\").children(\".card\");\n                                var pHead = clClone.children(\".card-header\");\n                                var pBody = clClone.children(\"div[role='tabpanel']\");\n                                var accID = elm.closest(\".ag-accordion\").attr(\"id\");\n\n                                //add unique id to header\n                                var id = accID + \"-heading-\";\n                                var i = uniqueID(id);\n                                pHead.attr(\"id\", id + i);\n                                pBody.attr(\"aria-labelledby\", id + i);\n\n                                //add unique id to body\n                                var id = accID + \"-collapse-\";\n                                pBody.attr(\"id\", id + i);\n                                var pLink = pHead.children(\"a[data-toggle='collapse']\");\n                                pLink.attr(\"href\", \"#\" + id + i);\n                                pLink.attr(\"aria-controls\", id + i);\n\n                                clClone.find(\".card-body\").html(\"\");\n\n                                //if prevous accordian was open, then close it\n                                var prevAcc = elm.children(\".card-header\");\n                                prevAcc.attr(\"aria-expanded\", \"false\");\n                                prevAcc.addClass(\"collapsed\");\n                                elm.children(\".collapse\").removeClass(\"show\");\n                            }\n\n                        </script>\n                    </div>\n                    <div class=\"afterUnHide\">\n                        <script>\n                            // Expand the accordion panel that contains an edited item.\n                            var accord = visibleElm.closest(\".ag-accordion\");\n                            if (accord.length > 0) {\n                                // First, hide all panels.\n                                accord.children(\".card\").children(\".card-header\").attr(\"aria-expanded\", \"false\").addClass(\"collapsed\");\n                                accord.children(\".card\").children(\".collapse\").removeClass(\"show\");\n\n                                // Expand parent panel only\n                                var aPanel = visibleElm.closest('div[role=\"tabpanel\"]').parent();\n                                aPanel.children(\".card-header\").attr(\"aria-expanded\", \"true\").removeClass(\"collapsed\");\n                                aPanel.children(\".collapse\").addClass(\"show\");\n                            }\n                        </script>\n                    </div>\n                    <div class=\"afterAttach\">\n                        <script>\n\n                            // Expand the recently deleted accordion panel only\n                            var accord = elm.closest(\".ag-accordion\");\n                            if (accord.length > 0) {\n                                // First, hide all panels.\n                                accord.children(\".card\").children(\".card-header\").attr(\"aria-expanded\", \"false\").addClass(\"collapsed\");\n                                accord.children(\".card\").children(\".collapse\").removeClass(\"show\");\n\n                                // Expand parent panel only\n                                elm.children(\".card-header\").attr(\"aria-expanded\", \"true\").removeClass(\"collapsed\");\n                                elm.children(\".collapse\").addClass(\"show\");\n                            }\n\n                        </script>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"globalOptions\">\n            <div class=\"deviceTypeSelectorControl\"><div class=\"form-group\"><label class=\"control-label\">Device Type:</label><select class=\"form-control deviceTypeSelector\"><option value=\"xl\">Large Devices</option><option value=\"lg\" selected=\"selected\">Desktop</option><option value=\"md\">Tablet<option value=\"sm\">Mobile (Landscape)</option><option value=\"xs\">Mobile (Portrait)</option></select></div></div>\n            <div class=\"runOnLoad\">\n                <script>\n                    designSetting(\"unTouchElement\", \".sr-only\");\n                </script>\n            </div>\n            <div class=\"afterUnHide\">\n                <script>\n                    //this is used to unhide any hidden contents that is triggered when using undo redo\n                    //the reason i put this at the bottom here is so that i want the unhide collapse to be called last.\n                    var collapse = visibleElm.closest(\".collapse\");\n                    if (collapse.length > 0) {\n                        if (collapse.hasClass(\"show\") == false) {\n                            //unhide collapse item\n                            collapse.addClass(\"show\");\n\n                            if (attrExist(collapse, \"aria-expanded\") != \"\") {\n                                collapse.attr(\"aria-expanded\", \"true\");\n                            }\n                            collapse.css(\"height\", \"\");\n\n                            //find the item that collapses the collapsed item and set it respectively\n                            var cID = collapse.attr(\"id\");\n\n                            //first check if its a button that triggers this collapsible\n                            var btn = editFrameContent().find(\"[aria-controls='\" + cID + \"']\");\n\n                            if (btn.length > 0) {\n                                btn.removeClass(\"collapsed\");\n                                if (attrExist(btn, \"aria-expanded\") != \"\") {\n                                    btn.attr(\"aria-expanded\", \"true\");\n                                }\n                            }else{\n\n                                //if its not a button then check if its the nav toggler that triggers this collapsible\n                                var nav = editFrameContent().find(\"[data-target='#\" + cID + \"']\");\n                                nav.removeClass(\"collapsed\");\n                                if (attrExist(nav, \"aria-expanded\") != \"\") {\n                                    nav.attr(\"aria-expanded\", \"true\");\n                                }\n                            }\n                        }\n                    }\n                </script>\n            </div>\n            <div class=\"beforeCopy\">\n                <script>\n                    if (elm.is('[data-toggle=\"dropdown\"]')) {\n                        elm = elm.parent();\n                    }\n                </script>\n            </div>\n            <div class=\"afterCopy\">\n                <script>\n                    designWindow().runAllFunctions();\n                </script>\n            </div>\n        </div>\n    </div>\n</div>","include_files":"https://editor.bragndrop.com/assets/js/addOn/meta-settings.js\nhttps://editor.bragndrop.com/assets/js/addOn/html-rules.js\nhttps://editor.bragndrop.com/assets/js/addOn/angular-js.js\nhttps://editor.bragndrop.com/assets/js/addOn/style-edit.js\nhttps://editor.bragndrop.com/assets/js/addOn/google-font-picker.js\nhttps://editor.bragndrop.com/assets/js/addOn/hidden-content.js\nhttps://editor.bragndrop.com/assets/js/addOn/table-edit.js\nhttps://editor.bragndrop.com/assets/js/addOn/jquery-event-handler.js\nhttps://editor.bragndrop.com/assets/js/addOn/manifest.js\nhttps://editor.bragndrop.com/assets/js/addOn/safari-settings.js\nhttps://editor.bragndrop.com/assets/js/addOn/windows-tiles.js\nhttps://editor.bragndrop.com/assets/js/addOn/service-worker.js","property_inspector":"<div class=\"addAttributes\">\n    <script>\n        toggleClassAttribute(\"Border\", \"edit\", [{\"type\": \"checkbox\", \"label\": \"Border Additive\", \"data\": {\"border\": \"full\", \"border-top\": \"top\", \"border-right\": \"right\", \"border-bottom\": \"bottom\", \"border-left\": \"left\"}}, {\"type\": \"checkbox\", \"label\": \"Border Subtractive\", \"data\": {\"border-top-0\": \"top\", \"border-right-0\": \"right\", \"border-bottom-0\": \"bottom\", \"border-left-0\": \"left\"}}, {\"label\": \"Border Color\", \"data\": {\"\": \"none\", \"border-primary\": \"#007bff\", \"border-success\": \"#28a745\", \"border-danger\": \"#dc3545\", \"border-warning\": \"#ffc107\", \"border-info\": \"#17a2b8\", \"border-light\": \"#f8f9fa\", \"border-dark\": \"#343a40\", \"border-secondary\": \"#e9ecef\", \"border-white\": \"#fff\"}}, {\"label\": \"Border Radius\", \"data\": {\"\": \"Initial\", \"rounded-sm\": \"small\", \"rounded-lg\": \"large\", \"rounded\": \"rounded\", \"rounded-top\": \"top\", \"rounded-right\": \"right\", \"rounded-bottom\": \"bottom\", \"rounded-left\": \"left\", \"rounded-circle\": \"circle\", \"rounded-0\": \"none\"}}], \"*\", \".ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Center (horizontal)\", \"no\", [{\"data\": {\"\": \"no\", \"ml-auto mr-auto d-block\": \"yes\"}}], \"*\", \".ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Color\", \"edit\", [{\"label\": \"Background Color\", \"data\": {\"\": \"none\", \"bg-primary\": \"#007bff\", \"bg-secondary\": \"#868e96\", \"bg-success\": \"#28a745\", \"bg-danger\": \"#dc3545\", \"bg-warning\": \"#ffc107\", \"bg-info\": \"#17a2b8\", \"bg-light\": \"#f8f9fa\", \"bg-dark\": \"#343a40\", \"bg-white\": \"#fff\", \"bg-transparent\": \"transparent\"}}, {\"label\": \"Text Color\", \"data\": {\"\": \"none\", \"text-body\": \"#212529\", \"text-primary\": \"#007bff\", \"text-secondary\": \"#868e96\", \"text-success\": \"#28a745\", \"text-danger\": \"#dc3545\", \"text-warning\": \"#ffc107\", \"text-info\": \"#17a2b8\", \"text-light\": \"#f8f9fa\", \"text-dark\": \"#343a40\", \"text-muted\": \"#868e96\", \"text-white\": \"#fff\", \"text-black-50\": \"rgba(0,0,0,.5)\", \"text-white-50\": \"rgba(255,255,255,.5)\"}}], \"*\", \".ag-text, .ag-text-edit, img\");\n\n        toggleClassAttribute(\"Display\", \"edit\", [{\"targetScreen\": {\"label\": \"All Screen Sizes\"}, \"data\": {\"\": \"normal\", \"d-none\": \"none\", \"d-inline\": \"inline\", \"d-inline-block\": \"inline-block\", \"d-block\": \"block\", \"d-table\": \"table\", \"d-table-cell\": \"table-cell\", \"d-flex\": \"flex\", \"d-inline-flex\": \"inline-flex\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\", \"label\": \"Mobile (Landscape) screens or wider\"}, \"data\": {\"\": \"normal\", \"d-sm-none\": \"none\", \"d-sm-inline\": \"inline\", \"d-sm-inline-block\": \"inline-block\", \"d-sm-block\": \"block\", \"d-sm-table\": \"table\", \"d-sm-table-cell\": \"table-cell\", \"d-sm-flex\": \"flex\", \"d-sm-inline-flex\": \"inline-flex\"}}, {\"targetScreen\": {\"id\": \"tablet\", \"label\": \"Tablet screens or wider\"}, \"data\": {\"\": \"normal\", \"d-md-none\": \"none\", \"d-md-inline\": \"inline\", \"d-md-inline-block\": \"inline-block\", \"d-md-block\": \"block\", \"d-md-table\": \"table\", \"d-md-table-cell\": \"table-cell\", \"d-md-flex\": \"flex\", \"d-md-inline-flex\": \"inline-flex\"}}, {\"targetScreen\": {\"id\": \"desktop\", \"label\": \"Desktop screens or wider\"}, \"data\": {\"\": \"normal\", \"d-lg-none\": \"none\", \"d-lg-inline\": \"inline\", \"d-lg-inline-block\": \"inline-block\", \"d-lg-block\": \"block\", \"d-lg-table\": \"table\", \"d-lg-table-cell\": \"table-cell\", \"d-lg-flex\": \"flex\", \"d-lg-inline-flex\": \"inline-flex\"}}, {\"targetScreen\": {\"id\": \"large_screen\", \"label\": \"Large Device screens or wider\"}, \"data\": {\"\": \"normal\", \"d-xl-none\": \"none\", \"d-xl-inline\": \"inline\", \"d-xl-inline-block\": \"inline-block\", \"d-xl-block\": \"block\", \"d-xl-table\": \"table\", \"d-xl-table-cell\": \"table-cell\", \"d-xl-flex\": \"flex\", \"d-xl-inline-flex\": \"inline-flex\"}}], \"*\", \".ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Flex\", \"edit\", [{\"targetScreen\": {\"label\": \"All Screen Sizes\"}, \"label\": \"Enable Flex behaviors\", \"data\": {\"\": \"normal\", \"d-flex\": \"flex\", \"d-inline-flex\": \"inline-flex\"}}, {\"label\": \"Direction\", \"data\": {\"\": \"normal\", \"flex-row\": \"row\", \"flex-row-reverse\": \"row reverse\", \"flex-column\": \"column\", \"flex-column-reverse\": \"column reverse\"}}, {\"label\": \"Justify content (horizontally)\", \"data\": {\"\": \"normal\", \"justify-content-start\": \"start\", \"justify-content-end\": \"end\", \"justify-content-center\": \"center\", \"justify-content-between\": \"between\", \"justify-content-around\": \"around\"}}, {\"label\": \"Align items (vertically)\", \"data\": {\"\": \"normal\", \"align-items-start\": \"start\", \"align-items-end\": \"end\", \"align-items-center\": \"center\", \"align-items-baseline\": \"baseline\", \"align-items-stretch\": \"stretch\"}}, {\"label\": \"Wrap\", \"data\": {\"\": \"normal\", \"flex-nowrap\": \"no wrap\", \"flex-wrap\": \"wrap\", \"flex-wrap-reverse\": \"wrap reverse\"}}, {\"label\": \"Align content (vertically)\", \"data\": {\"\": \"normal\", \"align-content-start\": \"start\", \"align-content-end\": \"end\", \"align-content-center\": \"center\", \"align-content-around\": \"around\", \"align-content-stretch\": \"stretch\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\", \"label\": \"Mobile (Landscape) screens or wider\"}, \"label\": \"Enable Flex behaviors\", \"data\": {\"\": \"normal\", \"d-sm-flex\": \"flex\", \"d-sm-inline-flex\": \"inline-flex\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\"}, \"label\": \"Direction\", \"data\": {\"\": \"normal\", \"flex-sm-row\": \"row\", \"flex-sm-row-reverse\": \"row reverse\", \"flex-sm-column\": \"column\", \"flex-sm-column-reverse\": \"column reverse\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\"}, \"label\": \"Justify content (horizontally)\", \"data\": {\"\": \"normal\", \"justify-content-sm-start\": \"start\", \"justify-content-sm-end\": \"end\", \"justify-content-sm-center\": \"center\", \"justify-content-sm-between\": \"between\", \"justify-content-sm-around\": \"around\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\"}, \"label\": \"Align items (vertically)\", \"data\": {\"\": \"normal\", \"align-items-sm-start\": \"start\", \"align-items-sm-end\": \"end\", \"align-items-sm-center\": \"center\", \"align-items-sm-baseline\": \"baseline\", \"align-items-sm-stretch\": \"stretch\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\"}, \"label\": \"Wrap\", \"data\": {\"\": \"normal\", \"flex-sm-nowrap\": \"no wrap\", \"flex-sm-wrap\": \"wrap\", \"flex-sm-wrap-reverse\": \"wrap reverse\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\"}, \"label\": \"Align content (vertically)\", \"data\": {\"\": \"normal\", \"align-content-sm-start\": \"start\", \"align-content-sm-end\": \"end\", \"align-content-sm-center\": \"center\", \"align-content-sm-around\": \"around\", \"align-content-sm-stretch\": \"stretch\"}}, {\"targetScreen\": {\"id\": \"tablet\", \"label\": \"Tablet screens or wider\"}, \"label\": \"Enable Flex behaviors\", \"data\": {\"\": \"normal\", \"d-md-flex\": \"flex\", \"d-md-inline-flex\": \"inline-flex\"}}, {\"targetScreen\": {\"id\": \"tablet\"}, \"label\": \"Direction\", \"data\": {\"\": \"normal\", \"flex-md-row\": \"row\", \"flex-md-row-reverse\": \"row reverse\", \"flex-md-column\": \"column\", \"flex-md-column-reverse\": \"column reverse\"}}, {\"targetScreen\": {\"id\": \"tablet\"}, \"label\": \"Justify content (horizontally)\", \"data\": {\"\": \"normal\", \"justify-content-md-start\": \"start\", \"justify-content-md-end\": \"end\", \"justify-content-md-center\": \"center\", \"justify-content-md-between\": \"between\", \"justify-content-md-around\": \"around\"}}, {\"targetScreen\": {\"id\": \"tablet\"}, \"label\": \"Align items (vertically)\", \"data\": {\"\": \"normal\", \"align-items-md-start\": \"start\", \"align-items-md-end\": \"end\", \"align-items-md-center\": \"center\", \"align-items-md-baseline\": \"baseline\", \"align-items-md-stretch\": \"stretch\"}}, {\"targetScreen\": {\"id\": \"tablet\"}, \"label\": \"Wrap\", \"data\": {\"\": \"normal\", \"flex-md-nowrap\": \"no wrap\", \"flex-md-wrap\": \"wrap\", \"flex-md-wrap-reverse\": \"wrap reverse\"}}, {\"targetScreen\": {\"id\": \"tablet\"}, \"label\": \"Align content (vertically)\", \"data\": {\"\": \"normal\", \"align-content-md-start\": \"start\", \"align-content-md-end\": \"end\", \"align-content-md-center\": \"center\", \"align-content-md-around\": \"around\", \"align-content-md-stretch\": \"stretch\"}}, {\"targetScreen\": {\"id\": \"desktop\", \"label\": \"Desktop screens or wider\"}, \"label\": \"Enable Flex behaviors\", \"data\": {\"\": \"normal\", \"d-lg-flex\": \"flex\", \"d-lg-inline-flex\": \"inline-flex\"}}, {\"targetScreen\": {\"id\": \"desktop\"}, \"label\": \"Direction\", \"data\": {\"\": \"normal\", \"flex-lg-row\": \"row\", \"flex-lg-row-reverse\": \"row reverse\", \"flex-lg-column\": \"column\", \"flex-lg-column-reverse\": \"column reverse\"}}, {\"targetScreen\": {\"id\": \"desktop\"}, \"label\": \"Justify content (horizontally)\", \"data\": {\"\": \"normal\", \"justify-content-lg-start\": \"start\", \"justify-content-lg-end\": \"end\", \"justify-content-lg-center\": \"center\", \"justify-content-lg-between\": \"between\", \"justify-content-lg-around\": \"around\"}}, {\"targetScreen\": {\"id\": \"desktop\"}, \"label\": \"Align items (vertically)\", \"data\": {\"\": \"normal\", \"align-items-lg-start\": \"start\", \"align-items-lg-end\": \"end\", \"align-items-lg-center\": \"center\", \"align-items-lg-baseline\": \"baseline\", \"align-items-lg-stretch\": \"stretch\"}}, {\"targetScreen\": {\"id\": \"desktop\"}, \"label\": \"Wrap\", \"data\": {\"\": \"normal\", \"flex-lg-nowrap\": \"no wrap\", \"flex-lg-wrap\": \"wrap\", \"flex-lg-wrap-reverse\": \"wrap reverse\"}}, {\"targetScreen\": {\"id\": \"desktop\"}, \"label\": \"Align content (vertically)\", \"data\": {\"\": \"normal\", \"align-content-lg-start\": \"start\", \"align-content-lg-end\": \"end\", \"align-content-lg-center\": \"center\", \"align-content-lg-around\": \"around\", \"align-content-lg-stretch\": \"stretch\"}}, {\"targetScreen\": {\"id\": \"large_screen\", \"label\": \"Large Device screens or wider\"}, \"label\": \"Enable Flex behaviors\", \"data\": {\"\": \"normal\", \"d-xl-flex\": \"flex\", \"d-xl-inline-flex\": \"inline-flex\"}}, {\"targetScreen\": {\"id\": \"large_screen\"}, \"label\": \"Direction\", \"data\": {\"\": \"normal\", \"flex-xl-row\": \"row\", \"flex-xl-row-reverse\": \"row reverse\", \"flex-xl-column\": \"column\", \"flex-xl-column-reverse\": \"column reverse\"}}, {\"targetScreen\": {\"id\": \"large_screen\"}, \"label\": \"Justify content (horizontally)\", \"data\": {\"\": \"normal\", \"justify-content-xl-start\": \"start\", \"justify-content-xl-end\": \"end\", \"justify-content-xl-center\": \"center\", \"justify-content-xl-between\": \"between\", \"justify-content-xl-around\": \"around\"}}, {\"targetScreen\": {\"id\": \"large_screen\"}, \"label\": \"Align items (vertically)\", \"data\": {\"\": \"normal\", \"align-items-xl-start\": \"start\", \"align-items-xl-end\": \"end\", \"align-items-xl-center\": \"center\", \"align-items-xl-baseline\": \"baseline\", \"align-items-xl-stretch\": \"stretch\"}}, {\"targetScreen\": {\"id\": \"large_screen\"}, \"label\": \"Wrap\", \"data\": {\"\": \"normal\", \"flex-xl-nowrap\": \"no wrap\", \"flex-xl-wrap\": \"wrap\", \"flex-xl-wrap-reverse\": \"wrap reverse\"}}, {\"targetScreen\": {\"id\": \"large_screen\"}, \"label\": \"Align content (vertically)\", \"data\": {\"\": \"normal\", \"align-content-xl-start\": \"start\", \"align-content-xl-end\": \"end\", \"align-content-xl-center\": \"center\", \"align-content-xl-around\": \"around\", \"align-content-xl-stretch\": \"stretch\"}}], \"*\", \".ag-text, .ag-text-edit, .d-flex > *, .d-inline-flex > *\");\n\n        toggleClassAttribute(\"Flex Items\", \"edit\", [{\"targetScreen\":{\"label\":\"All Screen Sizes\"},\"label\":\"Align self (vertically)\",\"data\":{\"\":\"normal\",\"align-self-start\":\"start\",\"align-self-end\":\"end\",\"align-self-center\":\"center\",\"align-self-baseline\":\"baseline\",\"align-self-stretch\":\"stretch\"}},{\"label\":\"Fill Width\",\"data\":{\"\":\"normal\",\"flex-fill\":\"fill\"}},{\"label\":\"Grow/Shrink\",\"data\":{\"\":\"normal\",\"flex-grow-0 flex-shrink-0\":\"reset\",\"flex-shrink-1\":\"shrink\",\"flex-grow-1\":\"grow\"}},{\"label\":\"Auto Margins\",\"data\":{\"\":\"normal\",\"ml-0\":\"none\",\"ml-auto\":\"left\",\"mr-auto\":\"right\"}},{\"label\":\"Order\",\"data\":{\"\":\"normal\",\"order-0\":\"0\",\"order-1\":\"1\",\"order-2\":\"2\",\"order-3\":\"3\",\"order-4\":\"4\",\"order-5\":\"5\",\"order-6\":\"6\",\"order-7\":\"7\",\"order-8\":\"8\",\"order-9\":\"9\",\"order-10\":\"10\",\"order-11\":\"11\",\"order-12\":\"12\"}},{\"targetScreen\":{\"id\":\"mobile_landscape\",\"label\":\"Mobile (Landscape) screens or wider\"},\"label\":\"Align self (vertically)\",\"data\":{\"\":\"normal\",\"align-self-sm-start\":\"start\",\"align-self-sm-end\":\"end\",\"align-self-sm-center\":\"center\",\"align-self-sm-baseline\":\"baseline\",\"align-self-sm-stretch\":\"stretch\"}},{\"targetScreen\":{\"id\":\"mobile_landscape\"},\"label\":\"Fill Width\",\"data\":{\"\":\"normal\",\"flex-sm-fill\":\"fill\"}},{\"targetScreen\":{\"id\":\"mobile_landscape\"},\"label\":\"Grow/Shrink\",\"data\":{\"\":\"normal\",\"flex-sm-grow-0 flex-sm-shrink-0\":\"reset\",\"flex-sm-shrink-1\":\"shrink\",\"flex-sm-grow-1\":\"grow\"}},{\"targetScreen\":{\"id\":\"mobile_landscape\"},\"label\":\"Auto Margins\",\"data\":{\"\":\"normal\",\"ml-sm-0\":\"none\",\"ml-sm-auto\":\"left\",\"mr-sm-auto\":\"right\"}},{\"targetScreen\":{\"id\":\"mobile_landscape\"},\"label\":\"Order\",\"data\":{\"\":\"normal\",\"order-sm-0\":\"0\",\"order-sm-1\":\"1\",\"order-sm-2\":\"2\",\"order-sm-3\":\"3\",\"order-sm-4\":\"4\",\"order-sm-5\":\"5\",\"order-sm-6\":\"6\",\"order-sm-7\":\"7\",\"order-sm-8\":\"8\",\"order-sm-9\":\"9\",\"order-sm-10\":\"10\",\"order-sm-11\":\"11\",\"order-sm-12\":\"12\"}},{\"targetScreen\":{\"id\":\"tablet\",\"label\":\"Tablet screens or wider\"},\"label\":\"Align self (vertically)\",\"data\":{\"\":\"normal\",\"align-self-md-start\":\"start\",\"align-self-md-end\":\"end\",\"align-self-md-center\":\"center\",\"align-self-md-baseline\":\"baseline\",\"align-self-md-stretch\":\"stretch\"}},{\"targetScreen\":{\"id\":\"tablet\"},\"label\":\"Fill Width\",\"data\":{\"\":\"normal\",\"flex-md-fill\":\"fill\"}},{\"targetScreen\":{\"id\":\"tablet\"},\"label\":\"Grow/Shrink\",\"data\":{\"\":\"normal\",\"flex-md-grow-0 flex-md-shrink-0\":\"reset\",\"flex-md-shrink-1\":\"shrink\",\"flex-md-grow-1\":\"grow\"}},{\"targetScreen\":{\"id\":\"tablet\"},\"label\":\"Auto Margins\",\"data\":{\"\":\"normal\",\"ml-md-0\":\"none\",\"ml-md-auto\":\"left\",\"mr-md-auto\":\"right\"}},{\"targetScreen\":{\"id\":\"tablet\"},\"label\":\"Order\",\"data\":{\"\":\"normal\",\"order-md-0\":\"0\",\"order-md-1\":\"1\",\"order-md-2\":\"2\",\"order-md-3\":\"3\",\"order-md-4\":\"4\",\"order-md-5\":\"5\",\"order-md-6\":\"6\",\"order-md-7\":\"7\",\"order-md-8\":\"8\",\"order-md-9\":\"9\",\"order-md-10\":\"10\",\"order-md-11\":\"11\",\"order-md-12\":\"12\"}},{\"targetScreen\":{\"id\":\"desktop\",\"label\":\"Desktop screens or wider\"},\"label\":\"Align self (vertically)\",\"data\":{\"\":\"normal\",\"align-self-lg-start\":\"start\",\"align-self-lg-end\":\"end\",\"align-self-lg-center\":\"center\",\"align-self-lg-baseline\":\"baseline\",\"align-self-lg-stretch\":\"stretch\"}},{\"targetScreen\":{\"id\":\"desktop\"},\"label\":\"Fill Width\",\"data\":{\"\":\"normal\",\"flex-lg-fill\":\"fill\"}},{\"targetScreen\":{\"id\":\"desktop\"},\"label\":\"Grow/Shrink\",\"data\":{\"\":\"normal\",\"flex-lg-grow-0 flex-lg-shrink-0\":\"reset\",\"flex-lg-shrink-1\":\"shrink\",\"flex-lg-grow-1\":\"grow\"}},{\"targetScreen\":{\"id\":\"desktop\"},\"label\":\"Auto Margins\",\"data\":{\"\":\"normal\",\"ml-lg-0\":\"none\",\"ml-lg-auto\":\"left\",\"mr-lg-auto\":\"right\"}},{\"targetScreen\":{\"id\":\"desktop\"},\"label\":\"Order\",\"data\":{\"\":\"normal\",\"order-lg-0\":\"0\",\"order-lg-1\":\"1\",\"order-lg-2\":\"2\",\"order-lg-3\":\"3\",\"order-lg-4\":\"4\",\"order-lg-5\":\"5\",\"order-lg-6\":\"6\",\"order-lg-7\":\"7\",\"order-lg-8\":\"8\",\"order-lg-9\":\"9\",\"order-lg-10\":\"10\",\"order-lg-11\":\"11\",\"order-lg-12\":\"12\"}},{\"targetScreen\":{\"id\":\"large_screen\",\"label\":\"Large Device screens or wider\"},\"label\":\"Align self (vertically)\",\"data\":{\"\":\"normal\",\"align-self-xl-start\":\"start\",\"align-self-xl-end\":\"end\",\"align-self-xl-center\":\"center\",\"align-self-xl-baseline\":\"baseline\",\"align-self-xl-stretch\":\"stretch\"}},{\"targetScreen\":{\"id\":\"large_screen\"},\"label\":\"Fill Width\",\"data\":{\"\":\"normal\",\"flex-xl-fill\":\"fill\"}},{\"targetScreen\":{\"id\":\"large_screen\"},\"label\":\"Grow/Shrink\",\"data\":{\"\":\"normal\",\"flex-xl-grow-0 flex-xl-shrink-0\":\"reset\",\"flex-xl-shrink-1\":\"shrink\",\"flex-xl-grow-1\":\"grow\"}},{\"targetScreen\":{\"id\":\"large_screen\"},\"label\":\"Auto Margins\",\"data\":{\"\":\"normal\",\"ml-xl-0\":\"none\",\"ml-xl-auto\":\"left\",\"mr-xl-auto\":\"right\"}},{\"targetScreen\":{\"id\":\"large_screen\"},\"label\":\"Order\",\"data\":{\"\":\"normal\",\"order-xl-0\":\"0\",\"order-xl-1\":\"1\",\"order-xl-2\":\"2\",\"order-xl-3\":\"3\",\"order-xl-4\":\"4\",\"order-xl-5\":\"5\",\"order-xl-6\":\"6\",\"order-xl-7\":\"7\",\"order-xl-8\":\"8\",\"order-xl-9\":\"9\",\"order-xl-10\":\"10\",\"order-xl-11\":\"11\",\"order-xl-12\":\"12\"}}], \".d-flex > *, .d-inline-flex > *\", \".ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Float left/right\", \"edit\", [{\"targetScreen\": {\"label\": \"All Screen Sizes\"}, \"data\": {\"\": \"none\", \"float-left\": \"left\", \"float-right\": \"right\", \"float-none\": \"remove float\", \"clearfix\": \"clearfix\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\", \"label\": \"Mobile (Landscape) screens or wider\"}, \"data\": {\"\": \"none\", \"float-sm-left\": \"left\", \"float-sm-right\": \"right\", \"float-sm-none\": \"remove float\"}}, {\"targetScreen\": {\"id\": \"tablet\", \"label\": \"Tablet screens or wider\"}, \"data\": {\"\": \"none\", \"float-md-left\": \"left\", \"float-md-right\": \"right\", \"float-md-none\": \"remove float\"}}, {\"targetScreen\": {\"id\": \"desktop\", \"label\": \"Desktop screens or wider\"}, \"data\": {\"\": \"none\", \"float-lg-left\": \"left\", \"float-lg-right\": \"right\", \"float-lg-none\": \"remove float\"}}, {\"targetScreen\": {\"id\": \"large_screen\", \"label\": \"Large Device screens or wider\"}, \"data\": {\"\": \"none\", \"float-xl-left\": \"left\", \"float-xl-right\": \"right\", \"float-xl-none\": \"remove float\"}}], \"*\", \"body, .ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Height\", \"edit\", [{\"label\": \"Height\", \"data\": {\"\": \"none\", \"h-25\": \"25%\", \"h-50\": \"50%\", \"h-75\": \"75%\", \"h-100\": \"100%\", \"h-auto\": \"auto\", \"mh-100\": \"Max 100%\"}}], \"*\", \".ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Margin\", \"edit\", [{\"targetScreen\": {\"label\": \"All Screen Sizes\"}, \"label\": \"Top\", \"data\": {\"\": \"none\", \"mt-n5\": \"-5\", \"mt-n4\": \"-4\", \"mt-n3\": \"-3\", \"mt-n2\": \"-2\", \"mt-n1\": \"-1\", \"mt-0\": \"0\", \"mt-1\": \"1\", \"mt-2\": \"2\", \"mt-3\": \"3\", \"mt-4\": \"4\", \"mt-5\": \"5\", \"mt-auto\": \"<i class='fa fa-arrow-up'></i>\"}}, {\"label\": \"Bottom\", \"data\": {\"\": \"none\", \"mb-n5\": \"-5\", \"mb-n4\": \"-4\", \"mb-n3\": \"-3\", \"mb-n2\": \"-2\", \"mb-n1\": \"-1\", \"mb-0\": \"0\", \"mb-1\": \"1\", \"mb-2\": \"2\", \"mb-3\": \"3\", \"mb-4\": \"4\", \"mb-5\": \"5\", \"mb-auto\": \"<i class='fa fa-arrow-down'></i>\"}}, {\"label\": \"Left\", \"data\": {\"\": \"none\", \"ml-n5\": \"-5\", \"ml-n4\": \"-4\", \"ml-n3\": \"-3\", \"ml-n2\": \"-2\", \"ml-n1\": \"-1\", \"ml-0\": \"0\", \"ml-1\": \"1\", \"ml-2\": \"2\", \"ml-3\": \"3\", \"ml-4\": \"4\", \"ml-5\": \"5\", \"ml-auto\": \"<i class='fa fa-arrow-left'></i>\"}}, {\"label\": \"Right\", \"data\": {\"\": \"none\", \"mr-n5\": \"-5\", \"mr-n4\": \"-4\", \"mr-n3\": \"-3\", \"mr-n2\": \"-2\", \"mr-n1\": \"-1\", \"mr-0\": \"0\", \"mr-1\": \"1\", \"mr-2\": \"2\", \"mr-3\": \"3\", \"mr-4\": \"4\", \"mr-5\": \"5\", \"mr-auto\": \"<i class='fa fa-arrow-right'></i>\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\", \"label\": \"Mobile (Landscape) screens or wider\"}, \"label\": \"Top\", \"data\": {\"\": \"none\", \"mt-sm-n5\": \"-5\", \"mt-sm-n4\": \"-4\", \"mt-sm-n3\": \"-3\", \"mt-sm-n2\": \"-2\", \"mt-sm-n1\": \"-1\", \"mt-sm-0\": \"0\", \"mt-sm-1\": \"1\", \"mt-sm-2\": \"2\", \"mt-sm-3\": \"3\", \"mt-sm-4\": \"4\", \"mt-sm-5\": \"5\", \"mt-sm-auto\": \"<i class='fa fa-arrow-up'></i>\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\"}, \"label\": \"Bottom\", \"data\": {\"\": \"none\", \"mb-sm-n5\": \"-5\", \"mb-sm-n4\": \"-4\", \"mb-sm-n3\": \"-3\", \"mb-sm-n2\": \"-2\", \"mb-sm-n1\": \"-1\", \"mb-sm-0\": \"0\", \"mb-sm-1\": \"1\", \"mb-sm-2\": \"2\", \"mb-sm-3\": \"3\", \"mb-sm-4\": \"4\", \"mb-sm-5\": \"5\", \"mb-sm-auto\": \"<i class='fa fa-arrow-down'></i>\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\"}, \"label\": \"Left\", \"data\": {\"\": \"none\", \"ml-sm-n5\": \"-5\", \"ml-sm-n4\": \"-4\", \"ml-sm-n3\": \"-3\", \"ml-sm-n2\": \"-2\", \"ml-sm-n1\": \"-1\", \"ml-sm-0\": \"0\", \"ml-sm-1\": \"1\", \"ml-sm-2\": \"2\", \"ml-sm-3\": \"3\", \"ml-sm-4\": \"4\", \"ml-sm-5\": \"5\", \"ml-sm-auto\": \"<i class='fa fa-arrow-left'></i>\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\"}, \"label\": \"Right\", \"data\": {\"\": \"none\", \"mr-sm-n5\": \"-5\", \"mr-sm-n4\": \"-4\", \"mr-sm-n3\": \"-3\", \"mr-sm-n2\": \"-2\", \"mr-sm-n1\": \"-1\", \"mr-sm-0\": \"0\", \"mr-sm-1\": \"1\", \"mr-sm-2\": \"2\", \"mr-sm-3\": \"3\", \"mr-sm-4\": \"4\", \"mr-sm-5\": \"5\", \"mr-sm-auto\": \"<i class='fa fa-arrow-right'></i>\"}}, {\"targetScreen\": {\"id\": \"tablet\", \"label\": \"Tablet screens or wider\"}, \"label\": \"Top\", \"data\": {\"\": \"none\", \"mt-md-n5\": \"-5\", \"mt-md-n4\": \"-4\", \"mt-md-n3\": \"-3\", \"mt-md-n2\": \"-2\", \"mt-md-n1\": \"-1\", \"mt-md-0\": \"0\", \"mt-md-1\": \"1\", \"mt-md-2\": \"2\", \"mt-md-3\": \"3\", \"mt-md-4\": \"4\", \"mt-md-5\": \"5\", \"mt-md-auto\": \"<i class='fa fa-arrow-up'></i>\"}}, {\"targetScreen\": {\"id\": \"tablet\"}, \"label\": \"Bottom\", \"data\": {\"\": \"none\", \"mb-md-n5\": \"-5\", \"mb-md-n4\": \"-4\", \"mb-md-n3\": \"-3\", \"mb-md-n2\": \"-2\", \"mb-md-n1\": \"-1\", \"mb-md-0\": \"0\", \"mb-md-1\": \"1\", \"mb-md-2\": \"2\", \"mb-md-3\": \"3\", \"mb-md-4\": \"4\", \"mb-md-5\": \"5\", \"mb-md-auto\": \"<i class='fa fa-arrow-down'></i>\"}}, {\"targetScreen\": {\"id\": \"tablet\"}, \"label\": \"Left\", \"data\": {\"\": \"none\", \"ml-md-n5\": \"-5\", \"ml-md-n4\": \"-4\", \"ml-md-n3\": \"-3\", \"ml-md-n2\": \"-2\", \"ml-md-n1\": \"-1\", \"ml-md-0\": \"0\", \"ml-md-1\": \"1\", \"ml-md-2\": \"2\", \"ml-md-3\": \"3\", \"ml-md-4\": \"4\", \"ml-md-5\": \"5\", \"ml-md-auto\": \"<i class='fa fa-arrow-left'></i>\"}}, {\"targetScreen\": {\"id\": \"tablet\"}, \"label\": \"Right\", \"data\": {\"\": \"none\", \"mr-md-n5\": \"-5\", \"mr-md-n4\": \"-4\", \"mr-md-n3\": \"-3\", \"mr-md-n2\": \"-2\", \"mr-md-n1\": \"-1\", \"mr-md-0\": \"0\", \"mr-md-1\": \"1\", \"mr-md-2\": \"2\", \"mr-md-3\": \"3\", \"mr-md-4\": \"4\", \"mr-md-5\": \"5\", \"mr-md-auto\": \"<i class='fa fa-arrow-right'></i>\"}}, {\"targetScreen\": {\"id\": \"desktop\", \"label\": \"Desktop screens or wider\"}, \"label\": \"Top\", \"data\": {\"\": \"none\", \"mt-lg-n5\": \"-5\", \"mt-lg-n4\": \"-4\", \"mt-lg-n3\": \"-3\", \"mt-lg-n2\": \"-2\", \"mt-lg-n1\": \"-1\", \"mt-lg-0\": \"0\", \"mt-lg-1\": \"1\", \"mt-lg-2\": \"2\", \"mt-lg-3\": \"3\", \"mt-lg-4\": \"4\", \"mt-lg-5\": \"5\", \"mt-lg-auto\": \"<i class='fa fa-arrow-up'></i>\"}}, {\"targetScreen\": {\"id\": \"desktop\"}, \"label\": \"Bottom\", \"data\": {\"\": \"none\", \"mb-lg-n5\": \"-5\", \"mb-lg-n4\": \"-4\", \"mb-lg-n3\": \"-3\", \"mb-lg-n2\": \"-2\", \"mb-lg-n1\": \"-1\", \"mb-lg-0\": \"0\", \"mb-lg-1\": \"1\", \"mb-lg-2\": \"2\", \"mb-lg-3\": \"3\", \"mb-lg-4\": \"4\", \"mb-lg-5\": \"5\", \"mb-lg-auto\": \"<i class='fa fa-arrow-down'></i>\"}}, {\"targetScreen\": {\"id\": \"desktop\"}, \"label\": \"Left\", \"data\": {\"\": \"none\", \"ml-lg-n5\": \"-5\", \"ml-lg-n4\": \"-4\", \"ml-lg-n3\": \"-3\", \"ml-lg-n2\": \"-2\", \"ml-lg-n1\": \"-1\", \"ml-lg-0\": \"0\", \"ml-lg-1\": \"1\", \"ml-lg-2\": \"2\", \"ml-lg-3\": \"3\", \"ml-lg-4\": \"4\", \"ml-lg-5\": \"5\", \"ml-lg-auto\": \"<i class='fa fa-arrow-left'></i>\"}}, {\"targetScreen\": {\"id\": \"desktop\"}, \"label\": \"Right\", \"data\": {\"\": \"none\", \"mr-lg-n5\": \"-5\", \"mr-lg-n4\": \"-4\", \"mr-lg-n3\": \"-3\", \"mr-lg-n2\": \"-2\", \"mr-lg-n1\": \"-1\", \"mr-lg-0\": \"0\", \"mr-lg-1\": \"1\", \"mr-lg-2\": \"2\", \"mr-lg-3\": \"3\", \"mr-lg-4\": \"4\", \"mr-lg-5\": \"5\", \"mr-lg-auto\": \"<i class='fa fa-arrow-right'></i>\"}}, {\"targetScreen\": {\"id\": \"large_screen\", \"label\": \"Large Device screens or wider\"}, \"label\": \"Top\", \"data\": {\"\": \"none\", \"mt-xl-n5\": \"-5\", \"mt-xl-n4\": \"-4\", \"mt-xl-n3\": \"-3\", \"mt-xl-n2\": \"-2\", \"mt-xl-n1\": \"-1\", \"mt-xl-0\": \"0\", \"mt-xl-1\": \"1\", \"mt-xl-2\": \"2\", \"mt-xl-3\": \"3\", \"mt-xl-4\": \"4\", \"mt-xl-5\": \"5\", \"mt-xl-auto\": \"<i class='fa fa-arrow-up'></i>\"}}, {\"targetScreen\": {\"id\": \"large_screen\"}, \"label\": \"Bottom\", \"data\": {\"\": \"none\", \"mb-xl-n5\": \"-5\", \"mb-xl-n4\": \"-4\", \"mb-xl-n3\": \"-3\", \"mb-xl-n2\": \"-2\", \"mb-xl-n1\": \"-1\", \"mb-xl-0\": \"0\", \"mb-xl-1\": \"1\", \"mb-xl-2\": \"2\", \"mb-xl-3\": \"3\", \"mb-xl-4\": \"4\", \"mb-xl-5\": \"5\", \"mb-xl-auto\": \"<i class='fa fa-arrow-down'></i>\"}}, {\"targetScreen\": {\"id\": \"large_screen\"}, \"label\": \"Left\", \"data\": {\"\": \"none\", \"ml-xl-n5\": \"-5\", \"ml-xl-n4\": \"-4\", \"ml-xl-n3\": \"-3\", \"ml-xl-n2\": \"-2\", \"ml-xl-n1\": \"-1\", \"ml-xl-0\": \"0\", \"ml-xl-1\": \"1\", \"ml-xl-2\": \"2\", \"ml-xl-3\": \"3\", \"ml-xl-4\": \"4\", \"ml-xl-5\": \"5\", \"ml-xl-auto\": \"<i class='fa fa-arrow-left'></i>\"}}, {\"targetScreen\": {\"id\": \"large_screen\"}, \"label\": \"Right\", \"data\": {\"\": \"none\", \"mr-xl-n5\": \"-5\", \"mr-xl-n4\": \"-4\", \"mr-xl-n3\": \"-3\", \"mr-xl-n2\": \"-2\", \"mr-xl-n1\": \"-1\", \"mr-xl-0\": \"0\", \"mr-xl-1\": \"1\", \"mr-xl-2\": \"2\", \"mr-xl-3\": \"3\", \"mr-xl-4\": \"4\", \"mr-xl-5\": \"5\", \"mr-xl-auto\": \"<i class='fa fa-arrow-right'></i>\"}}], \"*\", \".ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Padding\", \"edit\", [{\"targetScreen\": {\"label\": \"All Screen Sizes\"}, \"label\": \"Top\", \"data\": {\"\": \"none\", \"pt-0\": \"0\", \"pt-1\": \"1\", \"pt-2\": \"2\", \"pt-3\": \"3\", \"pt-4\": \"4\", \"pt-5\": \"5\"}}, {\"label\": \"Bottom\", \"data\": {\"\": \"none\", \"pb-0\": \"0\", \"pb-1\": \"1\", \"pb-2\": \"2\", \"pb-3\": \"3\", \"pb-4\": \"4\", \"pb-5\": \"5\"}}, {\"label\": \"Left\", \"data\": {\"\": \"none\", \"pl-0\": \"0\", \"pl-1\": \"1\", \"pl-2\": \"2\", \"pl-3\": \"3\", \"pl-4\": \"4\", \"pl-5\": \"5\"}}, {\"label\": \"Right\", \"data\": {\"\": \"none\", \"pr-0\": \"0\", \"pr-1\": \"1\", \"pr-2\": \"2\", \"pr-3\": \"3\", \"pr-4\": \"4\", \"pr-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\", \"label\": \"Mobile (Landscape) screens or wider\"}, \"label\": \"Top\", \"data\": {\"\": \"none\", \"pt-sm-0\": \"0\", \"pt-sm-1\": \"1\", \"pt-sm-2\": \"2\", \"pt-sm-3\": \"3\", \"pt-sm-4\": \"4\", \"pt-sm-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\"}, \"label\": \"Bottom\", \"data\": {\"\": \"none\", \"pb-sm-0\": \"0\", \"pb-sm-1\": \"1\", \"pb-sm-2\": \"2\", \"pb-sm-3\": \"3\", \"pb-sm-4\": \"4\", \"pb-sm-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\"}, \"label\": \"Left\", \"data\": {\"\": \"none\", \"pl-sm-0\": \"0\", \"pl-sm-1\": \"1\", \"pl-sm-2\": \"2\", \"pl-sm-3\": \"3\", \"pl-sm-4\": \"4\", \"pl-sm-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\"}, \"label\": \"Right\", \"data\": {\"\": \"none\", \"pr-sm-0\": \"0\", \"pr-sm-1\": \"1\", \"pr-sm-2\": \"2\", \"pr-sm-3\": \"3\", \"pr-sm-4\": \"4\", \"pr-sm-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"tablet\", \"label\": \"Tablet screens or wider\"}, \"label\": \"Top\", \"data\": {\"\": \"none\", \"pt-md-0\": \"0\", \"pt-md-1\": \"1\", \"pt-md-2\": \"2\", \"pt-md-3\": \"3\", \"pt-md-4\": \"4\", \"pt-md-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"tablet\"}, \"label\": \"Bottom\", \"data\": {\"\": \"none\", \"pb-md-0\": \"0\", \"pb-md-1\": \"1\", \"pb-md-2\": \"2\", \"pb-md-3\": \"3\", \"pb-md-4\": \"4\", \"pb-md-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"tablet\"}, \"label\": \"Left\", \"data\": {\"\": \"none\", \"pl-md-0\": \"0\", \"pl-md-1\": \"1\", \"pl-md-2\": \"2\", \"pl-md-3\": \"3\", \"pl-md-4\": \"4\", \"pl-md-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"tablet\"}, \"label\": \"Right\", \"data\": {\"\": \"none\", \"pr-md-0\": \"0\", \"pr-md-1\": \"1\", \"pr-md-2\": \"2\", \"pr-md-3\": \"3\", \"pr-md-4\": \"4\", \"pr-md-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"desktop\", \"label\": \"Desktop screens or wider\"}, \"label\": \"Top\", \"data\": {\"\": \"none\", \"pt-lg-0\": \"0\", \"pt-lg-1\": \"1\", \"pt-lg-2\": \"2\", \"pt-lg-3\": \"3\", \"pt-lg-4\": \"4\", \"pt-lg-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"desktop\"}, \"label\": \"Bottom\", \"data\": {\"\": \"none\", \"pb-lg-0\": \"0\", \"pb-lg-1\": \"1\", \"pb-lg-2\": \"2\", \"pb-lg-3\": \"3\", \"pb-lg-4\": \"4\", \"pb-lg-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"desktop\"}, \"label\": \"Left\", \"data\": {\"\": \"none\", \"pl-lg-0\": \"0\", \"pl-lg-1\": \"1\", \"pl-lg-2\": \"2\", \"pl-lg-3\": \"3\", \"pl-lg-4\": \"4\", \"pl-lg-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"desktop\"}, \"label\": \"Right\", \"data\": {\"\": \"none\", \"pr-lg-0\": \"0\", \"pr-lg-1\": \"1\", \"pr-lg-2\": \"2\", \"pr-lg-3\": \"3\", \"pr-lg-4\": \"4\", \"pr-lg-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"large_screen\", \"label\": \"Large Device screens or wider\"}, \"label\": \"Top\", \"data\": {\"\": \"none\", \"pt-xl-0\": \"0\", \"pt-xl-1\": \"1\", \"pt-xl-2\": \"2\", \"pt-xl-3\": \"3\", \"pt-xl-4\": \"4\", \"pt-xl-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"large_screen\"}, \"label\": \"Bottom\", \"data\": {\"\": \"none\", \"pb-xl-0\": \"0\", \"pb-xl-1\": \"1\", \"pb-xl-2\": \"2\", \"pb-xl-3\": \"3\", \"pb-xl-4\": \"4\", \"pb-xl-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"large_screen\"}, \"label\": \"Left\", \"data\": {\"\": \"none\", \"pl-xl-0\": \"0\", \"pl-xl-1\": \"1\", \"pl-xl-2\": \"2\", \"pl-xl-3\": \"3\", \"pl-xl-4\": \"4\", \"pl-xl-5\": \"5\"}}, {\"targetScreen\": {\"id\": \"large_screen\"}, \"label\": \"Right\", \"data\": {\"\": \"none\", \"pr-xl-0\": \"0\", \"pr-xl-1\": \"1\", \"pr-xl-2\": \"2\", \"pr-xl-3\": \"3\", \"pr-xl-4\": \"4\", \"pr-xl-5\": \"5\"}}], \"*\", \".ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Position\", \"edit\", [{\"label\": \"Position\", \"data\": {\"\": \"none\", \"position-static\": \"static\", \"position-relative\": \"relative\", \"position-absolute\": \"absolute\", \"position-fixed\": \"fixed\", \"fixed-top\": \"fixed-top\", \"fixed-bottom\": \"fixed-bottom\", \"position-sticky\": \"sticky\", \"sticky-top\": \"sticky-top\"}}], \"*\", \".ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Print\", \"edit\", [{\"label\": \"Print as\", \"data\": {\"\": \"none\", \"d-print-block\": \"block\", \"d-print-inline\": \"inline\", \"d-print-inline-block\": \"inline-block\", \"d-print-table\": \"table\", \"d-print-table-row\": \"table-row\", \"d-print-table-cell\": \"table-cell\", \"d-print-flex\": \"flex\", \"d-print-inline-flex\": \"inline-flex\", \"d-print-none\": \"none\"}}], \"*\", \".ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Screenreaders\", \"edit\", [{\"type\": \"checkbox\", \"label\": \"Screenreaders Only\", \"data\": {\"screenreader-only\": \"yes\"}}, {\"type\": \"checkbox\", \"label\": \"Focusable\", \"data\": {\"sr-only-focusable\": \"yes\"}}], \"*\", \".ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Shadows\", \"edit\", [{\"label\": \"Shadow Type\", \"data\": {\"\": \"none\", \"shadow-none\": \"remove\", \"shadow-sm\": \"small\", \"shadow\": \"regular\", \"shadow-lg\": \"large\"}}], \"*\", \".ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Text Alignment\", \"edit\", [{\"targetScreen\": {\"label\": \"All Screen Sizes\"}, \"data\": {\"\": \"none\", \"text-left\": \"left\", \"text-center\": \"center\", \"text-right\": \"right\", \"text-justify\": \"justify\", \"text-nowrap\": \"no wrap\"}}, {\"targetScreen\": {\"id\": \"mobile_landscape\", \"label\": \"Mobile (Landscape) screens or wider\"}, \"data\": {\"\": \"none\", \"text-sm-left\": \"left\", \"text-sm-right\": \"right\", \"text-sm-center\": \"center\"}}, {\"targetScreen\": {\"id\": \"tablet\", \"label\": \"Tablet screens or wider\"}, \"data\": {\"\": \"none\", \"text-md-left\": \"left\", \"text-md-right\": \"right\", \"text-md-center\": \"center\"}}, {\"targetScreen\": {\"id\": \"desktop\", \"label\": \"Desktop screens or wider\"}, \"data\": {\"\": \"none\", \"text-lg-left\": \"left\", \"text-lg-right\": \"right\", \"text-lg-center\": \"center\"}}, {\"targetScreen\": {\"id\": \"large_screen\", \"label\": \"Large Device screens or wider\"}, \"data\": {\"\": \"none\", \"text-xl-left\": \"left\", \"text-xl-right\": \"right\", \"text-xl-center\": \"center\"}}], \"*\", \".ag-text, .ag-text-edit, img\");\n\n        toggleClassAttribute(\"Text Break\", \"no\", [{\"data\": {\"text-break\": \"yes\", \"\": \"no\"}}], \"*\", \".ag-text, .ag-text-edit, img\");\n\n        toggleClassAttribute(\"Text Monospace\", \"no\", [{\"data\": {\"text-monospace\": \"yes\", \"\": \"no\"}}], \"*\", \".ag-text, .ag-text-edit, img\");\n\n        toggleClassAttribute(\"Text Size\", \"edit\", [{\"label\": \"Text Size\", \"data\": {\"\": \"none\", \"display-1\": \"display-1\", \"display-2\": \"display-2\", \"display-3\": \"display-3\", \"display-4\": \"display-4\", \"h1\": \"h1\", \"h2\": \"h2\", \"h3\": \"h3\", \"h4\": \"h4\", \"h5\": \"h5\", \"h6\": \"h6\"}}], \"*\", \".ag-text, .ag-text-edit, img, .ag-header\");\n\n        toggleClassAttribute(\"Text Remove Decoration\", \"no\", [{\"data\": {\"text-decoration-none\": \"yes\", \"\": \"no\"}}], \"*\", \".ag-text, .ag-text-edit, img\");\n\n        toggleClassAttribute(\"Text Size\", \"edit\", [{\"label\": \"Text Size\", \"data\": {\"\": \"none\", \"display-1\": \"display-1\", \"display-2\": \"display-2\", \"display-3\": \"display-3\", \"display-4\": \"display-4\"}}], \".ag-header\");\n\n        toggleClassAttribute(\"Text Transform\", \"edit\", [{\"label\": \"Text Transform\", \"data\": {\"\": \"none\", \"text-lowercase\": \"lowercase\", \"text-uppercase\": \"UPPERCASE\", \"text-capitalize\": \"Capitalized\"}}], \"*\", \".ag-text, .ag-text-edit, img\");\n\n        toggleClassAttribute(\"Text Truncated\", \"no\", [{\"data\": {\"text-truncate\": \"yes\", \"\": \"no\"}}], \"*\", \".ag-text, .ag-text-edit, img\");\n\n        toggleClassAttribute(\"Text Weight and Italics\", \"edit\", [{\"label\": \"Text Weight\", \"data\": {\"\": \"none\", \"font-weight-lighter\": \"lighter\", \"font-weight-light\": \"light\", \"font-weight-normal\": \"normal\", \"font-weight-bold\": \"bold\", \"font-weight-bolder\": \"bolder\"}}, {\"label\": \"Text Italics\", \"type\": \"checkbox\", \"data\": {\"font-italic\": \"yes\"}}], \"*\", \".ag-text, .ag-text-edit, img\");\n    </script>\n</div>\n<div class=\"cleanUpBeforePublish\">\n    <script>\n        pageClone.find(\".screenreader-only\").addClass(\"sr-only\").removeClass(\"screenreader-only\");\n\n        pageClone.find(\".ag-bold\").each(function () {\n            $(this).removeClass(\"ag-bold\").addClass(\"font-weight-bold\");\n        });\n    </script>\n</div>\n<div class=\"addAttributes\">\n    <script>\n        toggleClassAttribute(\"Vertical alignment\", \"edit\", [{\"label\": \"Vertical Alignment\", \"data\": {\"\": \"none\", \"align-baseline\": \"baseline\", \"align-top\": \"top\", \"align-middle\": \"middle\", \"align-bottom\": \"bottom\", \"align-text-top\": \"text-top\", \"align-text-bottom\": \"text-bottom\"}}], \"*\", \".ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Width\", \"edit\", [{\"label\": \"Width\", \"data\": {\"\": \"none\", \"w-25\": \"25%\", \"w-50\": \"50%\", \"w-75\": \"75%\", \"w-100\": \"100%\", \"w-auto\": \"auto\", \"mw-100\": \"Max 100%\"}}], \"*\", \".ag-text, .ag-text-edit\");\n    </script>\n</div>\n<div class=\"eventSnippet\">\n    <script>\n        eventSnippet['bootstrapPopover'] = '$(\"?????\").popover(\"dispose\").popover({\\n        // trigger: \"focus\"\\n    });';\n        eventSnippet['bootstrapPopoverCheck'] = '$(\"?????\").popover(\"dispose\").popover(';\n    </script>\n</div>\n<div class=\"onAttributeSelected\" title=\"popover\">\n    <div id=\"popoverBox\">\n        <form>\n            <div class=\"form-group\">\n                <div class=\"popover top\" id=\"popoverDemo\" style=\"position: relative; display: block; max-width: 100%; font-family: 'Open Sans', sans-serif !important;\">\n                    <div class=\"arrow\"></div>\n                    <div class=\"popover-title\" title=\"Title\" style=\"padding: 0px;\"><input type=\"text\" placeholder=\"title\" class=\"form-control\" id=\"popoverText\" value=\"\"></div>\n                    <div class=\"popover-content\">\n                        <textarea id=\"popoverContent\" placeholder=\"content\" title=\"Content\" style=\"resize: none; width:100%; height: 120px; border: 1px dotted #cecece; font-size: 13px;\"></textarea>\n                        <div style=\"width: 100%; height: 28px; padding: 5px;\">\n                            <div class=\"pull-right\">\n                                <select class=\"form-control input-sm\" id=\"contentAS\" style=\"padding: 0px; height: 25px;\">\n                                    <option value=\"false\">text</option>\n                                    <option value=\"true\">HTML</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"popoverPlacement\" class=\"control-label\">Placement:</label>\n                <select class=\"form-control\" id=\"popoverPlacement\">\n                    <option value=\"top\" selected=\"selected\">top</option>\n                    <option value=\"bottom\">bottom</option>\n                    <option value=\"left\">left</option>\n                    <option value=\"right\">right</option>\n                    <option value=\"auto\">auto</option>\n                </select>\n            </div>\n            <div class=\"form-group clearfix\">\n                <button class=\"btn btn-primary btn-block\" style=\"margin-top: 20px;\" id=\"updatePopover\" type=\"button\">Update</button>\n            </div>\n            <div class=\"form-group clearfix\" style=\"border-top: 1px solid #d0d0d0; padding-top: 12px; margin-top: 21px;\">\n                <div class=\"pull-right\"><button class=\"btn btn-link btn-xs\" id=\"popoverSetupCode\" type=\"button\">Popover Setup Code</button></div>\n            </div>\n        </form>\n        <style>\n        \t#popoverText{\n            \tbackground: transparent; \n                color: #000000; \n                border: 0px; \n                text-overflow: ellipsis;\n            }\n            #popoverSetupCode{\n            \tborder-bottom: 1px dotted #000000; \n                color: #000000; \n                background-color: #ffffff !important;\n            }\n            .ui-dark-theme #popover-option .popover, .ui-dark-theme #popover-option .popover-title, .ui-dark-theme #popoverText {\n              color: #cccccc;\n              background-color: #424242;\n            }\n            .ui-dark-theme .popover-title {\n              border-color: #252526;\n            }\n            .ui-dark-theme .popover.top > .arrow:after {\n              border-top-color: #424242;\n            }\n            .ui-dark-theme .popover.bottom > .arrow:after {\n              border-bottom-color: #424242;\n            }\n            .ui-dark-theme .popover.left > .arrow:after {\n              border-left-color: #424242;\n            }\n            .ui-dark-theme .popover.right > .arrow:after {\n              border-right-color: #424242;\n            }\n            .ui-dark-theme #popoverSetupCode {\n              border-bottom: 1px dotted #5c5c5f !important;\n              color: #cccccc !important;\n              background-color: #252526 !important;\n            }\n            .ui-dark-theme #popover-option .form-group.clearfix {\n              border-top-color: #1f1f1f !important;\n            }\n\n        </style>\n    </div>\n    <script>\n        // build \"popover-option\", if it's already made:\n        if ($(\"#popover-option\").length == 0) {\n            var propBody = controlLayout.find(\"#popoverBox\").html();\n            var popoverOption = buildCustomProp(\"#popover-option\", propBody);\n\n            popoverOption.find(\"#updatePopover\").click(function (event) {\n                var elm = selectedElement();\n                var popoverChange = false;\n\n                var oldAttributesExist = {\n                    \"title\": elm.is(\"[title]\"),\n                    \"data-content\": elm.is(\"[data-content]\"),\n                    \"data-html\": elm.is(\"[data-html]\"),\n                    \"data-placement\": elm.is(\"[data-placement]\"),\n                    \"data-toggle\": elm.is(\"[data-toggle]\")\n                }\n\n                var oldAttributesValue = {\n                    \"title\": elm.attr(\"title\"),\n                    \"data-content\": elm.attr(\"data-content\"),\n                    \"data-html\": elm.attr(\"data-html\"),\n                    \"data-placement\": elm.attr(\"data-placement\"),\n                    \"data-toggle\": elm.attr(\"data-toggle\")\n                }\n\n\n                var title = popoverOption.find(\"#popoverText\").val().replace(/[\"]+/g, \"'\");\n                if (attrExist(elm, \"title\") != title){\n                    popoverChange = true;\n                }\n                elm.attr(\"title\", title);\n\n\n                var popoverContent = popoverOption.find(\"#popoverContent\").val().replace(/[\"]+/g, \"'\");\n                if (attrExist(elm, \"data-content\") != popoverContent){\n                    popoverChange = true;\n                }\n                elm.attr(\"data-content\", popoverContent);\n\n                var contentAS = popoverOption.find(\"#contentAS\").val();\n                if (attrExist(elm, \"data-html\") != contentAS){\n                    popoverChange = true;\n                    elm.attr(\"data-html\", contentAS);\n                }\n\n\n                var popoverPlacement = \"\";\n                var setPopoverPlacement = false;\n                if (popoverOption.find(\"#popoverPlacement option:selected\").length == 1) {\n                    popoverPlacement = popoverOption.find(\"#popoverPlacement\").val();\n                    if (attrExist(elm, \"data-placement\") != popoverPlacement){\n                        popoverChange = true;\n                    }\n                    elm.attr(\"data-placement\", popoverPlacement);\n                    setPopoverPlacement = true;\n                }\n\n                var setDataToggle = false;\n                if (attrExist(elm, \"data-toggle\") != \"popover\"){\n                    popoverChange = true;\n                    elm.attr(\"data-toggle\", \"popover\");\n                    setDataToggle = true;\n                }\n\n                setTimeout(function(){ \n                    focusElement(elm);\n                }, 100);\n\n                if (popoverChange == true){\n                    undoManager.add({\n                        undo: function () {\n                            eastPanelShowContent(\"#popover-option\");\n\n                            if (oldAttributesExist[\"title\"] == true){\n                                elm.attr(\"title\", oldAttributesValue[\"title\"]);\n                                popoverOption.find(\"#popoverText\").val(oldAttributesValue[\"title\"]);\n                            }else{\n                                elm.removeAttr(\"title\");\n                                popoverOption.find(\"#popoverText\").val(\"\");\n                            }\n\n                            if (oldAttributesExist[\"data-content\"] == true){\n                                elm.attr(\"data-content\", oldAttributesValue[\"data-content\"]);\n                                popoverOption.find(\"#popoverContent\").val(oldAttributesValue[\"data-content\"]);\n                            }else{\n                                elm.removeAttr(\"data-content\");\n                                popoverOption.find(\"#popoverContent\").val(\"\");\n                            }\n\n                            if (oldAttributesExist[\"data-html\"] == true){\n                                elm.attr(\"data-html\", oldAttributesValue[\"data-html\"]);\n                                popoverOption.find(\"#contentAS\").val(oldAttributesValue[\"data-html\"]);\n                            }else{\n                                elm.removeAttr(\"data-html\");\n                                popoverOption.find(\"#contentAS\").val(\"false\");\n                            }\n\n                            if (oldAttributesExist[\"data-placement\"] == true){\n                                elm.attr(\"data-placement\", oldAttributesValue[\"data-placement\"]);\n                                popoverOption.find(\"#popoverPlacement\").val(oldAttributesValue[\"data-placement\"]);\n                            }else{\n                                elm.removeAttr(\"data-placement\");\n                                popoverOption.find(\"#popoverPlacement\").val(\"top\");\n                            }\n\n                            if (oldAttributesExist[\"data-toggle\"] == true){\n                                elm.attr(\"data-toggle\", oldAttributesValue[\"data-toggle\"]);\n                            }else{\n                                elm.removeAttr(\"data-toggle\");\n                            }\n\n                            showIfHidden(elm);\n                            resetBreadcrumbAndProps(elm, false, true);\n\n                        },\n                        redo: function () {\n                            eastPanelShowContent(\"#popover-option\");\n\n                            elm.attr(\"title\", title);\n                            popoverOption.find(\"#popoverText\").val(title);\n\n                            elm.attr(\"data-content\", popoverContent);\n                            popoverOption.find(\"#popoverContent\").val(popoverContent);\n\n                            elm.attr(\"data-html\", contentAS);\n                            popoverOption.find(\"#contentAS\").val(contentAS);\n\n                            if (setPopoverPlacement == true){\n                                elm.attr(\"data-placement\", popoverPlacement);\n                                popoverOption.find(\"#popoverPlacement\").val(popoverPlacement);\n                            }\n\n                            if (setDataToggle == true){\n                                elm.attr(\"data-toggle\", \"popover\");\n                            }\n\n                            showIfHidden(elm);\n                            resetBreadcrumbAndProps(elm, false, true);\n\n                        }\n                    });\n\n                    undoRedoStatus();\n                }\n\n                event.stopPropagation();\n            });\n\n            popoverOption.find('#popoverPlacement').on('change', function() {\n                popoverOption.find('#popoverDemo').removeClass(\"top bottom left right auto\").addClass($(this).val());\n            });\n\n            popoverOption.find(\"#popoverSetupCode\").click(function (event) {\n\n                popoverOption.find(\"#updatePopover\").click();\n\n                var elm = selectedElement();\n\n                goToSourceCode();\n                handleEvent({\n                    useSnippet:'bootstrapPopover',\n                    snippetParameters: [\"[data-toggle='popover']\"]\n                });\n                event.stopPropagation();\n            });\n\n        }\n\n        $(\"#popover\").click(function (event) {\n            var elm = selectedElement();\n            var popoverOption = $(\"#popover-option\");\n\n            var title = attrExist(elm, \"title\");\n            popoverOption.find(\"#popoverText\").val(title);\n\n            var popoverContent = attrExist(elm, \"data-content\");\n            popoverOption.find(\"#popoverContent\").val(popoverContent);\n\n            var contentAS = attrExist(elm, \"data-html\");\n            if (contentAS == \"true\") {\n                popoverOption.find(\"#contentAS\").val(\"true\");\n            }else{\n                popoverOption.find(\"#contentAS\").val(\"false\");\n            }\n\n            var popoverPlacement = attrExist(elm, \"data-placement\");\n            if (popoverPlacement == \"\") {\n                popoverPlacement = \"top\";\n            }\n            popoverOption.find(\"#popoverPlacement\").val(popoverPlacement);\n            popoverOption.find('#popoverDemo').removeClass(\"top bottom left right auto\").addClass(popoverPlacement);\n\n            eastPanelShowContent(\"#popover-option\");\n            $(\"#popover-option\").find(\"#popoverText\").focus();\n\n            event.stopPropagation();\n        });\n    </script>\n</div>\n<div class=\"addJStoFinal\" data-check=\"[data-toggle='popover']\">\n    <script>\n        $(function () {\n            $(\"[data-toggle='popover']\").popover();\n        });\n    </script>\n</div>\n<div class=\"addAttributes\">\n    <script>\n        addAttribute(\"popover\", \"Popover\", \"change\", true);\n    </script>\n</div>\n<div class=\"showAttributes\">\n    <script>\n        showAttribute(inEditor, \"#popover\", \"*\", \"body, .ag-text, .ag-text-edit, [data-toggle^='button'], [data-toggle='collapse'], [data-toggle='dropdown'], [data-toggle='modal'], [data-toggle='tab'], [data-toggle='pill'], [data-toggle='group']\");\n    </script>\n</div>\n<div class=\"eventSnippet\">\n    <script>\n        eventSnippet['bootstrapTooltip'] = '$(\"?????\").tooltip(\"dispose\").tooltip();';\n        eventSnippet['bootstrapTooltipCheck'] = '$(\"?????\").tooltip(\"dispose\").tooltip(';\n    </script>\n</div>\n<div class=\"onAttributeSelected\" title=\"tooltip\">\n    <div id=\"tooltipBox\">\n        <form>\n            <div class=\"form-group\">\n                <div class=\"tooltip top\" id=\"tooltipDemo\" role=\"tooltip\" style=\"position: relative !important; opacity: 1 !important;\">\n                    <div class=\"tooltip-arrow\"></div>\n                    <div class=\"tooltip-inner\" style=\"width: 100%; max-width: initial !important;\">\n                        <input type=\"text\" class=\"form-control\" id=\"tooltipText\" value=\"\" style=\"background-color: #4ba5ff; color: #ffffff; border: 1px dotted #0061c1; margin-top: 3px; text-overflow: ellipsis;\">\n                        <div style=\"width: 100%; height: 24px; padding: 0px; margin: 15px 0px 5px 0px;\">\n                            <div class=\"pull-right\">\n                                <select class=\"form-control input-sm\" id=\"tooltipAS\" style=\"padding: 0px; height: 25px;\">\n                                    <option value=\"false\">text</option>\n                                    <option value=\"true\">HTML</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"tooltipPlacement\" class=\"control-label\">Placement:</label>\n                <select class=\"form-control\" id=\"tooltipPlacement\">\n                    <option value=\"top\" selected=\"selected\">top</option>\n                    <option value=\"bottom\">bottom</option>\n                    <option value=\"left\">left</option>\n                    <option value=\"right\">right</option>\n                    <option value=\"auto\">auto</option>\n                </select>\n            </div>\n            <div class=\"form-group clearfix\">\n                <button class=\"btn btn-primary btn-block\" style=\"margin-top: 20px;\" id=\"updateTooltip\" type=\"button\">Update</button>\n            </div>\n            <div class=\"form-group clearfix\" style=\"border-top: 1px solid #d0d0d0; padding-top: 12px; margin-top: 21px;\">\n                <div class=\"pull-right\"><button class=\"btn btn-link btn-xs\" id=\"tooltipSetupCode\" type=\"button\">Tooltip Setup Code</button></div>\n            </div>\n        </form>\n        <style>\n            #tooltipSetupCode{\n            \tborder-bottom: 1px dotted #000000; \n                color: #000000; \n                background-color: #ffffff !important;\n            }\n            .ui-dark-theme #tooltipSetupCode {\n              border-bottom: 1px dotted #5c5c5f !important;\n              color: #cccccc !important;\n              background-color: #252526 !important;\n            }\n            .ui-dark-theme #tooltip-option .form-group.clearfix {\n              border-top-color: #1f1f1f !important;\n            }\n        </style>\n    </div>\n    <script>\n        // build \"tooltip-option\", if it's already made:\n        if ($(\"#tooltip-option\").length == 0) {\n            var propBody = controlLayout.find(\"#tooltipBox\").html();\n            var tooltipOption = buildCustomProp(\"#tooltip-option\", propBody);\n\n            tooltipOption.find(\"#updateTooltip\").click(function (event) {\n                var elm = selectedElement();\n                var tooltipChange = false;\n\n                var oldAttributesExist = {\n                    \"title\": elm.is(\"[title]\"),\n                    \"data-html\": elm.is(\"[data-html]\"),\n                    \"data-placement\": elm.is(\"[data-placement]\"),\n                    \"data-toggle\": elm.is(\"[data-toggle]\")\n                }\n\n                var oldAttributesValue = {\n                    \"title\": elm.attr(\"title\"),\n                    \"data-html\": elm.attr(\"data-html\"),\n                    \"data-placement\": elm.attr(\"data-placement\"),\n                    \"data-toggle\": elm.attr(\"data-toggle\")\n                }\n\n\n                var title = tooltipOption.find(\"#tooltipText\").val().replace(/[\"]+/g, \"'\");\n                if (attrExist(elm, \"title\") != title){\n                    tooltipChange = true;\n                }\n                elm.attr(\"title\", title);\n\n                var tooltipAS = tooltipOption.find(\"#tooltipAS\").val();\n                if (attrExist(elm, \"data-html\") != tooltipAS){\n                    tooltipChange = true;\n                    elm.attr(\"data-html\", tooltipAS);\n                }\n\n                var tooltipPlacement = \"\";\n                var setTooltipPlacement = false;\n                if (tooltipOption.find(\"#tooltipPlacement option:selected\").length == 1) {\n                    tooltipPlacement = tooltipOption.find(\"#tooltipPlacement\").val();\n                    if (attrExist(elm, \"data-placement\") != tooltipPlacement){\n                        tooltipChange = true;\n                    }\n                    elm.attr(\"data-placement\", tooltipPlacement);\n                    setTooltipPlacement = true;\n                }\n\n                var setDataToggle = false;\n                if (attrExist(elm, \"data-toggle\") != \"tooltip\"){\n                    tooltipChange = true;\n                    elm.attr(\"data-toggle\", \"tooltip\");\n                    setDataToggle = true;\n                }\n\n                setTimeout(function(){ \n                    focusElement(elm);\n                }, 100);\n\n                if (tooltipChange == true){\n                    undoManager.add({\n                        undo: function () {\n                            eastPanelShowContent(\"#tooltip-option\");\n\n                            if (oldAttributesExist[\"title\"] == true){\n                                elm.attr(\"title\", oldAttributesValue[\"title\"]);\n                                tooltipOption.find(\"#tooltipText\").val(oldAttributesValue[\"title\"]);\n                            }else{\n                                elm.removeAttr(\"title\");\n                                tooltipOption.find(\"#tooltipText\").val(\"\");\n                            }\n\n                            if (oldAttributesExist[\"data-html\"] == true){\n                                elm.attr(\"data-html\", oldAttributesValue[\"data-html\"]);\n                                tooltipOption.find(\"#tooltipAS\").val(oldAttributesValue[\"data-html\"]);\n                            }else{\n                                elm.removeAttr(\"data-html\");\n                                tooltipOption.find(\"#tooltipAS\").val(\"false\");\n                            }\n\n                            if (oldAttributesExist[\"data-placement\"] == true){\n                                elm.attr(\"data-placement\", oldAttributesValue[\"data-placement\"]);\n                                tooltipOption.find(\"#tooltipPlacement\").val(oldAttributesValue[\"data-placement\"]);\n                            }else{\n                                elm.removeAttr(\"data-placement\");\n                                tooltipOption.find(\"#tooltipPlacement\").val(\"top\");\n                            }\n\n                            if (oldAttributesExist[\"data-toggle\"] == true){\n                                elm.attr(\"data-toggle\", oldAttributesValue[\"data-toggle\"]);\n                            }else{\n                                elm.removeAttr(\"data-toggle\");\n                            }\n\n                            showIfHidden(elm);\n                            resetBreadcrumbAndProps(elm, false, true);\n\n                        },\n                        redo: function () {\n                            eastPanelShowContent(\"#tooltip-option\");\n\n                            elm.attr(\"title\", title);\n                            tooltipOption.find(\"#tooltipText\").val(title);\n\n                            elm.attr(\"data-html\", tooltipAS);\n                            tooltipOption.find(\"#tooltipAS\").val(tooltipAS);\n\n                            if (setTooltipPlacement == true){\n                                elm.attr(\"data-placement\", tooltipPlacement);\n                                tooltipOption.find(\"#tooltipPlacement\").val(tooltipPlacement);\n                            }\n\n                            if (setDataToggle == true){\n                                elm.attr(\"data-toggle\", \"tooltip\");\n                            }\n\n                            showIfHidden(elm);\n                            resetBreadcrumbAndProps(elm, false, true);\n\n                        }\n                    });\n\n                    undoRedoStatus();\n                }\n\n                event.stopPropagation();\n            });\n\n            tooltipOption.find('#tooltipPlacement').on('change', function() {\n                tooltipOption.find('#tooltipDemo').removeClass(\"top bottom left right auto\").addClass($(this).val());\n            });\n\n            tooltipOption.find(\"#tooltipSetupCode\").click(function (event) {\n\n                tooltipOption.find(\"#updateTooltip\").click();\n\n                var elm = selectedElement();\n\n                goToSourceCode();\n                handleEvent({\n                    useSnippet:'bootstrapTooltip',\n                    snippetParameters: [\"[data-toggle='tooltip']\"]\n                });\n                event.stopPropagation();\n            });\n\n        }\n\n        $(\"#tooltip\").click(function (event) {\n            var elm = selectedElement();\n            var tooltipOption = $(\"#tooltip-option\");\n\n            var title = attrExist(elm, \"title\");\n            tooltipOption.find(\"#tooltipText\").val(title);\n\n            var tooltipAS = attrExist(elm, \"data-html\");\n            if (tooltipAS == \"true\") {\n                tooltipOption.find(\"#tooltipAS\").val(\"true\");\n            }else{\n                tooltipOption.find(\"#tooltipAS\").val(\"false\");\n            }\n\n            var tooltipPlacement = attrExist(elm, \"data-placement\");\n            if (tooltipPlacement == \"\") {\n                tooltipPlacement = \"top\";\n            }\n            tooltipOption.find(\"#tooltipPlacement\").val(tooltipPlacement);\n            tooltipOption.find('#tooltipDemo').removeClass(\"top bottom left right auto\").addClass(tooltipPlacement);\n\n            eastPanelShowContent(\"#tooltip-option\");\n            $(\"#tooltip-option\").find(\"#tooltipText\").focus();\n\n            event.stopPropagation();\n        });\n    </script>\n</div>\n<div class=\"addJStoFinal\" data-check=\"[data-toggle='tooltip']\">\n    <script>\n        $(function () {\n            $(\"[data-toggle='tooltip']\").tooltip();\n        });\n    </script>\n</div>\n<div class=\"addAttributes\">\n    <script>\n        addAttribute(\"tooltip\", \"Tooltip\", \"change\", true);\n    </script>\n</div>\n<div class=\"showAttributes\">\n    <script>\n        showAttribute(inEditor, \"#tooltip\", \"*\", \"body, .ag-text, .ag-text-edit, [data-toggle^='button'], [data-toggle='collapse'], [data-toggle='dropdown'], [data-toggle='modal'], [data-toggle='tab'], [data-toggle='pill'], [data-toggle='group']\");\n    </script>\n</div>\n<div class=\"globalOptions\">\n    <div class=\"runOnLoad\">\n        <style>\n            .float-left, .float-right, .float-none, .float-sm-left, .float-sm-right, .float-sm-none, .float-md-left, .float-md-right, .float-md-none, .float-lg-left, .float-lg-right, .float-lg-none, .float-xl-left, .float-xl-right, .float-xl-none{\n                \tz-index: 2000;\n            }\n\n            .position-static, .position-absolute, .position-fixed, .position-sticky {\n                position: relative !important;\n            }\n\n            .border, .border-top, .border-right, .border-bottom, .border-left, .rounded, .rounded-top, .rounded-right, .rounded-bottom, .rounded-left, .rounded-circle{\n                outline-offset: 1px !important;\n            }\n\n            .d-print-block, .d-print-inline, .d-print-inline-block{\n                opacity: 0.5;\n            }\n\n            .d-print-block{\n                display: block !important;\n            }\n\n            .d-print-inline{\n                display: inline !important;\n            }\n\n            .d-print-inline-block{\n                display: inline-block !important;\n            }\n\n\t            .d-inline:empty, .d-inline-block:empty, .d-table-cell:empty, .d-inline-flex:empty{\n                width: 100px;\n                display: inline-block !important;\n            }\n\n            .d-table:empty{\n                width: 100px;\n                display: block !important;\n            }\n\n            .hidden-content.d-inline:not(.ag-show-all), .hidden-content.d-inline-block:not(.ag-show-all), .hidden-content.d-block:not(.ag-show-all), .hidden-content.d-table:not(.ag-show-all), .hidden-content.d-table-cell:not(.ag-show-all), .hidden-content.d-flex:not(.ag-show-all), .hidden-content.d-inline-flex:not(.ag-show-all), .hidden-content.d-sm-inline:not(.ag-show-all), .hidden-content.d-sm-inline-block:not(.ag-show-all), .hidden-content.d-sm-block:not(.ag-show-all), .hidden-content.d-sm-table:not(.ag-show-all), .hidden-content.d-sm-table-cell:not(.ag-show-all), .hidden-content.d-sm-flex:not(.ag-show-all), .hidden-content.d-sm-inline-flex:not(.ag-show-all), .hidden-content.d-md-inline:not(.ag-show-all), .hidden-content.d-md-inline-block:not(.ag-show-all), .hidden-content.d-md-block:not(.ag-show-all), .hidden-content.d-md-table:not(.ag-show-all), .hidden-content.d-md-table-cell:not(.ag-show-all), .hidden-content.d-md-flex:not(.ag-show-all), .hidden-content.d-md-inline-flex:not(.ag-show-all), .hidden-content.d-lg-inline:not(.ag-show-all), .hidden-content.d-lg-inline-block:not(.ag-show-all), .hidden-content.d-lg-block:not(.ag-show-all), .hidden-content.d-lg-table:not(.ag-show-all), .hidden-content.d-lg-table-cell:not(.ag-show-all), .hidden-content.d-lg-flex:not(.ag-show-all), .hidden-content.d-lg-inline-flex:not(.ag-show-all), .hidden-content.d-xl-inline:not(.ag-show-all), .hidden-content.d-xl-inline-block:not(.ag-show-all), .hidden-content.d-xl-block:not(.ag-show-all), .hidden-content.d-xl-table:not(.ag-show-all), .hidden-content.d-xl-table-cell:not(.ag-show-all), .hidden-content.d-xl-flex:not(.ag-show-all), .hidden-content.d-xl-inline-flex:not(.ag-show-all), .hidden-content.d-block:not(.ag-show-all){\n                display: none !important;\n            }\n\n            @media (max-width: 575px) {\n                \t.d-none:not(.d-sm-none):not(.d-sm-inline):not(.d-sm-inline-block):not(.d-sm-block):not(.d-sm-table):not(.d-sm-table-cell):not(.d-sm-flex):not(.d-sm-inline-flex):not(.d-md-none):not(.d-md-inline):not(.d-md-inline-block):not(.d-md-block):not(.d-md-table):not(.d-md-table-cell):not(.d-md-flex):not(.d-md-inline-flex):not(.d-lg-none):not(.d-lg-inline):not(.d-lg-inline-block):not(.d-lg-block):not(.d-lg-table):not(.d-lg-table-cell):not(.d-lg-flex):not(.d-lg-inline-flex):not(.d-xl-none):not(.d-xl-inline):not(.d-xl-inline-block):not(.d-xl-block):not(.d-xl-table):not(.d-xl-table-cell):not(.d-xl-flex):not(.d-xl-inline-flex),\n                    .d-none.d-sm-none:not(.d-md-none):not(.d-md-inline):not(.d-md-inline-block):not(.d-md-block):not(.d-md-table):not(.d-md-table-cell):not(.d-md-flex):not(.d-md-inline-flex):not(.d-lg-none):not(.d-lg-inline):not(.d-lg-inline-block):not(.d-lg-block):not(.d-lg-table):not(.d-lg-table-cell):not(.d-lg-flex):not(.d-lg-inline-flex):not(.d-xl-none):not(.d-xl-inline):not(.d-xl-inline-block):not(.d-xl-block):not(.d-xl-table):not(.d-xl-table-cell):not(.d-xl-flex):not(.d-xl-inline-flex),\n                    .d-none.d-sm-none.d-md-none:not(.d-lg-none):not(.d-lg-inline):not(.d-lg-inline-block):not(.d-lg-block):not(.d-lg-table):not(.d-lg-table-cell):not(.d-lg-flex):not(.d-lg-inline-flex):not(.d-xl-none):not(.d-xl-inline):not(.d-xl-inline-block):not(.d-xl-block):not(.d-xl-table):not(.d-xl-table-cell):not(.d-xl-flex):not(.d-xl-inline-flex),\n                    .d-none.d-sm-none.d-md-none.d-lg-none:not(.d-xl-none):not(.d-xl-inline):not(.d-xl-inline-block):not(.d-xl-block):not(.d-xl-table):not(.d-xl-table-cell):not(.d-xl-flex):not(.d-xl-inline-flex),\n                    .d-none.d-sm-none.d-md-none.d-lg-none.d-xl-none{\n                    display: block !important;\n                    opacity: 0.5;\n                }\n            }\n        </style>\n    </div>\n</div>","blank_page":"<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta-temp charset=\"utf-8\"/>\n        <meta-temp name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"/>\n        <meta-temp http-equiv=\"x-ua-compatible\" content=\"ie=edge\"/>\n        <title></title>\n        <meta-temp name=\"description\" content=\"\"/>\n        <meta-temp name=\"keywords\" content=\"\"/>\n        <!--CSS BEFORE FRAMEWORK GOES HERE-->\n        <link id=\"mainFrameworkCSS\" href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css\" rel=\"stylesheet\">\n        <!--CSS AFTER FRAMEWORK GOES HERE-->\n        <!--THEME GOES HERE-->\n    </head>\n    <body>\n        <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n        <script src=\"//cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\"></script>\n        <script src=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js\"></script>\n    </body>\n</html>","blank_page_no_framework":"<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta-temp charset=\"utf-8\"/>\n        <title></title>\n        <meta-temp name=\"description\" content=\"\"/>\n        <meta-temp name=\"keywords\" content=\"\"/>\n    </head>\n    <body>\n    </body>\n</html>","adding_new_files":"<div>\n    <div class=\"addFile\" data-type=\"Bootstrap4\" data-ext=\"html\" data-folder=\"site\"></div>\n    <div class=\"addFile\" data-type=\"JavaScript\" data-ext=\"js\" data-folder=\"site/JavaScript\" data-selected=\"selected\"></div>\n    <div class=\"addFile\" data-type=\"Style Sheet\" data-ext=\"css\" data-folder=\"site/CSS\"></div>\n</div>","frame_work_config":"<div>\n   <div id=\"device_types\">\n      <script>var viewportSizes = {\"devices\":[\n    {\"name\":\"Browser Width\", \"id\":\"browser_width\", \"selected\":\"yes\"},\n    {\"name\":\"Large Devices\", \"id\":\"large_screen\", \"width\":\"1220px\"},\n    {\"name\":\"Desktop\", \"id\":\"desktop\", \"width\":\"1050px\"},\n    {\"name\":\"Tablet\", \"id\":\"tablet\", \"width\":\"771px\"},\n    {\"name\":\"Mobile Landscape\", \"id\":\"mobile_landscape\", \"width\":\"577px\"},\n    {\"name\":\"Mobile Portrait\", \"id\":\"mobile_portrait\", \"width\":\"400px\"}\n]};</script>\n   </div>\n   \n   <div id=\"onShowPreview\">\n      <script>// Get all required argument from the Design View:\ngetArgument['selectedTheme'] = selectedTheme;\ngetArgument['styles'] = myPage[\"styles\"];\ngetArgument['body'] = myPage[\"body\"];\ngetArgument['cssAfterFramework'] = myPage[\"cssAfterFramework\"];\ngetArgument['cssBeforeFramework'] = myPage[\"cssBeforeFramework\"];\ngetArgument['scripts'] = myPage[\"scripts\"];\n\n\nrunInPreview['createPreviewPage'] = function createPreviewPage() {\n\n    // Set all Design arguments in the Preview IFrame\n    if (getArgument['selectedTheme'] != \"\"){\n        $(\"head\").append('<link href=\"' + getArgument['selectedTheme'] + '\" rel=\"stylesheet\">');\n    }\n\n    $(\"head\").append(getArgument['styles']);\n    $(\"body\").prop('outerHTML', getArgument['body']);\n\n    if (getArgument['cssAfterFramework'] != \"\"){\n        $(\"#mainFrameworkCSS\").after(getArgument['cssAfterFramework']);\n    }\n    if (getArgument['cssBeforeFramework'] != \"\"){\n        $(\"#mainFrameworkCSS\").before(getArgument['cssBeforeFramework']);\n    }\n\n    var s = getArgument['scripts'];\n    var jsHack = \"script\";\n\n    if (s != \"\") {\n        var script = '<' + jsHack + ' type=\"text/javascript\">' + s + '</' + jsHack + '>';\n        $(\"body\").append(script);\n    }\n\n};</script>\n   </div>\n   <div id=\"requiredFiles\">//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.js\n//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.css</div>\n   <div id=\"onShowSourceCode\">\n      <script>// This will replace the outerHTML of <body></body> with myPage[\"body\"]:\ncode = code.replace(/\\<body[\\s\\S]*?\\>/i,function(a, m) { \n    var pos = myPage['body'].lastIndexOf('</body>');\n    return myPage['body'].substring(0, pos); \n});\n\n\n// This will convert all local image paths to relative\n// code = code.replace(/\\<img[\\s\\S]*?\\>/ig,function(a, m) { \n//     return a = a.replace(/src\\s*=\\s*\"(.+?)\"/ig,function(b, n) { \n//         // Use 'sitePath' to get the full path of the current Project\n//         if (b.indexOf(sitePath()) != -1){\n//             var relativePath = b.replace(sitePath() + \"/\", \"\"); \n//             return relativePath;\n//         }else{\n//             return b;\n//         }\n//     });\n// });\n\n// If a CSS Theme is used, then select it:\nif (selectedTheme != \"\"){\n    var themeTag = '<link href=\"'+selectedTheme+'\" rel=\"stylesheet\">';\n    code = code.replace(/<!--THEME GOES HERE-->/i, themeTag);\n}else{\n    code = code.replace(/<!--THEME GOES HERE-->/i, \"\");\n}\n\n// Remove the ID marker from the main Framework CSS <link>:\ncode = code.replace(/<link id=\"mainFrameworkCSS\" /i, \"<link \");\n\n// Add all CSS Links that need to go before the main Framework CSS Link:\ncode = code.replace(/<!--CSS BEFORE FRAMEWORK GOES HERE-->/i, myPage['cssBeforeFramework']);\n\n// Add all CSS Links that need to go after the main Framework CSS Link:\ncode = code.replace(/<!--CSS AFTER FRAMEWORK GOES HERE-->/i, myPage['cssAfterFramework']);\n\n\n// If the Design page contains any CSS or JavaScript code required for the \"Source Code\" or \"Preview\" page, then add it:\nif (myPage['styles'] != \"\"){\n    code = code.replace(/<\\/head>/i, \"\\n\" + myPage['styles'] + \"\\n</head>\");\n}\n\nif (myPage['scriptURL'] != \"\"){\n    code = code.replace(/<\\/body>/i,\"\\n\" + myPage['scriptURL'] + \"\\n</body>\"); \n}\n\nvar jsHack = \"script\";\nif (myPage['scripts'] != \"\"){\n    code = code.replace(/<\\/body>/i,\"\\n<\" + jsHack + \">\" + myPage['scripts'] + \"</\" + jsHack + \">\\n</body>\"); \n}</script>\n   </div>\n      \n\n   <div id=\"codeUsedForPublishing\">\n      <script>var body = pageClone.find(\"body\").prop('outerHTML');\nmyPage[\"body\"] = body;\n\n\n// Find all components that require additional CSS styles\nvar reqCSS = \"\";\ncontrolLayout.find(\".requireCSS\").each(function () {\n    if (attrExist($(this), \"data-check\") == \"\") {\n        reqCSS = reqCSS + $(this).find(\"style\").text();\n    } else {\n        var checkCondition = $(this).attr(\"data-check\");\n        if (pageClone.find(checkCondition).length > 0) {\n            reqCSS = reqCSS + $(this).find(\"style\").text();\n        }\n    }\n});\nif (reqCSS != \"\") {\n    styles = styles + '<style type=\"text/css\">' + reqCSS + '</style>';\n}\n\nmyPage[\"styles\"] = styles;\n\n\n\n// Find all components that require CSS Links\nvar cssBeforeFramework = \"\";\nvar cssAfterFramework = \"\";\n\ncontrolLayout.find(\".requireCSSLink\").each(function () {\n    var cssLink = \"\";\n    // Check if the required CSS File is actually used\n    if (attrExist($(this), \"data-check\") == \"\") {\n        cssLink = $(this).html();\n    } else {\n        var checkCondition = $(this).attr(\"data-check\");\n        if (pageClone.find(checkCondition).length > 0) {\n            cssLink = $(this).html();\n        }\n    }\n    // You can prioritize the style settings by placing it before or after the Framework CSS file respectively\n    if (attrExist($(this), \"data-placeBeforeFramework\") == \"yes\") {\n        cssBeforeFramework = cssBeforeFramework + cssLink;\n    }else{\n        cssAfterFramework = cssAfterFramework + cssLink;\n    }\n});\n\nmyPage[\"cssBeforeFramework\"] = cssBeforeFramework;\nmyPage[\"cssAfterFramework\"] = cssAfterFramework;\n\n\n// Find all components that require additional JavaScript code\nvar scripts = \"\";\ncontrolLayout.find(\".addJStoFinal\").each(function () {\n    if (attrExist($(this), \"data-check\") == \"\") {\n        scripts = scripts + $(this).find(\"script\").text();\n    } else {\n        var checkCondition = $(this).attr(\"data-check\");\n        if (pageClone.find(checkCondition).length > 0) {\n            scripts = scripts + $(this).find(\"script\").text();\n        }\n    }\n});\n\nmyPage[\"scripts\"] = scripts;\n\n\n// Find all components that require JavaScript Links\nvar scriptURL = \"\";\nmyPage[\"scriptURL\"] = scriptURL;</script>\n   </div>\n   <div id=\"saveToDatabase\">\n      <script>if (pageClone.find(\"#ag-themeToggle\").length > 0){\n    sendData['theme'] = pageClone.find(\"#ag-themeToggle\").attr(\"href\");\n}else{\n    sendData['theme'] = \"\";\n}\n\npageClone.find('*[style=\"position:relative;\"]').removeAttr(\"style\");\n\nvar body = pageClone.find(\"body\");\n\nif (body.attr(\"class\") == \"\") {\n    body.removeAttr(\"class\");\n}\n\nbody.find(\"*[class='']\").each(function () {\n    $(this).removeAttr(\"class\");\n});\n\nsendData['body'] = body.prop('outerHTML');\n\nsendData['used_addons'] = used_addons;</script>\n   </div>\n   <div id=\"getFromDatabase\">\n      <script>if (typeof getData['theme'] !== \"undefined\"){\n    var cleanTheme = DOMPurify.sanitize(getData['theme'].toString());\n    if (cleanTheme != \"\") {\n        addSelectedTheme(cleanTheme);\n    }\n}\n\nif (typeof getData['body'] !== \"undefined\"){\n    var cleanBody = DOMPurify.sanitize(getData['body'].toString(), {SAFE_FOR_JQUERY: true, WHOLE_DOCUMENT: true, ADD_ATTR: allowed_attributes, ADD_TAGS: allowed_tags});\n    cleanBody = cleanBody.substring(19,cleanBody.length-7);\n    editFrameContent().find(\"body\").prop('outerHTML', cleanBody);\n}\n\nif (typeof getData['used_ScriptFiles'] !== \"undefined\"){\n    var cleanScriptFiles = DOMPurify.sanitize(getData['used_ScriptFiles'].toString(), {SAFE_FOR_JQUERY: true, ADD_ATTR: allowed_attributes, ADD_TAGS: allowed_tags});\n    used_ScriptFiles = cleanScriptFiles;\n}\n\nif (typeof getData['used_addons'] !== \"undefined\"){\n    var clean_used_addons = DOMPurify.sanitize(getData['used_addons'].toString());\n    used_addons = clean_used_addons;\n}\n\ndesignWindow().runAllFunctions();</script>\n   </div>\n<div id=\"languageDefinitions\"><code data-url=\"https://editor.bragndrop.com/assets/js/definitions/v1/jquery/index.d.ts\" data-environment=\"javascript\" data-conditional=\"\"></code>\n<code data-url=\"https://editor.bragndrop.com/assets/js/definitions/v1/bootstrap/bootstrap.d.ts\" data-environment=\"javascript\" data-conditional=\"\"></code></div></div>","folder_layout":"<li>site\n    <ul>\n        <li id=\"1DK\">index.html</li>\n        <li>JavaScript\n            <ul>\n                <li id=\"1KE\">index_events.js</li>\n            </ul>\n        </li>\n    </ul>\n</li>","design_area":"<section id=\"designHead\">\n    <link id=\"frameworkCSSinDesign\" href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css\" rel=\"stylesheet\">\n</section>\n\n<section id=\"designBody\">\n    <script>\n        $LAB\n            .script(\"//cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\").wait()\n            .script(\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js\").wait(function () {\n\n            $(document).off('.modal.data-api');\n\n            stopCarousel = function() {\n                $('.carousel').each(function () {\n                    if (typeof this.isStopInterval === 'undefined') {\n                        this.isStopInterval = true;\n                        $(this).carousel({\n                            interval: false,\n                            keyboard: false\n                        });\n                    }\n                });\n            };\n\n            alertNoClose = function() {\n                $('.alert').each(function () {\n                    if (typeof this.isCloseSet === 'undefined') {\n                        this.isCloseSet = true;\n                        $(this).on('close.bs.alert', function () {\n                            return false;\n                        });\n                    }\n                });\n            };\n\n            stopDropdown = function() {\n\n\n                $('.dropdown-menu').each(function () {\n                    if (typeof this.isOff === 'undefined') {\n                        this.isOff = true;\n\n                        if ($(this).parent().is(\".btn-group, .input-group-btn, .nav-item\")) {\n                            $(this).parent().find(\".dropdown-toggle, .btn\").find(\"span\").on(\"click\", function (event) {\n                                if ($(this).parent().hasClass(\"ag-focus\")){\n                                    $(this).parent().dropdown('dispose');\n                                }\n                            });\n\n                        }\n\n                        $(this).parent().on({\n                            'hide.bs.dropdown': function () {\n                                var cls = this.closable;\n                                if (typeof cls !== 'undefined') {\n                                    if (cls == false) {\n                                        this.closable = true;\n                                    }\n                                    return cls;\n                                }\n                            }\n                        });\n\n                        $(this).on({\n                            'click': function () {\n                                this.parentNode.closable = false;\n                            }\n                        });\n\n                    }\n                });\n            };\n\n            runAllFunctions = function() {\n                stopCarousel();\n                stopDropdown();\n                alertNoClose();\n                designAreaReady = function () {\n                    return false;\n                };\n            };\n\n            $(function () {\n\n                $.fn.button.Constructor.prototype.toggle = function () {\n                    var changed = true\n                    var $parent = $(this._element).closest('[data-toggle=\"buttons\"]')\n                    if ($parent.length == 0) {\n                        $(this._element).attr('aria-pressed', !$(this._element).hasClass('active'))\n\n                        if (changed)\n                            $(this._element).toggleClass('active')\n                    }\n                }\n\n                runAllFunctions();\n\n                //<ADD-ON SCRIPTS FOR 'DESIGN VIEW' WILL GO HERE>\n            });\n\n        });\n    </script>\n</section>","preview_area":"<section id=\"previewHead\">\n    <link id=\"mainFrameworkCSS\" href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css\" rel=\"stylesheet\">\n</section>\n\n<section id=\"previewBody\">\n    <script>\n        $LAB\n            .script(\"//cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\").wait()\n            .script(\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js\").wait(function () {\n            mainScriptsLoaded = true;\n        });\n\n        var overridePreviewScript = false;\n        //<ADD-ON SCRIPTS FOR 'PREVIEW MODE' WILL GO HERE>\n        runPreviewScripts(overridePreviewScript);\n    </script>\n</section>"};