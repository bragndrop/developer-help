frame_data["bootstrap3"] = {"xml":"<div title=\"bootstrap 3.4.1\">\n    <div class=\"components\">\n        <div class=\"allowed-XSS-code\" title=\"Allow these attributes when filtering for XSS\">\n            <script>\n                allowedXSS[\"attributes\"].push(\"aria-hidden\", \"data-toggle\", \"data-target\", \"role\", \"aria-expanded\", \"data-ride\", \"data-interval\", \"data-slide-to\", \"data-slide\", \"aria-controls\", \"aria-labelledby\", \"aria-label\", \"data-dismiss\", \"aria-multiselectable\", \"data-parent\", \"aria-valuenow\", \"aria-valuemin\", \"aria-valuemax\", \"data-placement\", \"data-html\");\n            </script>\n        </div>\n        <div class=\"category\" title=\"Text, Icons, Images, Lists, Paragraphs\">\n            <div class=\"component divider\" title=\"Text, Paragraphs, Links\"></div>\n            <div class=\"component\" title=\"Text\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Text.png\">\n                <div class=\"html-content\"><span class=\"ag-text-edit\"></span></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Text\", \".ag-text-edit\");\n                        designSetting(\"disablePropInspector\", \".ag-text-edit\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n\n                        addCustomButton(inEditor, \"addNewText\", \"Add New Text\", \"\", \"\", \".ag-text-edit\");\n\n                        inEditor.find(\"#addNewText\").click(function (event) {\n                            var elm = selectedElement();\n\n                            var newCol = elm.after('<div class=\"newStuff\"><span class=\"ag-text-edit\"></span></div>');\n                            runUndoAddNew(false);\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, false, true);\n\n                            setTimeout(function () {\n                                selectedElement().click();\n                            }, 200);\n\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n                <div class=\"beforeDrop\">\n                    <script>\n                        // if a link contains only a single text element, then drop it outside the link\n                        if (elmDrag.is(\".ag-text-edit\")) {\n                            if (injectPoint.element.parent().is(\"a\")) {\n                                if (injectPoint.element.parent().children().length == 1) {\n                                    if (injectPoint.element) {\n                                        useCustomDrop = true;\n\n                                        if (injectPoint.position == \"before\") {\n                                            injectPoint.element.closest(\"a\").before(elmDragCode);\n                                        } else if (injectPoint.position == \"after\") {\n                                            injectPoint.element.closest(\"a\").after(elmDragCode);\n                                        } else if (injectPoint.position == \"prepend\") {\n                                            injectPoint.element.closest(\"a\").before(elmDragCode);\n                                        } else if (injectPoint.position == \"append\") {\n                                            injectPoint.element.closest(\"a\").after(elmDragCode);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"cleanUpBeforePublish\">\n                    <script>\n                        pageClone.find(\".ag-text-edit\").each(function () {\n                            $(this).replaceWith($(this).text());\n                        });\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Text Element\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Text_Element.png\">\n                <div class=\"html-content\"><span class=\"ag-text-span\"></span></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        hideClassFromPropInspector(\"ag-text-span\", true);\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n\n                        addCustomButton(inEditor, \"addNewSpan\", \"Add New Text\", \"\", \"\", \".ag-text-span\");\n\n                        inEditor.find(\"#addNewSpan\").click(function (event) {\n                            var elm = selectedElement();\n\n                            var newCol = elm.after('<div class=\"newStuff\"><span class=\"ag-text-span\"></span></div>');\n                            runUndoAddNew(false);\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, false, true);\n\n                            setTimeout(function () {\n                                selectedElement().click();\n                            }, 200);\n\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Heading\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Heading_3.png\">\n                <div class=\"html-content\"><div class=\"ag-header h3\">Heading<small> Subtext</small></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Heading\", \".ag-header\");\n                        hideClassFromPropInspector(\"ag-header\", true);\n                        designSetting(\"addTextTo\", \".ag-header\");\n\n                    </script>\n                </div>\n                <div class=\"cleanUpBeforePublish\">\n                    <script>\n                        pageClone.find(\".ag-header\").each(function () {\n                            var hTag = \"<h5></h5>\";\n                            if ($(this).hasClass(\"h1\")) {\n                                hTag = \"<h1></h1>\";\n                            } else if ($(this).hasClass(\"h2\")) {\n                                hTag = \"<h2></h2>\";\n                            } else if ($(this).hasClass(\"h3\")) {\n                                hTag = \"<h3></h3>\";\n                            } else if ($(this).hasClass(\"h4\")) {\n                                hTag = \"<h4></h4>\";\n                            } else if ($(this).hasClass(\"h5\")) {\n                                hTag = \"<h5></h5>\";\n                            } else if ($(this).hasClass(\"h6\")) {\n                                hTag = \"<h6></h6>\";\n                            }\n                            var newElem = $(hTag, {html: $(this).html()});\n                            $.each(this.attributes, function() {\n                                newElem.attr(this.name, this.value);\n                            });\n                            newElem.removeClass(\"h1 h2 h3 h4 h5 h6\");\n                            $(this).replaceWith(newElem);\n\n                        });\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"h1,h2,h3,h4,h5,h6\");\n                        list.altCaption = {\"h1\": \"Heading 1\", \"h2\": \"Heading 2\", \"h3\": \"Heading 3\", \"h4\": \"Heading 4\", \"h5\": \"Heading 5\", \"h6\": \"Heading 6\", };\n                        list.hasNone = false;\n                        addListButton(inEditor, \"Size\", list, \".h1,.h2,.h3,.h4,.h5,.h6\");\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrop.closest(\".ag-header\").length > 0) {\n                            if ((dragTag == \"span\") || (dragTag == \"small\")) {\n                            }else{\n                                if (elmDrop.hasClass(\"ag-header\")) {\n                                    isOut = true;\n                                }else{\n                                    finalShow = false;\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Paragraph\" id=\"paragraph\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Paragraph.png\">\n                <div class=\"html-content\"><p>Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nullam id dolor id nibh ultricies vehicula.</p></div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Lead\", \"lead\", \"p\");\n                        addClassButton(inEditor, \"Form Control Static\", \"form-control-static\", \"form p\");\n                    </script>\n                </div>\n            </div>\n\n            <div class=\"component\" title=\"Link\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Link.png\">\n                <div class=\"html-content\"><a href=\"\"><span class=\"ag-text-edit\">Links</span></a></div>\n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"scrolToLink\", \"Scroll To\", \"\", \"\", \"a\", \".dropdown-toggle, [data-toggle='tab']\");\n                        showIDlist(inEditor, \"scrolToLink\", \"Scrollable points\", \"*[id]\", \"href\", \"#\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component divider\" title=\"Images, Icons\"></div>\n            <div class=\"component\" title=\"Image\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Image-v2.png\">\n                <div class=\"html-content\"><img class=\"img-rounded img-responsive\" alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/140x140.png\" ></div>\n                <div class=\"requireCSS\" data-check=\"img.img-responsive.text-center\">\n                    <style>\n                        img.img-responsive.text-center{\n                            display: block;\n                            margin-left: auto;\n                            margin-right: auto;\n                        } \n                    </style>\n                </div> \n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"imgSrc\", \"Change Image\", \"\", \"\", \"img\", \"\", \"#15CD72\");\n\n                        function undoRedoImageURLChanges(elem, oldImage, newImage) {\n                            // update the \"src\" value in the \"Property Inspector\" box\n                            var srcAttribute = $('.attrName[value=\"src\"]').closest(\"tr\").find(\".attrVal\");\n                            srcAttribute.attr(\"value\", newImage);\n                            srcAttribute.val(newImage);\n                            srcAttribute.attr(\"title\", newImage);\n\n                            elem.attr(\"src\", newImage);\n\n                            undoManager.add({\n                                undo: function () {\n                                    showIfHidden(elem);\n                                    elem.attr(\"src\", oldImage);\n                                    resetBreadcrumbAndProps(elem, false);\n                                },\n                                redo: function () {\n                                    showIfHidden(elem);\n                                    elem.attr(\"src\", newImage);\n                                    resetBreadcrumbAndProps(elem, false);\n\n                                }\n                            });\n\n                            undoRedoStatus();\n                        }\n\n                        inEditor.find(\"#imgSrc\").click(function (event) {\n\n                            var elem = selectedElement();\n\n                            // \"openImageGallery\" is a function used to open the image gallery\n                            // you must pass an array of affected elements (with a target attribute) for the image url\n                            openImageGallery([\n                                {\n                                    \"element\": elem,\n                                    \"attribute\": \"src\"\n                                }\n                            ]);\n\n\n                            $('#ImageGallery').off('click', '.thumbnail');\n\n                            $('#ImageGallery').on('click', '.thumbnail', function (event) {\n\n                                if ($(this).hasClass(\"imageActive\") == false) {\n\n                                    // \"currentImage\" is an internal variable that tracks the active image url\n                                    var oldImage = currentImage;\n\n                                    // \"getSelectedImage\" is a function which grabs the url of the selected image\n                                    var newImage = getSelectedImage($(this));\n\n                                    undoRedoImageURLChanges(elem, oldImage, newImage);\n\n                                }\n\n                            });\n\n\n                            $('#UpdateImageURLviaInputBox').off('click');\n\n                            $('#UpdateImageURLviaInputBox').on('click', function (event) {\n\n                                if (currentImage != $(\"#ImageURLInputBox\").val()) {\n\n                                    // \"currentImage\" is an internal variable that tracks the active image url\n                                    var oldImage = currentImage;\n\n                                    // \"#ImageURLInputBox\" is the input box were the user enters the img URL\n                                    var newImage = $(\"#ImageURLInputBox\").val();\n\n                                    undoRedoImageURLChanges(elem, oldImage, newImage);\n\n                                    setTimeout(function () {\n                                        elem.click();\n                                    }, 200); \n                                }\n\n                                $('#SelectImageModal').modal('hide');\n\n                            });\n\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor,\"Responsive\", \"img-responsive\", \"img\");\n                        addClassButton(inEditor,\"Center\", \"center-block\", \"img\");\n\n                        var list = new listOption(\"img-rounded,img-circle,img-thumbnail\");\n                        addListButton(inEditor, \"Shape\", list, \"img\");\n                    </script>\n                </div>  \n            </div>\n            <div class=\"component\" title=\"Glyphicons\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Glyphicons.png\">\n                <div class=\"html-content\"><span class=\"glyphicon glyphicon-search\" aria-hidden=\"true\"></span></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        designSetting(\"icons\", \".glyphicon\");\n                        getVar[\"glyphiconList\"] = \"asterisk,plus,euro,eur,minus,cloud,envelope,pencil,glass,music,search,heart,star,star-empty,user,film,th-large,th,th-list,ok,remove,zoom-in,zoom-out,off,signal,cog,trash,home,file,time,road,download-alt,download,upload,inbox,play-circle,repeat,refresh,list-alt,lock,flag,headphones,volume-off,volume-down,volume-up,qrcode,barcode,tag,tags,book,bookmark,print,camera,font,bold,italic,text-height,text-width,align-left,align-center,align-right,align-justify,list,indent-left,indent-right,facetime-video,picture,map-marker,adjust,tint,edit,share,check,move,step-backward,fast-backward,backward,play,pause,stop,forward,fast-forward,step-forward,eject,chevron-left,chevron-right,plus-sign,minus-sign,remove-sign,ok-sign,question-sign,info-sign,screenshot,remove-circle,ok-circle,ban-circle,arrow-left,arrow-right,arrow-up,arrow-down,share-alt,resize-full,resize-small,exclamation-sign,gift,leaf,fire,eye-open,eye-close,warning-sign,plane,calendar,random,comment,magnet,chevron-up,chevron-down,retweet,shopping-cart,folder-close,folder-open,resize-vertical,resize-horizontal,hdd,bullhorn,bell,certificate,thumbs-up,thumbs-down,hand-right,hand-left,hand-up,hand-down,circle-arrow-right,circle-arrow-left,circle-arrow-up,circle-arrow-down,globe,wrench,tasks,filter,briefcase,fullscreen,dashboard,paperclip,heart-empty,link,phone,pushpin,usd,gbp,sort,sort-by-alphabet,sort-by-alphabet-alt,sort-by-order,sort-by-order-alt,sort-by-attributes,sort-by-attributes-alt,unchecked,expand,collapse-down,collapse-up,log-in,flash,log-out,new-window,record,save,open,saved,import,export,send,floppy-disk,floppy-saved,floppy-remove,floppy-save,floppy-open,credit-card,transfer,cutlery,header,compressed,earphone,phone-alt,tower,stats,sd-video,hd-video,subtitles,sound-stereo,sound-dolby,sound-5-1,sound-6-1,sound-7-1,copyright-mark,registration-mark,cloud-download,cloud-upload,tree-conifer,tree-deciduous,cd,save-file,open-file,level-up,copy,paste,alert,equalizer,king,queen,pawn,bishop,knight,baby-formula,tent,blackboard,bed,apple,erase,hourglass,lamp,duplicate,piggy-bank,scissors,bitcoin,btc,xbt,yen,jpy,ruble,rub,scale,ice-lolly,ice-lolly-tasted,education,option-horizontal,option-vertical,menu-hamburger,modal-window,oil,grain,sunglasses,text-size,text-color,text-background,object-align-top,object-align-bottom,object-align-horizontal,object-align-left,object-align-vertical,object-align-right,triangle-right,triangle-left,triangle-bottom\";\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"editGlypIconBtn\", \"Change\", \"\", \"\", \".glyphicon\");\n\n                        inEditor.find(\"#editGlypIconBtn\").click(function (event) {\n                            iconBuild(getVar[\"glyphiconList\"], \"glyphicon\", true, \"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.min.css\");\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n                <div class=\"afterDrop\">\n                    <script>\n                        iconBuild(getVar[\"glyphiconList\"], \"glyphicon\", true, \"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.min.css\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Image Figures\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Image_Figures.png\">\n                <div class=\"html-content\"><figure class=\"figure\"><img class=\"figure-img img-fluid center-block\" alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/140x140.png\" ><figcaption class=\"figure-caption\">A caption for the above image.</figcaption></figure></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        designSetting(\"addOutline\", \"figure\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Thumbnails (Simple)\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Thumbnails_Simple.png\">\n                <div class=\"html-content\"><div class=\"container\"><div class=\"row\"><div class=\"col-xs-6 col-md-3\"><a href=\"#\" class=\"thumbnail\"><img alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/240x180.png\"></a></div><div class=\"col-xs-6 col-md-3\"><a href=\"#\" class=\"thumbnail\"><img alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/240x180.png\"></a></div><div class=\"col-xs-6 col-md-3\"><a href=\"#\" class=\"thumbnail\"><img alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/240x180.png\"></a></div><div class=\"col-xs-6 col-md-3\"><a href=\"#\" class=\"thumbnail\"><img alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/240x180.png\"></a></div></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Thumbnail\", \".thumbnail\");\n                        tagReName(\"Caption Box\", \"div.caption\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Thumbnails (With Content)\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Thumbnails_With_Content.png\">\n                <div class=\"html-content\"><div class=\"container\"><div class=\"row\"><div class=\"col-sm-6 col-md-4\"><div class=\"thumbnail\"><img alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/240x200.png\"><div class=\"caption\"><div class=\"ag-header h3\">Thumbnail label</div><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p><div><button type=\"button\" class=\"btn btn-primary\">Button</button><button type=\"button\" class=\"btn btn-default\">Button</button></div></div></div></div><div class=\"col-sm-6 col-md-4\"><div class=\"thumbnail\"><img alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/240x200.png\"><div class=\"caption\"><div class=\"ag-header h3\">Thumbnail label</div><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p><div><button type=\"button\" class=\"btn btn-primary\">Button</button><button type=\"button\" class=\"btn btn-default\">Button</button></div></div></div></div><div class=\"col-sm-6 col-md-4\"><div class=\"thumbnail\"><img alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/240x200.png\"><div class=\"caption\"><div class=\"ag-header h3\">Thumbnail label</div><p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p><div><button type=\"button\" class=\"btn btn-primary\">Button</button><button type=\"button\" class=\"btn btn-default\">Button</button></div></div></div></div></div></div></div>\n            </div>\n            <div class=\"component divider\" title=\"Text Content\"></div>\n            <div class=\"component\" title=\"Address\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Address.png\">\n                <div class=\"html-content\"><address><div><span class=\"ag-text-edit\">ABC, Inc.</span></div><div><span class=\"ag-text-edit\">123 Abc Ave, Suite 600</span></div><div><span class=\"ag-text-edit\">San Francisco, CA 90210</span></div><div><span class=\"ag-text-edit\">P: (123) 456-7890</span></div></address></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Address Line\", \"address > div\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Blockquote\" id=\"blockquote\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Blockquote.png\">\n                <div class=\"html-content\"><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p><footer>Someone famous in <cite title=\"Source Title\">Source Title</cite></footer></blockquote></div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Reverse\", \"blockquote-reverse\", \"blockquote\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Description\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Description.png\">\n                <div class=\"html-content\"><dl class=\"dl-horizontal\"><dt>Description lists</dt><dd><p>A description list is perfect for defining terms.</p></dd><dt>Euismod</dt><dd><p>Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.</p></dd><dd><p>Donec id elit non mi porta gravida at eget metus.</p></dd><dt>Malesuada porta</dt><dd><p>Etiam porta sem malesuada magna mollis euismod.</p></dd></dl></div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Horizontal\", \"dl-horizontal\", \"dl\");\n                    </script>\n                </div>\n                <div class=\"whenCopy\">\n                    <script>\n                        //when dt is being copied, then insert a dd tag as well\n                        if (elm.is(\"dt\") == true) { //we are copyng a dt tag\n                            overrideClone = true; //trigger custom clone\n                            clonedElement.closest(\".newStuff\").append(\"<dd><p>Description</p></dd>\"); //add a dd tag\n\n                            var curElm = elm;\n                            //this adds our new dt and dd tag after the last occurrence of a dd tag\n                            if (curElm.is(':last-child') == false) {\n                                while ((curElm.next().is(\"dd\"))) {\n                                    curElm = curElm.next();\n                                    if (curElm.is(':last-child')) {\n                                        break;\n                                    }\n                                }\n                            }\n                            curElm.after(clonedElement.parent()); // add the new dt and dd tag\n                        }\n\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Unordered List\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Unordered_List.png\">\n                <div class=\"html-content\"><ul><li>Lorem ipsum dolor sit amet</li><li>Consectetur adipiscing elit</li><li>Integer molestie lorem at massa</li></ul></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        designSetting(\"addTextTo\", \"ul > li\");\n                        designSetting(\"notContentEditable\", \"ul > li\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Unstyled\", \"list-unstyled\", \"ul\", \".navbar-nav, .pagination, .pager, .list-group, .nav-tabs, .nav-pills\");\n                        addClassButton(inEditor, \"Inline\", \"list-inline\", \"ul\", \".navbar-nav, .pagination, .pager, .list-group, .nav-tabs, .nav-pills\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Ordered List\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Ordered_List.png\">\n                <div class=\"html-content\"><ol><li>Lorem ipsum dolor sit amet</li><li>Consectetur adipiscing elit</li><li>Integer molestie lorem at massa</li></ol></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        designSetting(\"addTextTo\", \"ol > li\");\n                        designSetting(\"notContentEditable\", \"ol > li\");\n                    </script>\n                </div>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Design Components\">\n            <div class=\"component\" title=\"Container\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Container.png\">\n                <div class=\"html-content\"><div class=\"container\"></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Container\", \".container, .container-fluid\", false, \"boot-container\");\n                    </script>\n                    <style>\n                        .container:empty, .container-fluid:empty{\n                            padding-bottom: 150px;\n                        }\n                        .container:empty:before  {\n                            content: \"Container\";\n                        }\n                        .container-fluid:empty:before  {\n                            content: \"Container Fluid\";\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"containerFluid\", \"Container Fluid\", \"\", \"\", \".container, .container-fluid\");\n\n                        function containerType(elm, controlButton) {\n                            if (elm.hasClass(\"container-fluid\")) {\n                                elm.removeClass(\"container-fluid\");\n                                elm.addClass(\"container\");\n                                controlButton.removeClass(\"ag-active\");\n                            } else {\n                                elm.addClass(\"container-fluid\");\n                                elm.removeClass(\"container\");\n                                controlButton.addClass(\"ag-active\");\n                            }\n                        }\n\n                        inEditor.find(\"#containerFluid\").click(function (event) {\n                            var elm = selectedElement();\n                            containerType(elm, $(this));\n                            updateClassValue(elm);\n                            undoManager.add({\n                                undo: function () {\n                                    showIfHidden(elm);\n                                    containerType(elm, $(this));\n                                    resetBreadcrumbAndProps(elm, true);\n                                },\n                                redo: function () {\n                                    showIfHidden(elm);\n                                    containerType(elm, $(this));\n                                    resetBreadcrumbAndProps(elm, true);\n                                }\n                            });\n\n                            undoRedoStatus();\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Breadcrumbs\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Breadcrumbs.png\">\n                <div class=\"html-content\"><ol class=\"breadcrumb\"><li><a href=\"#\">Home</a></li><li><a href=\"#\">Library</a></li><li class=\"active\"><span>Data</span></li></ol></div>\n                <div class=\"runOnLoad\">\n                    <script>\n\n                        tagReName(\"Breadcrumb\", \".breadcrumb\", true);\n                        designSetting(\"notDraggable\", \".breadcrumb a\");\n                        designSetting(\"notContentEditable\", \".breadcrumb li\");\n                        contentEditableButNoToolbar(\".breadcrumb a\");\n                        designSetting(\"addOutline\", \".breadcrumb\");\n\n                    </script>\n                </div>\n                <div class=\"beforeCopy\">\n                    <script>\n                        if (elm.closest(\".breadcrumb\").length > 0) {//we are in breadcrumb\n                            if (elm.hasClass(\"breadcrumb\") == false) {//but don't select the outer breadcrumb\n                                if (elm.closest(\"li\").length > 0) {//just to make sure there is at least 1 li\n                                    elm = elm.closest(\"li\");\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Jumbotron\" data-alias=\"banner\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Jumbotron.png\">\n                <div class=\"html-content\"><div class=\"jumbotron\"><div class=\"container\"><div class=\"ag-header h1\">Hello, world!</div><p>This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p><div><button type=\"button\" class=\"btn btn-primary btn-lg\">Learn more</button></div></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Jumbotron\", \".jumbotron\", true);\n                        designSetting(\"addOutline\", \".jumbotron\");\n\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Horizontal Line\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Horizontal_Line.png\">\n                <div class=\"html-content\"><hr></div>\n            </div>\n            <div class=\"component\" title=\"Image Carousel\" data-alias=\"banner,slide\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Image_Carousel.png\">\n                <div class=\"html-content\"><div id=\"carousel-with-captions-x\" class=\"carousel slide carousel-image\" data-ride=\"carousel\" data-interval=\"5000\"><ol class=\"carousel-indicators\"><li data-target=\"#carousel-with-captions-x\" data-slide-to=\"0\" class=\"active\"></li><li data-target=\"#carousel-with-captions-x\" data-slide-to=\"1\"></li><li data-target=\"#carousel-with-captions-x\" data-slide-to=\"2\"></li></ol><div class=\"carousel-inner\" role=\"listbox\"><div class=\"item active\"><img alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/1220x600.png\"><div class=\"carousel-caption\"><div class=\"ag-header h3\">First slide label</div><p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p></div></div><div class=\"item\"><img alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/1220x600xgrey.png\"><div class=\"carousel-caption\"><div class=\"ag-header h3\">Second slide label</div><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p></div></div><div class=\"item\"><img alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/1220x600xwhite.png\"><div class=\"carousel-caption\"><div class=\"ag-header h3\">Third slide label</div><p>Praesent commodo cursus magna.</p></div></div></div><a class=\"left carousel-control\" href=\"#carousel-with-captions-x\" role=\"button\" data-slide=\"prev\"><span class=\"glyphicon glyphicon-chevron-left\" aria-hidden=\"true\"></span><span class=\"sr-only\">Previous</span></a><a class=\"right carousel-control\" href=\"#carousel-with-captions-x\" role=\"button\" data-slide=\"next\"><span class=\"glyphicon glyphicon-chevron-right\" aria-hidden=\"true\"></span><span class=\"sr-only\">Next</span></a></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Carousel\", \".carousel\", true);\n                        designSetting(\"unTouchElement\", \".carousel-control, .carousel-control *, .carousel-indicators, .carousel-indicators *, .carousel-inner, .carousel-inner .item, .carousel-caption, .carousel-image .carousel-inner img\");\n                        designSetting(\"noCopy\", \".carousel\");\n                        designSetting(\"removeOnCopy\", \".carousel\");\n                    </script>\n                    <style>\n                        .carousel-indicators li:empty{\n                            padding: 0px !important;\n                            background-image: none !important;\n                            outline: none !important;\n                        }\n                        .carousel-indicators li:empty:before {\n                            content: \"\" !important;\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"addImage\", \"Select Image\", \"\", \"\", \".carousel\", \"\", \"#15CD72\");\n                        addCustomButton(inEditor, \"addSlide\", \"Add Slide\", \"\", \"\", \".carousel\");\n                        addCustomButton(inEditor, \"removeSlide\", \"Remove Slide\", \"\", \"\", \".carousel\");\n\n                        function addCarouselSlide(runUndo) {\n                            var elm = selectedElement();\n\n                            var ci = elm.find(\".carousel-indicators\");//add after active indicator in carousel\n                            var sl = elm.find(\".carousel-inner\");//add after slider from carousel                        \n                            var aca = ci.children(\".active\");\n                            var sla = sl.children(\".active\");\n\n                            aca.after(aca.clone(false));\n                            aca.removeClass(\"active\");\n\n                            var clonedElement = sla.clone(false);\n                            var cc = clonedElement.find(\".carousel-caption\");\n                            var ccAll = cc.find(\"*\");\n                            ccAll.removeAttr('id');\n\n\n                            ccAll.removeClass(internalClassValues().join(\" \"));\n\n                            cc.html(\"<div class='newStuff'>\" + cc.html() + \"</div>\");\n                            sla.after(clonedElement);\n                            sla.removeClass(\"active\");\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, false, true);\n\n                            var nwaca = ci.children(\".active\");\n                            var nwsla = sl.children(\".active\");\n                            var acaAttachInfo = reAttachHow(nwaca);\n                            var slaAttachInfo = reAttachHow(nwsla);\n\n                            elm.find(\".carousel-indicators\").find(\"li\").each(function (index) {\n                                $(this).attr(\"data-slide-to\", index);\n                            });\n                            if (runUndo == true) {\n                                undoManager.add({\n                                    undo: function () {\n                                        showIfHidden(elm);\n                                        ci.children(\".active\").removeClass(\"active\");\n                                        sl.children(\".active\").removeClass(\"active\");\n                                        aca.addClass(\"active\");\n                                        sla.addClass(\"active\");\n                                        nwaca.detach();\n                                        nwsla.detach();\n                                        elm.find(\".carousel-indicators\").find(\"li\").each(function (index) {\n                                            $(this).attr(\"data-slide-to\", index);\n                                        });\n                                        resetBreadcrumbAndProps(elm, false);\n\n                                    },\n                                    redo: function () {\n                                        showIfHidden(elm);\n                                        ci.children(\".active\").removeClass(\"active\");\n                                        sl.children(\".active\").removeClass(\"active\");\n                                        reAttachNow(acaAttachInfo);\n                                        reAttachNow(slaAttachInfo);\n                                        acaAttachInfo[\"elm\"].addClass(\"active\");\n                                        slaAttachInfo[\"elm\"].addClass(\"active\");\n\n                                        elm.find(\".carousel-indicators\").find(\"li\").each(function (index) {\n                                            $(this).attr(\"data-slide-to\", index);\n                                        });\n                                        resetBreadcrumbAndProps(elm, false);\n                                    }\n                                });\n\n                                undoRedoStatus();\n                            }\n                        }\n\n                        inEditor.find(\"#addSlide\").click(function (event) {\n                            addCarouselSlide(true);\n                            event.stopPropagation();\n                        });\n\n                        function removeCarouselSlide(runUndo) {\n                            var elm = selectedElement();\n\n\n                            var ci = elm.find(\".carousel-indicators\");//remove active indicator in carousel\n                            var sl = elm.find(\".carousel-inner\");//remove slider from carousel\n\n                            if (ci.find(\"li\").length > 1) {\n                                var aca = ci.children(\".active\");\n                                var sla = sl.children(\".active\");\n\n\n                                if (aca.is(':last-child')) {\n                                    var nwaca = aca.parent().find(\"li\").first();\n                                    var nwsla = sla.parent().find(\".item\").first();\n                                } else {\n                                    var nwaca = aca.next();\n                                    var nwsla = sla.next();\n                                }\n\n                                nwaca.addClass(\"active\");\n                                nwsla.addClass(\"active\");\n\n                                var acaAttachInfo = reAttachHow(aca);\n                                var slaAttachInfo = reAttachHow(sla);\n                                aca.detach();\n                                sla.detach();\n\n                                elm.find(\".carousel-indicators\").find(\"li\").each(function (index) {\n                                    $(this).attr(\"data-slide-to\", index);\n                                });\n                                if (runUndo == true) {\n                                    undoManager.add({\n                                        undo: function () {\n\n                                            showIfHidden(elm);\n                                            ci.children(\".active\").removeClass(\"active\");\n                                            sl.children(\".active\").removeClass(\"active\");\n                                            reAttachNow(acaAttachInfo);\n                                            reAttachNow(slaAttachInfo);\n                                            acaAttachInfo[\"elm\"].addClass(\"active\");\n                                            slaAttachInfo[\"elm\"].addClass(\"active\");\n\n                                            elm.find(\".carousel-indicators\").find(\"li\").each(function (index) {\n                                                $(this).attr(\"data-slide-to\", index);\n                                            });\n                                            resetBreadcrumbAndProps(elm, false);\n                                        },\n                                        redo: function () {\n                                            showIfHidden(elm);\n                                            ci.children(\".active\").removeClass(\"active\");\n                                            sl.children(\".active\").removeClass(\"active\");\n                                            nwaca.addClass(\"active\");\n                                            nwsla.addClass(\"active\");\n                                            aca.detach();\n                                            sla.detach();\n                                            elm.find(\".carousel-indicators\").find(\"li\").each(function (index) {\n                                                $(this).attr(\"data-slide-to\", index);\n                                            });\n                                            resetBreadcrumbAndProps(elm, false);\n\n                                        }\n                                    });\n\n                                    undoRedoStatus();\n                                }\n\n                            }\n                        }\n\n                        inEditor.find(\"#removeSlide\").click(function (event) {\n\n                            removeCarouselSlide(true);\n                            event.stopPropagation();\n                        });\n\n\n                        function undeRedoSlideImageChanges(elem, slideImage, oldImage, newImage) {\n                            slideImage.attr(\"src\", newImage);\n\n                            undoManager.add({\n                                undo: function () {\n                                    showIfHidden(elem);\n                                    var itm = slideImage.closest(\".item\");\n                                    if (itm.length > 0) {\n                                        if (itm.hasClass(\"active\") == false) {\n                                            var carsel = slideImage.closest(\".carousel\");\n                                            if (carsel.length > 0) {\n                                                carsel.find(\".active\").removeClass(\"active\");\n                                                itm.addClass(\"active\");\n                                                carsel.find(\"ol.carousel-indicators\").find(\"li\").eq(itm.index()).addClass(\"active\");\n                                            }\n                                        }\n                                    }\n\n                                    slideImage.attr(\"src\", oldImage);\n                                    resetBreadcrumbAndProps(elem, false);\n                                },\n                                redo: function () {\n                                    showIfHidden(elem);\n                                    var itm = slideImage.closest(\".item\");\n                                    if (itm.length > 0) {\n                                        if (itm.hasClass(\"active\") == false) {\n                                            var carsel = slideImage.closest(\".carousel\");\n                                            if (carsel.length > 0) {\n                                                carsel.find(\".active\").removeClass(\"active\");\n                                                itm.addClass(\"active\");\n                                                carsel.find(\"ol.carousel-indicators\").find(\"li\").eq(itm.index()).addClass(\"active\");\n                                            }\n                                        }\n                                    }\n                                    slideImage.attr(\"src\", newImage);\n                                    resetBreadcrumbAndProps(elem, false);\n\n                                }\n                            });\n\n                            undoRedoStatus();\n                        }\n\n                        inEditor.find(\"#addImage\").click(function (event) {\n\n                            var elem = selectedElement();\n                            var slideImage = elem.find(\".carousel-inner\").find(\".active\").find(\"img\");\n\n                            // \"openImageGallery\" is a function used to open the image gallery\n                            // you must pass an array of affected elements (with a target attribute) for the image url\n                            openImageGallery([\n                                {\n                                    \"element\": slideImage,\n                                    \"attribute\": \"src\"\n                                }\n                            ]);\n\n                            $('#ImageGallery').off('click', '.thumbnail');\n\n                            $('#ImageGallery').on('click', '.thumbnail', function (event) {\n\n                                if ($(this).hasClass(\"imageActive\") == false) {\n\n                                    // \"currentImage\" is an internal variable that tracks the active image url\n                                    var oldImage = currentImage;\n\n                                    // \"getSelectedImage\" is a function which grabs the url of the selected image\n                                    var newImage = getSelectedImage($(this));\n\n                                    undeRedoSlideImageChanges(elem, slideImage, oldImage, newImage);\n                                }\n\n                            });\n\n                            $('#UpdateImageURLviaInputBox').off('click');\n\n                            $('#UpdateImageURLviaInputBox').on('click', function (event) {\n\n                                if (currentImage != $(\"#ImageURLInputBox\").val()) {\n\n                                    // \"currentImage\" is an internal variable that tracks the active image url\n                                    var oldImage = currentImage;\n\n                                    // \"#ImageURLInputBox\" is the input box were the user enters the img URL\n                                    var newImage = $(\"#ImageURLInputBox\").val();\n\n                                    undeRedoSlideImageChanges(elem, slideImage, oldImage, newImage);\n\n                                    setTimeout(function () {\n                                        elem.click();\n                                    }, 200); \n                                }\n\n                                $('#SelectImageModal').modal('hide');\n\n                            });\n\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n                <div class=\"afterDrop\" id=\"stopCarouselSlide\">\n                    <script>\n                        //stop new Carousel from sliding\n                        designWindow().stopCarousel();\n\n                        //adds unique id to every new navbar\n                        var id = \"carousel-with-captions-\";\n                        var i = uniqueID(id);\n                        var elm = designFrame.find(\"#\" + id + \"x\");\n                        elm.attr(\"id\", id + i);\n                        elm.find(\".carousel-indicators\").find(\"li\").each(function () {\n                            $(this).attr(\"data-target\", \"#\" + id + i);\n                        });\n                        elm.find(\".carousel-control\").each(function () {\n                            $(this).attr(\"href\", \"#\" + id + i);\n                        });\n\n                    </script>\n                </div>\n                <div class=\"afterUnHide\">\n                    <script>\n                        var itm = visibleElm.closest(\".item\");\n                        if (itm.length > 0) {\n                            if (itm.hasClass(\"active\") == false) {\n                                var carsel = visibleElm.closest(\".carousel\");\n                                if (carsel.length > 0) {\n                                    carsel.find(\".active\").removeClass(\"active\");\n                                    itm.addClass(\"active\");\n                                    carsel.find(\"ol.carousel-indicators\").find(\"li\").eq(itm.index()).addClass(\"active\");\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrop.hasClass(\"carousel\")) { // is drop elem a carousel\n                            isOut = true; // therefore never drop inside\n                        }\n\n                        // A carousel can not be dropped into another carousel\n                        if (elmDrop.closest(\".carousel\").length > 0) {\n                            if (elmDrag.hasClass(\"carousel\")) {\n                                if (elmDrop.hasClass(\"carousel\")) {\n                                    isOut = true;\n                                }else{\n                                    finalShow = false;\n                                }  \n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"copyComponent\" title=\"blockquote\"></div>\n            <div class=\"component\" title=\"Table\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Table.png\">\n                <div class=\"html-content\"><div class=\"table-responsive\"><table class=\"table\"><thead><tr><th>#</th><th>Col</th><th>Col</th><th>Col</th></tr></thead><tbody><tr><th scope=\"row\">1</th><td>Cell</td><td>Cell</td><td>Cell</td></tr><tr><th scope=\"row\">2</th><td>Cell</td><td>Cell</td><td>Cell</td></tr><tr><th scope=\"row\">3</th><td>Cell</td><td>Cell</td><td>Cell</td></tr></tbody></table></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Container\", \".table-responsive\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Striped\", \"table-striped\", \"table\");\n                        addClassButton(inEditor, \"Bordered\", \"table-bordered\", \"table\");\n                        addClassButton(inEditor, \"Hover\", \"table-hover\", \"table\");\n                        addClassButton(inEditor, \"Condensed\", \"table-condensed\", \"table\");\n                    </script>\n                </div>\n                <div class=\"afterDrop\">\n                    <script>\n                        var elm = selectedElement();\n                        setTimeout(function () {\n                            focusElement(elm.find(\"table\"));\n                        }, 100);\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Media Object\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Media_Object.png\">\n                <div class=\"html-content\"><div class=\"media\"><a class=\"media-left\" href=\"#\"><img class=\"media-object\" alt=\"...\" src=\"https://editor.bragndrop.com/assets/images/64.png\"></a><div class=\"media-body\"><div class=\"ag-header h4 media-heading\">Media heading</div><p>Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin commodo. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus. Donec sed odio dui. Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</p></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Media\", \".media\", true);\n                        tagReName(\"Media Align\", \".media-left\");\n                        tagReName(\"Media Body\", \".media-body\");\n                        designSetting(\"addOutline\", \".media\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"media-top,media-middle,media-bottom\");\n                        list.hasNone = false;\n                        addListButton(inEditor, \"Vertical Align\", list, \".media-left\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Pagination and Pager\">\n                <div class=\"component\" title=\"Pagination\" id=\"Pagination\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Pagination.png\">\n                    <div class=\"html-content\"><nav><ul class=\"pagination\"><li><a href=\"#\" aria-label=\"Previous\"><span aria-hidden=\"true\">&laquo;</span></a></li><li><a href=\"#\">1</a></li><li><a href=\"#\">2</a></li><li><a href=\"#\">3</a></li><li><a href=\"#\">4</a></li><li><a href=\"#\">5</a></li><li><a href=\"#\" aria-label=\"Next\"><span aria-hidden=\"true\">&raquo;</span></a></li></ul></nav></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Pagination\", \".pagination\");\n                            designSetting(\"notDroppable\", \".pagination > li, .pagination > li *\");\n                            contentEditableButNoToolbar(\".pagination > li > a\");\n                            designSetting(\"showWhenEmpty\", \".pagination\");\n                        </script>\n                    </div>\n                    <div class=\"addButtons\">\n                        <script>\n                            var list = new listOption(\"pagination-lg,pagination-sm\");\n                            list.altCaption = {\"pagination-lg\": \"Large\", \"pagination-sm\": \"Small\"};\n                            addListButton(inEditor, \"Sizing\", list, \".pagination\");\n                        </script>\n                    </div>\n                    <div class=\"beforeCopy\">\n                        <script>\n                            if (elm.closest(\".pagination\").length > 0) {//we are in pagination\n                                if (elm.hasClass(\"pagination\") == false) {//but don't select the outer pagination\n                                    if (elm.closest(\"li\").length > 0) {//just to make sure there are at least 1 li\n                                        elm = elm.closest(\"li\");\n                                        runClick = false;//don't click the new item yet\n                                    }\n                                }\n                            }\n                        </script>\n                    </div>\n                    <div class=\"afterCopy\">\n                        <script>\n                            if (elm.closest(\".pagination\").length > 0) {//we are in pagination\n                                if (elm.is(\"li\")) {\n                                    focusElement(elm.next().find(\"a\"));\n                                }\n                            }\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Pager\" id=\"Pager\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Pager.png\">\n                    <div class=\"html-content\"><nav><ul class=\"pager\"><li class=\"previous\"><a href=\"#\">Previous</a></li><li class=\"next\"><a href=\"#\">Next</a></li></ul></nav></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Pager\", \".pager\");\n                            designSetting(\"notDroppable\", \".pager > li, .pager > li *\");\n                            contentEditableButNoToolbar(\".pager > li > a\");\n                        </script>\n                    </div>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Active\", \"active\", \".pagination > li > a\", \"\", 'selectedElement().closest(\"li\")');\n                        addClassButton(inEditor, \"Disable\", \"disabled\", \".pagination > li > a, .pager > li > a\", \"\", 'selectedElement().closest(\"li\")');\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"List Group\">\n                <div class=\"component\" title=\"List (Basic)\" data-alias=\"side\" id=\"listGroupBasic\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/List_Basic.png\">\n                    <div class=\"html-content\"><ul class=\"list-group\"><li class=\"list-group-item\">Cras justo odio</li><li class=\"list-group-item\">Dapibus ac facilisis in</li><li class=\"list-group-item\">Morbi leo risus</li><li class=\"list-group-item\">Porta ac consectetur ac</li><li class=\"list-group-item\">Vestibulum at eros</li></ul></div>\n                </div>\n                <div class=\"component\" title=\"List (Linked Items)\" data-alias=\"side\"  id=\"listGroupLinked\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/List_Linked_Items.png\">\n                    <div class=\"html-content\"><div class=\"list-group\"><a href=\"#\" class=\"list-group-item\"> Cras justo odio </a><a href=\"#\" class=\"list-group-item\">Dapibus ac facilisis in</a><a href=\"#\" class=\"list-group-item\">Morbi leo risus</a><a href=\"#\" class=\"list-group-item\">Porta ac consectetur ac</a><a href=\"#\" class=\"list-group-item\">Vestibulum at eros</a></div></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"List Group\", \".list-group\");\n                        designSetting(\"notDraggable\", \".list-group .list-group-item\");\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrag.hasClass(\"list-group-item\")) {  //draggable is list-group-items\n                            if (elmDrop.hasClass(\"list-group-item\")) {  //droppable is list-group-items therefor make it drop outside\n                                isOut = true;\n                            }\n                        }\n                    </script>\n                </div>   \n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Active\", \"active\", \"a.list-group-item, li.list-group-item\");\n                        addClassButton(inEditor, \"Disabled\", \"disabled\", \"a.list-group-item, li.list-group-item\");\n                        var list = new listOption(\"list-group-item-success,list-group-item-info,list-group-item-warning,list-group-item-danger\");\n                        list.prefixMatch = \"list-group-item-\";\n                        addListButton(inEditor, \"Type\", list, \"a.list-group-item, li.list-group-item\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Labels and Badges\">\n                <div class=\"component\" title=\"Labels\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Labels.png\">\n                    <div class=\"html-content\"><span class=\"label label-danger\">Danger</span></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Label\", \".label\");\n                        </script>\n                    </div>\n                    <div class=\"addButtons\">\n                        <script>\n                            var list = new listOption(\"label-default,label-primary,label-success,label-info,label-warning,label-danger\");\n                            list.hasNone = false;\n                            addListButton(inEditor, \"Type\", list, \".label\");\n                        </script>\n                    </div>\n                </div>  \n                <div class=\"component\" title=\"Badges\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Badges.png\">\n                    <div class=\"html-content\"><span class=\"badge\">4</span></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Badge\", \".badge\");\n                        </script>\n                    </div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <style>\n                        .label:empty, .badge:empty{\n                            display: inline-block;\n                        }\n                        .label:after, .badge:after{\n                            content: \"\\00a0\";\n                        }\n                    </style>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Wells\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Wells.png\">\n                <div class=\"html-content\"><div class=\"well\">...</div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Well\", \".well\");\n                        designSetting(\"addTextTo\", \".well\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"well-sm,well-lg\");\n                        list.altCaption = {\"well-sm\": \"Small\", \"well-lg\": \"Large\"};\n                        addListButton(inEditor, \"Type\", list, \".well\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"IFrame\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/IFrame.png\">\n                <div class=\"html-content\"><div src=\"...\" class=\"embed-responsive embed-responsive-16by9\"><div class=\"embed-responsive-item\"></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"IFrame\", \".embed-responsive\");\n                        designSetting(\"unTouchElement\", \".embed-responsive-item\");\n                    </script>\n                    <style>\n                        .embed-responsive-item{\n                            width:100%;\n                            height:100%;\n                            background-color: #EEEEEE;\n                            padding: 0px !important;\n                            -webkit-box-shadow: inset 0px 0px 35px 4px rgba(0,0,0,0.06);\n                            -moz-box-shadow: inset 0px 0px 35px 4px rgba(0,0,0,0.06);\n                            box-shadow: inset 0px 0px 35px 4px rgba(0,0,0,0.06);\n                        }\n\n                        .embed-responsive-item:empty:before {\n                            content:none;\n                        }\n                        .embed-responsive-item:after{\n                            content: \"IFrame\";\n                            display: block;\n                            position: absolute;\n                            top: 40%;\n                            width: 100%;\n                            height: 100%;\n                            text-align: center;\n                            color: #C0C0C0;\n                        }\n                    </style>\n                </div> \n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"embed-responsive-16by9,embed-responsive-4by3\");\n                        list.prefixMatch = \"embed-responsive-\";\n                        list.hasNone = false;\n                        addListButton(inEditor, \"Aspect Ratio\", list, \".embed-responsive\");\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrop.hasClass(\"embed-responsive\")) {//is drop elem embed, therefore put it outside\n                            isOut = true;\n                        }\n                    </script>\n                </div>\n                <div class=\"cleanUpBeforePublish\">\n                    <script>\n                        pageClone.find(\".embed-responsive\").each(function () {\n                            //replace the div with an iFrame when publishing\n                            $(this).html('<iframe class=\"embed-responsive-item\" src=\"' + $(this).attr(\"src\") + '\"></iframe>');\n                            $(this).removeAttr(\"src\");\n                        });\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Footer\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Footer.png\">\n                <div class=\"html-content\"><footer class=\"footer\"><div class=\"container\"><p class=\"text-muted\">Copyright 1999-2015 by ...</p></div></footer></div>\n                <div class=\"requireCSS\" data-check=\".footer\">\n                    <style>\n                        .footer {\n                            width: 100%;\n                            background-color: #f5f5f5;\n                        }\n                        .footer > .container{\n                            padding-top:20px;\n                            padding-bottom:10px;\n                        }\n                    </style>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrop.is(\"footer > .container\")) { \n                            isOut = false;\n                        }\n                    </script>\n                </div>\n                <div class=\"addJStoFinal\" data-check=\".footer\">\n                    <script>\n                        $(function () {\n                            if ($(\".footer\").length > 0) {\n                                $(\"html\").css(\"position\", \"relative\");\n                                $(\"html\").css(\"min-height\", \"100%\");\n                                $(\"body\").css(\"margin-bottom\", $(\".footer\").outerHeight(true));\n                                $(\".footer\").css(\"position\", \"absolute\");\n                                $(\".footer\").css(\"bottom\", \"0\");\n                            }\n                        });\n                    </script>\n                </div>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Responsive Grid\">\n            <div class=\"component\" title=\"Basic Grid\" data-alias=\"responsive\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Basic_Grid.png\">\n                <div class=\"html-content\"><div class=\"container\"><div class=\"row\"><div class=\"col-xs-12 col-md-3 col-sm-6\"></div></div></div></div>\n                <div class=\"afterDrop\" id=\"selectFirstColumn\">\n                    <script>\n                        setTimeout(function () {\n                            focusElement(selectedElement().find(\".row\").children(\"div\").eq(0));\n                            setTimeout(function () {\n                                inEditor.find(\"#editColumnWidth\").click();\n                            }, 200);    \n                        }, 100);\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"12 Cell Grid\" data-alias=\"responsive\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/12_Cell_Grid.png\">\n                <div class=\"html-content\"><div class=\"container\"><div class=\"row\"><div class=\"col-xs-12\"></div></div></div></div>\n                <div class=\"afterDropCopy\" title=\"selectFirstColumn\"></div>\n            </div>\n            <div class=\"component\" title=\"6-6 Cell Grid\" data-alias=\"responsive\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/6-6_Cell_Grid.png\">\n                <div class=\"html-content\"><div class=\"container\"><div class=\"row\"><div class=\"col-md-6\"></div><div class=\"col-md-6\"></div></div></div></div>\n                <div class=\"afterDropCopy\" title=\"selectFirstColumn\"></div>\n            </div>\n            <div class=\"component\" title=\"8-4 Cell Grid\" data-alias=\"responsive\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/8-4_Cell_Grid.png\">\n                <div class=\"html-content\"><div class=\"container\"><div class=\"row\"><div class=\"col-md-8\"></div><div class=\"col-md-4\"></div></div></div></div>\n                <div class=\"afterDropCopy\" title=\"selectFirstColumn\"></div>\n            </div>\n            <div class=\"component\" title=\"4-4-4 Cell Grid\" data-alias=\"responsive\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/4-4-4_Cell_Grid.png\">\n                <div class=\"html-content\"><div class=\"container\"><div class=\"row\"><div class=\"col-md-4\"></div><div class=\"col-md-4\"></div><div class=\"col-md-4\"></div></div></div></div>\n                <div class=\"afterDropCopy\" title=\"selectFirstColumn\"></div>\n            </div>\n            <div class=\"component\" title=\"2-6-4 Cell Grid\" data-alias=\"responsive\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/2-6-4_Cell_Grid.png\">\n                <div class=\"html-content\"><div class=\"container\"><div class=\"row\"><div class=\"col-md-2\"></div><div class=\"col-md-6\"></div><div class=\"col-md-4\"></div></div></div></div>\n                <div class=\"afterDropCopy\" title=\"selectFirstColumn\"></div>\n            </div>\n            <div class=\"runOnLoad\">\n                <script>\n                    var bootCol = \".col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12\";\n                    tagReName(\"Label\", bootCol.split(\".\").join(\"label.\"));\n                    tagReName(\"Row\", \".row\", false, \"boot-row\");\n                    tagReName(\"Column\", bootCol, true, \"boot-col\");\n                </script>\n            </div>\n            <div class=\"addButtons\">\n                <div id=\"bsColumnBox\">\n                    <div class=\"alert alert-info\" role=\"alert\">\n\n                    </div>\n                    <form>\n                        <div class=\"form-group\">\n                            <label for=\"deviceTypeSelect\" class=\"control-label\">Device Type:</label>\n                            <select class=\"form-control\" id=\"deviceTypeSelect\">\n                                <option value=\"col-lg-\">Large Screens</option>\n                                <option value=\"col-md-\" selected=\"selected\">Desktops</option>\n                                <option value=\"col-sm-\">Tablets</option>\n                                <option value=\"col-xs-\">Mobile</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"control-label\">Column Width: <span id='col-slider-val'></span></label>\n                            <div id='col-slider'></div>\n                        </div>\n                    </form>\n                </div>\n                <script>\n                    addCustomButton(inEditor, \"editColumnWidth\", \"Width\", \"\", \"\", getVar[\"boot-col\"]);\n                    addCustomButton(inEditor, \"editColumnOffset\", \"Offset\", \"\", \"\", getVar[\"boot-col\"]);\n                    addCustomButton(inEditor, \"editColumnPush\", \"Push\", \"arrow-right\", \"\", getVar[\"boot-col\"]);\n                    addCustomButton(inEditor, \"editColumnPull\", \"Pull\", \"arrow-left\", \"\", getVar[\"boot-col\"]);\n\n                    //this will take the design data from \"#hideIn\" above and put it into \"#device-hide\"\n                    //the buildCustomProp function will build \"#device-hide\" if its not been build\n                    var propBody = controlLayout.find(\"#bsColumnBox\").html();\n                    var columnProp = buildCustomProp(\"#column-prop\", propBody);\n\n                    function getColCSS(ds) {\n                        var vl = ds.val();\n                        var elm = selectedElement();\n                        var id = colSlideType;\n                        var nm = 12;\n                        if (id == \"editColumnOffset\") {\n                            vl = vl + \"offset-\";\n                            nm = 0;\n                        } else if (id == \"editColumnPush\") {\n                            vl = vl + \"push-\";\n                            nm = 0;\n                        } else if (id == \"editColumnPull\") {\n                            vl = vl + \"pull-\";\n                            nm = 0;\n                        }\n\n                        for (var i = 1; i <= 12; i++) {\n                            if (elm.hasClass(vl + i)) {\n                                nm = i;\n                                break;\n                            }\n                        }\n                        columnSlider.slider(\"option\", \"value\", nm);\n                        $(\"#col-slider-val\").text(nm);\n                    }\n\n                    var deviceType = columnProp.find(\"#deviceTypeSelect\");\n\n                    function deviceSelect() {\n\n                        var vl = deviceType.val();\n                        var s = \"\";\n                        if (vl == \"col-xs-\") {\n                            s = \"mobile\";\n                        } else if (vl == \"col-sm-\") {\n                            s = \"tablet\";\n                        } else if (vl == \"col-md-\") {\n                            s = \"desktop\";\n                        } else if (vl == \"col-lg-\") {\n                            s = \"large_screen\";\n                        } else {\n                            s = \"browser_width\";\n                        }\n\n                        return s;\n                    }\n\n                    deviceType.change(function () {\n                        var ds = deviceSelect();\n                        getColCSS(deviceType);\n                        $(\"#viewportList\").val(ds);\n                        changeViewport(ds);\n                    });\n\n                    function colTypeMessage(id) {\n                        var alert = columnProp.find(\".alert\");\n                        if (id == \"editColumnOffset\") {\n                            alert.html(\"Move the column to the right using the settings bellow!\");\n                            alert.show();\n                        } else if (id == \"editColumnPush\") {\n                            alert.html(\"Push the column to the right by x number of columns, starting from where the column would normally render!\");\n                            alert.show();\n                        } else if (id == \"editColumnPull\") {\n                            alert.html(\"pull the column to the left by x number of columns, starting from where the column would normally render!\");\n                            alert.show();\n                        } else {\n                            alert.hide();\n                        }\n                    }\n\n                    var colSlideType = \"editColumnWidth\";\n                    var colSlideOldVal = \"\";\n                    var colSlideNewVal = \"\";\n                    var colSlidePrefx = \"\";\n\n                    var columnSlider = columnProp.find(\"#col-slider\").slider({\n                        min: 1,\n                        max: 12,\n                        range: \"min\",\n                        start: function (event, ui) {\n\n                            colSlideOldVal = \"\";\n                            var prefx = columnProp.find(\"#deviceTypeSelect\").val();\n                            var id = colSlideType;\n\n                            if (id == \"editColumnOffset\") {\n                                colSlidePrefx = prefx + \"offset-\";\n                            } else if (id == \"editColumnPush\") {\n                                colSlidePrefx = prefx + \"push-\";\n                            } else if (id == \"editColumnPull\") {\n                                colSlidePrefx = prefx + \"pull-\";\n                            } else {\n                                colSlidePrefx = prefx;\n                            }\n                            var elm = selectedElement();\n                            for (var i = 1; i <= 12; i++) {\n                                if (elm.hasClass(colSlidePrefx + i)) {\n                                    colSlideOldVal = colSlidePrefx + i;\n                                    break;\n                                }\n                            }\n                        },\n                        slide: function (event, ui) {\n\n\n                            var elm = selectedElement();\n                            var sufx = ui.value;//$(this).val();\n                            var id = colSlideType;\n\n                            for (var i = 1; i <= 12; i++) {\n                                elm.removeClass(colSlidePrefx + i);\n                            }\n\n                            colSlideNewVal = \"\";\n                            if (id == \"editColumnWidth\") {\n                                colSlideNewVal = colSlidePrefx + sufx;\n                            } else {\n                                if (Number(sufx) != 0) {\n                                    colSlideNewVal = colSlidePrefx + sufx;\n                                }\n                            }\n                            if (colSlideNewVal != \"\") {\n                                elm.addClass(colSlideNewVal);\n                            }\n\n                            $(\"#col-slider-val\").text(sufx);\n\n                        },\n                        stop: function (event, ui) {\n\n                            var elm = selectedElement();\n                            updateClassValue(elm);\n\n                            if (colSlideOldVal != colSlideNewVal) {\n\n                                var tempOld = colSlideOldVal;\n                                var tempNew = colSlideNewVal;\n\n                                var id = colSlideType;\n                                var ds = deviceSelect();\n                                var dt = deviceType.val();\n                                undoManager.add({\n                                    undo: function () {\n                                        eastPanelShowContent(\"#column-prop\");\n                                        showIfHidden(elm);\n                                        elm.removeClass(tempNew);\n\n                                        if (tempOld != \"\") {\n                                            elm.addClass(tempOld);\n                                            var nm = cleanNumber(tempOld);\n                                        } else {\n                                            if (id == \"editColumnWidth\") {\n                                                var nm = 12;\n                                            } else {\n                                                var nm = 0;\n                                            }\n                                        }\n\n                                        columnSlider.slider(\"option\", \"value\", nm);\n                                        $(\"#col-slider-val\").text(nm);\n\n                                        deviceType.val(dt);\n                                        $(\"#viewportList\").val(ds);\n                                        changeViewport(ds);\n                                        colTypeMessage(id);\n                                        updateClassValue(elm);\n                                        resetBreadcrumbAndProps(elm, false, true);\n\n                                    },\n                                    redo: function () {\n                                        eastPanelShowContent(\"#column-prop\");\n                                        showIfHidden(elm);\n                                        elm.addClass(tempNew);\n                                        var nm = cleanNumber(tempNew);\n                                        columnSlider.slider(\"option\", \"value\", nm);\n                                        $(\"#col-slider-val\").text(nm);\n                                        if (tempOld != \"\") {\n                                            elm.removeClass(tempOld);\n                                        }\n\n                                        deviceType.val(dt);\n                                        $(\"#viewportList\").val(ds);\n                                        changeViewport(ds);\n                                        colTypeMessage(id);\n                                        updateClassValue(elm);\n                                        resetBreadcrumbAndProps(elm, false, true);\n\n                                    }\n                                });\n\n                                undoRedoStatus();\n                            }\n\n                        }\n                    });\n\n                    inEditor.find(\"#editColumnWidth, #editColumnOffset, #editColumnPush, #editColumnPull\").click(function (event) {\n\n                        var elm = selectedElement();\n                        var id = $(this).attr(\"id\");\n\n                        colSlideType = id;\n\n                        colTypeMessage(id);\n\n                        if (id == \"editColumnWidth\") {\n                            columnSlider.slider(\"option\", \"min\", 1);\n                        } else {\n                            columnSlider.slider(\"option\", \"min\", 0);\n                        }\n\n                        var dv = $(\"#viewportList\").val();\n\n                        if (dv == \"desktop\") {\n                            deviceType.val(\"col-md-\");\n                        } else if (dv == \"tablet\") {\n                            deviceType.val(\"col-sm-\");\n                        } else if (dv == \"mobile\") {\n                            deviceType.val(\"col-xs-\");\n                        } else if (dv == \"large_screen\") {\n                            deviceType.val(\"col-lg-\");\n                        } else {\n                            deviceType.val(\"col-md-\");\n                        }\n                        getColCSS(deviceType);\n\n                        if ($(\"#viewportList\").val() == 'browser_width') {\n                            $(\"#viewportList\").val('desktop');\n                            changeViewport('desktop');\n                        }\n\n                        eastPanelShowContent(\"#column-prop\");\n\n                        event.stopPropagation();\n                    });\n\n                </script>\n            </div>\n            <div class=\"addButtons\">\n                <script>\n\n                    addCustomButton(inEditor, \"addNewColumn\", \"Add New Column\", \"\", \"\", getVar[\"boot-col\"]);\n\n                    inEditor.find(\"#addNewColumn\").click(function (event) {\n                        var elm = selectedElement();\n\n                        var cloneClass = elm.attr(\"class\").slice().split(\" \");\n                        for (var i = 0; i < internalClassValues().length; i++) {\n                            if (internalClassValues()[i] != \"\") {\n                                if ($.inArray(internalClassValues()[i], cloneClass) != -1) {\n                                    cloneClass.splice($.inArray(internalClassValues()[i], cloneClass), 1);\n                                }\n                            }\n                        }\n\n                        var newCol = elm.after('<div class=\"newStuff\"><div class=\"' + cloneClass.join(\" \") + '\"></div></div>');\n                        runUndoAddNew(false);\n                        var ifram = editFrameContent();\n                        finishNewElem(ifram, false, true);\n                        event.stopPropagation();\n                    });\n                </script>\n            </div>\n            <div class=\"whenDrag\">\n                <script>\n                    if (elmDrag.is(getVar[\"boot-col\"])) {  //draggable is a column\n\n                        if (elmDrop.is(getVar[\"boot-col\"])) {  //droppable is a column therefor make it outside\n                            isOut = true;\n                        } else if (elmDrop.is(getVar[\"boot-container\"])) {  //droppable is container therefor make it inside\n                            isOut = false;\n                        } else if (elmDrop.is(getVar[\"boot-row\"])) {  //droppable is row therefor make it inside\n                            isOut = false;\n                        }\n                    } else if (elmDrag.is(getVar[\"boot-row\"])) {  //draggable is a row\n                        if (elmDrop.is(getVar[\"boot-row\"])) {  //droppable is row therefor make it outside\n                            isOut = true;\n                        } else if (elmDrop.is(getVar[\"boot-col\"])) { //droppable is a column therefor make it inside\n                            isOut = false;\n                        }\n                    } else {\n                        if (elmDrop.is(getVar[\"boot-col\"])) { //droppable is a column outside therefor make it inside\n                            isOut = false;\n                        } else if (elmDrop.is(getVar[\"boot-row\"])) {  //droppable is a row therefor not allowed\n                            finalShow = false;\n                        } else if (elmDrop.is(getVar[\"boot-container\"])) {  //droppable is a container inside therefor not allowed\n                            if (elmDrag.is(getVar[\"boot-container\"])) {  //draggable is a container\n                                isOut = true;\n                            }\n                        }\n                    }\n                </script>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Panels\">\n            <div class=\"runOnLoad\">\n                <script>\n                    tagReName(\"Panel\", \".panel\", true);\n                    tagReName(\"Panel Title\", \".panel-title\");\n                    tagReName(\"Panel Body\", \".panel-body\");\n                    tagReName(\"Panel Footer\", \".panel-footer\");\n                    tagReName(\"Panel Heading\", \".panel-heading\");\n\n                    designSetting(\"addTextTo\", \".panel-title\");\n                    designSetting(\"notDraggable\", \".panel-collapse, .panel-footer, .panel-group .panel\");\n                    designSetting(\"notSelectable\", \".panel-body, .panel-title\");\n                </script>\n                <style>\n                    .panel-body:empty{\n                        padding-bottom: 150px;\n                    }\n                    .panel .panel-title{\n                        display: inline-block;\n                    }\n                    .panel .panel-title:empty {\n                        width: 80px;\n                        height: 20px;\n                        padding: 0px;\n                    }\n                </style>\n            </div>\n            <div class=\"requireCSS\" data-check=\".panel .panel-title\">\n                <style>\n                    .panel .panel-title{\n                        display: inline-block;\n                    }\n                </style>\n            </div>\n            <div class=\"addButtons\">\n                <script>\n                    var list = new listOption(\"panel-default,panel-primary,panel-success,panel-info,panel-warning,panel-danger\");\n                    list.hasNone = false;\n                    addListButton(inEditor, \"Type\", list, \".panel\");\n                </script>\n            </div>\n            <div class=\"component\" title=\"Default Panel\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Default_Panel.png\">\n                <div class=\"html-content\"><div class=\"panel panel-default\"><div class=\"panel-heading\"><div class=\"panel-title\">Panel heading</div></div><div class=\"panel-body\"></div></div></div>\n            </div>\n            <div class=\"component\" title=\"Open-Close Panel\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Open-Close_Panel.png\">\n                <div class=\"html-content\"><div class=\"panel-group\" role=\"tablist\"><div class=\"panel panel-default\"><div class=\"panel-heading\" role=\"tab\" id=\"collapse-panel-heading-x\"><div class=\"panel-title\"><a data-toggle=\"collapse\" href=\"#collapse-panel-x\" aria-expanded=\"true\" aria-controls=\"collapse-panel-x\">Panel heading</a></div></div><div id=\"collapse-panel-x\" class=\"panel-collapse collapse in\" role=\"tabpanel\" aria-labelledby=\"collapse-panel-heading-x\" aria-expanded=\"true\"></div></div></div></div>\n                <div class=\"afterDrop\">\n                    <script>\n\n                        //adds unique id to every open close panel\n                        var id = \"collapse-panel-heading-\";\n\n                        var i = uniqueID(id);\n\n\n                        var elm = designFrame.find(\"#\" + id + \"x\").closest(\".panel-group\");\n                        elm.find(\"#\" + id + \"x\").attr(\"id\", id + i);\n                        elm.find(\".panel-collapse\").attr(\"aria-labelledby\", id + i);\n\n                        var id2 = \"collapse-panel-\";\n                        elm.find(\"#\" + id2 + \"x\").attr(\"id\", id2 + i);\n                        var selAttr = elm.find(\"#\" + id + i).find(\"a[data-toggle='collapse']\");\n                        selAttr.attr(\"href\", \"#\" + id2 + i);\n                        selAttr.attr(\"aria-controls\", id2 + i);\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrop.hasClass(\"panel-group\")) {  //droppable is panel-group therefor make it outside\n                            isOut = true;\n                        }\n                        if (elmDrop.hasClass(\"panel-heading\")) {  //droppable is panel-heading therefor make it inside\n                            isOut = false;\n                        }\n                        if (elmDrop.hasClass(\"panel-collapse\")) {  //droppable is panel-collapse therefor make it inside\n                            isOut = false;\n                        }\n                        if (elmDrop.hasClass(\"Panel Body\")) {  //droppable is Panel Body therefor make it inside\n                            isOut = false;\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Panel with Toolbar\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Panel_with_Toolbar.png\">\n                <div class=\"html-content\"><div class=\"panel panel-default\"><div class=\"panel-heading\"><div class=\"panel-title\">Panel heading with Toolbar</div><div class=\"btn-group pull-right\" role=\"group\" aria-label=\"Toolbar\"><button class=\"btn btn-default\" type=\"button\" style=\"padding:0px 3px;\"><span class=\"glyphicon glyphicon-wrench\"></span></button><button class=\"btn btn-default\" type=\"button\" style=\"padding:0px 3px;\"><span class=\"glyphicon glyphicon-fullscreen\"></span></button><button class=\"btn btn-default\" type=\"button\" style=\"padding:0px 3px;\"><span class=\"glyphicon glyphicon-remove\"></span></button></div></div><div class=\"panel-body\"></div></div></div>\n            </div>\n            <div class=\"component\" title=\"Panel with Heading-Footer\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Panel_with_Heading-Footer.png\">\n                <div class=\"html-content\"><div class=\"panel panel-default\"><div class=\"panel-heading\"><div class=\"panel-title\">Panel heading</div></div><div class=\"panel-body\"></div><div class=\"panel-footer\"><div class=\"panel-title\">Panel footer</div></div></div></div>\n            </div>\n            <div class=\"component\" title=\"Panel with Footer\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Panel_with_Footer.png\">\n                <div class=\"html-content\"><div class=\"panel panel-default\"><div class=\"panel-body\"></div><div class=\"panel-footer\"><div class=\"panel-title\">Panel footer</div></div></div></div>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Navigation Components\">\n            <div class=\"component divider\" title=\"Navigation Bars\"></div>\n            <div class=\"component-group\">\n                <div class=\"component\" title=\"Navigation Bar\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Navigation_Bar.png\">\n                    <div class=\"html-content\"><nav class=\"navbar navbar-default\"><div class=\"container\"><div class=\"navbar-header\"><button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-navbar-collapse-x\"><span class=\"sr-only\">Toggle navigation</span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span></button><a class=\"navbar-brand\" href=\"#\">Brand</a></div><div class=\"collapse navbar-collapse\" id=\"bs-navbar-collapse-x\"><ul class=\"nav navbar-nav navbar-left\"><li><a href=\"#\">Link</a></li><li><a href=\"#\">Link</a></li><li class=\"dropdown\"><a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\">Dropdown <span class=\"caret\"></span></a><ul class=\"dropdown-menu\" role=\"menu\"><li><a href=\"#\">Action</a></li><li><a href=\"#\">Another action</a></li><li><a href=\"#\">Something else here</a></li><li class=\"divider\"></li><li><a href=\"#\">Separated link</a></li><li class=\"divider\"></li><li><a href=\"#\">One more separated link</a></li></ul></li></ul><ul class=\"nav navbar-nav navbar-right\"><li><a href=\"#\">Link</a></li><li><a href=\"#\">Link</a></li><li class=\"dropdown\"><a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\">Dropdown <span class=\"caret\"></span></a><ul class=\"dropdown-menu\" role=\"menu\"><li><a href=\"#\">Action</a></li><li><a href=\"#\">Another action</a></li><li><a href=\"#\">Something else here</a></li><li class=\"divider\"></li><li><a href=\"#\">Separated link</a></li><li class=\"divider\"></li><li><a href=\"#\">One more separated link</a></li></ul></li></ul></div></div></nav></div>\n                    <div class=\"afterDrop\" id=\"addIDtoNavBar\">\n                        <script>\n                            //adds unique id to every new navbar\n                            var id = \"bs-navbar-collapse-\";\n                            var i = uniqueID(id);\n                            var elm = designFrame.find(\"#\" + id + \"x\");\n                            elm.attr(\"id\", id + i);\n                            elm.closest(\".navbar\").find(\".navbar-toggle.collapsed\").attr(\"data-target\", \"#\" + id + i);\n                        </script>\n                    </div>\n                    <div class=\"afterDropCopy\" title=\"stopDropdown\"></div>\n                </div>\n                <div class=\"component\" title=\"Nav Bar Form Right\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Nav_Bar_Form_Right.png\">\n                    <div class=\"html-content\"><nav class=\"navbar navbar-default\"><div class=\"container\"><div class=\"navbar-header\"><button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-navbar-collapse-x\"><span class=\"sr-only\">Toggle navigation</span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span></button><a class=\"navbar-brand\" href=\"#\">Brand</a></div><div class=\"collapse navbar-collapse\" id=\"bs-navbar-collapse-x\"><ul class=\"nav navbar-nav navbar-left\"><li><a href=\"#\">Link</a></li><li><a href=\"#\">Link</a></li><li class=\"dropdown\"><a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\">Dropdown <span class=\"caret\"></span></a><ul class=\"dropdown-menu\" role=\"menu\"><li><a href=\"#\">Action</a></li><li><a href=\"#\">Another action</a></li><li><a href=\"#\">Something else here</a></li><li class=\"divider\"></li><li><a href=\"#\">Separated link</a></li><li class=\"divider\"></li><li><a href=\"#\">One more separated link</a></li></ul></li></ul><form class=\"navbar-form navbar-right\" role=\"search\"><div class=\"form-group\"><input type=\"text\" class=\"form-control\" placeholder=\"Input\"></div><button type=\"submit\" class=\"btn btn-default\">Button</button></form></div></div></nav></div>\n                    <div class=\"afterDropCopy\" title=\"addIDtoNavBar\"></div>\n                    <div class=\"afterDropCopy\" title=\"stopDropdown\"></div>\n                </div>\n                <div class=\"component\" title=\"Nav Bar Form Left\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Nav_Bar_Form_Left.png\">\n                    <div class=\"html-content\"><nav class=\"navbar navbar-default\"><div class=\"container\"><div class=\"navbar-header\"><button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-navbar-collapse-x\"><span class=\"sr-only\">Toggle navigation</span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span><span class=\"icon-bar\"></span></button><a class=\"navbar-brand\" href=\"#\">Brand</a></div><div class=\"collapse navbar-collapse\" id=\"bs-navbar-collapse-x\"><form class=\"navbar-form navbar-left\" role=\"search\"><div class=\"form-group\"><input type=\"text\" class=\"form-control\" placeholder=\"Input\"></div><button type=\"submit\" class=\"btn btn-default\">Button</button></form><ul class=\"nav navbar-nav navbar-right\"><li><a href=\"#\">Link</a></li><li><a href=\"#\">Link</a></li><li class=\"dropdown\"><a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" role=\"button\" aria-expanded=\"false\">Dropdown <span class=\"caret\"></span></a><ul class=\"dropdown-menu\" role=\"menu\"><li><a href=\"#\">Action</a></li><li><a href=\"#\">Another action</a></li><li><a href=\"#\">Something else here</a></li><li class=\"divider\"></li><li><a href=\"#\">Separated link</a></li><li class=\"divider\"></li><li><a href=\"#\">One more separated link</a></li></ul></li></ul></div></div></nav></div>\n                    <div class=\"afterDropCopy\" title=\"addIDtoNavBar\"></div>\n                    <div class=\"afterDropCopy\" title=\"stopDropdown\"></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        designSetting(\"dontAddTextTo\", \".navbar-toggle\");\n                        tagReName(\"Brand\", \".navbar-brand\");\n                        tagReName(\"Button Group\", \".navbar-nav\");\n                        designSetting(\"unTouchElement\", \".navbar .container, .navbar .container-fluid, .collapse.navbar-collapse, .navbar-header, .navbar-toggle .icon-bar, .navbar-nav li\");\n                        designSetting(\"notDraggable\", \".navbar .navbar-nav li a, .navbar .navbar-toggle, .navbar .navbar-brand, .navbar .navbar-nav\");\n                        designSetting(\"noCopy\", \".navbar, .navbar-toggle\");\n                        designSetting(\"notContentEditable\", \".navbar-nav li\");\n                    </script>\n                </div>\n                <div class=\"cleanUpBeforePublish\">\n                    <script>\n                        pageClone.find(\".navbar-collapse.collapse\").each(function () {\n                            $(this).removeAttr(\"style\");\n                        });\n                    </script>\n                </div>\n                <div class=\"addJStoFinal\" data-check=\".navbar-fixed-top, .navbar-fixed-bottom, .navbar-static-top\">\n                    <script>\n                        $(function () {\n                            function scrollToPos(elm, offSets) {\n                                var link = elm.attr('href');\n                                if (link) {\n                                    if ($(link).length > 0) {\n                                        var p = $(link).offset().top - offSets;\n                                        $('body,html').animate({scrollTop: p}, 700);\n                                    }\n                                }\n                            }\n                            if ($(\".navbar-fixed-top\").length > 0) {\n                                var h = $(\".navbar-fixed-top\").outerHeight(true);\n                                $('body').css(\"padding-top\", h);\n                                $('body').scrollspy({target: '.navbar-fixed-top', offset: h});\n                                $('.navbar-fixed-top .navbar-nav li>a, .navbar-fixed-top .btn').click(function (e) {\n                                    if ($(this).attr(\"href\").substring(0,1) == \"#\") {\n                                        e.preventDefault();\n                                        scrollToPos($(this), h);\n                                    }\n                                });\n                            } else if ($(\".navbar-fixed-bottom\").length > 0) {\n                                var h = $(\".navbar-fixed-bottom\").outerHeight(true);\n                                $('body').css(\"padding-bottom\", h);\n                                $('body').scrollspy({target: '.navbar-fixed-bottom'});\n                                $('.navbar-fixed-bottom .navbar-nav li>a, .navbar-fixed-bottom .btn').click(function (e) {\n                                    if ($(this).attr(\"href\").substring(0,1) == \"#\") {\n                                        e.preventDefault();\n                                        scrollToPos($(this), 0);\n                                    }\n                                });\n                            } else if ($(\".navbar-static-top\").length > 0) {\n                                $('.navbar-static-top .navbar-nav li>a, .navbar-static-top .btn').click(function (e) {\n                                    if ($(this).attr(\"href\").substring(0,1) == \"#\") {\n                                        e.preventDefault();\n                                        scrollToPos($(this), 0);\n                                    }\n                                });\n                            }\n                        });\n\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"navbar-default,navbar-inverse\");\n                        addListButton(inEditor, \"Style\", list, \".navbar\");\n\n                        var list = new listOption(\"navbar-fixed-top,navbar-fixed-bottom,navbar-static-top\");\n                        list.altCaption = {\"navbar-fixed-top\": \"fixed top\", \"navbar-fixed-bottom\": \"fixed bottom\", \"navbar-static-top\": \"static top\"};\n                        addListButton(inEditor, \"Position\", list, \".navbar\");\n\n                        var list = new listOption(\"navbar-left,navbar-right\");\n                        addListButton(inEditor, \"Left/Right\", list, \".navbar-nav, .navbar-form\");\n                    </script>\n                </div>\n                <div class=\"eventSnippet\">\n                    <script>\n                        eventSnippet['bootstrapScrollspy'] = '$(\"body\").scrollspy({\\n        target: \"?????\"\\n    });';\n                        eventSnippet['bootstrapScrollspyCheck'] = '$(\"body\").scrollspy(';\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n\n                        addCustomButton(inEditor, \"bootstrapScrollspySetup\", \"Scrollspy Setup\", \"\", \"\", \".navbar\", \"\", \"#2196f3\");\n                        inEditor.find(\"#bootstrapScrollspySetup\").click(function (event) {\n\n                            var elm = selectedElement();\n\n                            if (elm.hasClass(\"navbar-fixed-top\")){\n\n                                if (attrExist(elm, \"id\") != \"\") {\n                                    var qry = \"#\" + elm.attr(\"id\");\n                                }else{\n                                    var qry = \".navbar\";\n                                }\n\n                                goToSourceCode();\n                                handleEvent({\n                                    useSnippet:'bootstrapScrollspy',\n                                    snippetParameters: [qry]\n                                });\n                            }else{\n                                alert(\"Before you setup Scrollspy you must Fix the Navigation Bar to the Top of the Page!\");\n                                inEditor.find(\".ag-button[title='Position:']:visible\").click();\n                            }\n                            event.stopPropagation();\n                        });\n\n                    </script>\n                </div>\n                <div class=\"beforeCopy\">\n                    <script>\n                        if (elm.parent().parent().hasClass(\"navbar-nav\")) {\n                            if (elm.closest(\"li\").length > 0) {\n                                elm = elm.closest(\"li\");\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrop.hasClass(\"navbar\")) { //is drop elem a navbar\n                            isOut = true;\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component divider\" title=\"Navs\"></div>\n            <div class=\"component-group\" title=\"Navs\">\n                <div class=\"component\" title=\"Navigation Pills\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Navigation_Pills.png\">\n                    <div class=\"html-content\"><ul class=\"nav nav-pills\"><li role=presentation class=active><a href=#>Home</a></li><li role=presentation><a href=#>Profile</a></li><li role=presentation><a href=#>Messages</a></li></ul></div>\n                </div>\n                <div class=\"component\" title=\"Navigation Stacked\" data-alias=\"side\"  data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Navigation_Stacked.png\">\n                    <div class=\"html-content\"><ul class=\"nav nav-pills nav-stacked\"><li role=presentation class=active><a href=#>Home</a></li><li role=presentation><a href=#>Profile</a></li><li role=presentation><a href=#>Messages</a></li></ul></div>\n                </div>\n                <div class=\"component\" title=\"Navigation Tabs\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Navigation_Tabs.png\">\n                    <div class=\"html-content\"><ul class=\"nav nav-tabs\"><li role=presentation class=active><a href=#>Home</a></li><li role=presentation><a href=#>Profile</a></li><li role=presentation><a href=#>Messages</a></li></ul></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Navs\", \"ul.nav\");\n                        designSetting(\"notSelectable\", \"ul.nav > li\");\n                        designSetting(\"notDraggable\", \"ul.nav > li > a\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"addDropdownToNavs\", \"New Dropdown\", \"\", \"\", \"ul.nav > li > a\", \"[data-toggle='tab']\");\n\n                        inEditor.find(\"#addDropdownToNavs\").click(function (event) {\n                            var elm = selectedElement();\n                            elm.closest(\"li\").after('<div class=\"newStuff\"><li role=\"presentation\" class=\"dropdown\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown <span class=\"caret\"></span></a><ul class=\"dropdown-menu\" role=\"menu\"><li><a href=\"#\">Action</a></li><li><a href=\"#\">Another action</a></li><li><a href=\"#\">Something else here</a></li><li class=\"divider\"></li><li><a href=\"#\">Separated link</a></li></ul></li></div>');\n\n                            runUndoAddNew(false);\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, true, true);\n\n                            //stop new Dropdown from closing\n                            designWindow().stopDropdown();\n\n                            setTimeout(function () {\n                                focusElement(selectedElement().children(\"a.dropdown-toggle\"));\n                            }, 100);\n\n                            event.stopPropagation();\n                        });                                                                  \n\n                        addClassButton(inEditor, \"Active\", \"active\", \"ul.nav > li > a\", \"[data-toggle='tab']\", 'selectedElement().closest(\"li\")');\n                        addClassButton(inEditor, \"Disable\", \"disabled\", \"ul.nav > li > a\", \"\", 'selectedElement().closest(\"li\")');\n                        addClassButton(inEditor, \"Justified\", \"nav-justified\", \"ul.nav\", \".nav-stacked\");\n\n                    </script>\n                </div>\n                <div class=\"beforeCopy\">\n                    <script>\n                        if (elm.parent().is('li')) {\n                            if (elm.parent().parent().is('ul.nav')) {\n                                if (attrExist(elm.parent().parent(), \"role\") == \"\"){\n                                    elm = elm.parent();\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Form Controls (Basic)\">\n            <div class=\"component divider\" title=\"Form Holders\"></div>\n            <div class=\"component-group\" title=\"Form Types\">\n                <div class=\"component\" title=\"Form (Basic)\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Form_Basic.png\">\n                    <div class=\"html-content\"><form><div class=\"form-group\"><label class=\"control-label\">Control Label</label><div class=\"control\"></div><span class=\"help-block\">help</span></div><div class=\"form-group\"><label class=\"control-label\">Control Label</label><div class=\"control\"></div><span class=\"help-block\">help</span></div><div class=\"form-group\"><label class=\"control-label\">Control Label</label><div class=\"control\"></div><span class=\"help-block\">help</span></div></form></div>\n                </div>\n                <div class=\"component\" title=\"Form (Inline)\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Form_Inline.png\">\n                    <div class=\"html-content\"><form class=\"form-inline\"><div class=\"form-group\"><label class=\"control-label\">Control Label</label><div class=\"control\"></div><span class=\"help-block\">help</span></div><div class=\"form-group\"><label class=\"control-label\">Control Label</label><div class=\"control\"></div><span class=\"help-block\">help</span></div><div class=\"form-group\"><label class=\"control-label\">Control Label</label><div class=\"control\"></div><span class=\"help-block\">help</span></div></form></div>\n                    <div class=\"requireCSS\" data-check=\".form-inline .form-group\">\n                        <style>\n                            @media (min-width: 768px) {\n                                .form-inline .form-group {\n                                    vertical-align: top;\n                                }\n                            }\n                            .form-inline .control input,\n                            .form-inline .control .btn,\n                            .form-inline .control label{\n                                display: block !important;\n                            }\n                            .form-inline > .form-group{\n                                margin-right:3px;  \n                            }\n                        </style>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Form Advanced\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Form_Advanced.png\">\n                    <div class=\"html-content\"><form class=\"form-horizontal\"><div class=\"form-group\"><label class=\"col-sm-4 control-label col-md-3\">Control Label</label><div class=\"col-sm-3\"><div class=\"control\"></div><span class=\"help-block\">help</span></div><div class=\"col-sm-4\"><div class=\"control\"></div><span class=\"help-block\">help</span></div></div><div class=\"form-group\"><label class=\"col-sm-4 control-label col-md-3\">Control Label</label><div class=\"col-sm-7\"><div class=\"control\"></div><span class=\"help-block\">help</span></div></div></form></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Help Text\", \".help-block\");\n                        tagReName(\"Form Group\", \".form-group\");\n                        designSetting(\"notSelectable\", \".form-group .control\");\n                        designSetting(\"notDraggable\", \".form-group > div, .form-group > label, .form-group .control, .form-group .help-block\");\n                        contentEditableButNoToolbar(\".form-group > label\");\n                    </script>\n                    <style>\n                        form:empty{\n                            padding-bottom: 150px;\n                        }\n                        .form-group:empty:before  {\n                            content: \"form-group\";\n                        }\n\n                        .help-block:empty:before  {\n                            content: \"help\";\n                            color: #C7C7C7;\n                            padding-left: 5px;\n                            padding-right: 5px;\n                            font-size: 12px;\n                            font-weight: bold;\n                        }\n                        .form-group .control:empty:before  {\n                            content: \"Add Control Here!\";\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"form-group-lg,form-group-sm\");\n                        list.altCaption = {\"form-group-lg\": \"Large\", \"form-group-sm\": \"Small\"};\n                        addListButton(inEditor, \"Control Size\", list, \"form\");\n\n                        addCustomButton(inEditor, \"labelFor\", \"Label For...\", \"\", \"\", \".control-label\", \"\", \"#2196f3\");\n                        showIDlist(inEditor, \"labelFor\", \"Form Controls\", \"*[id]\", \"for\", \"\");\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrag.hasClass(\"form-group\")) { //draggable is form-group\n\n                            if (dropTag == \"form\") { //droppable is form\n                                isOut = false; //therfore put it inside\n                            } else if (elmDrop.hasClass(\"form-group\")) { //droppable is form-group\n                                isOut = true; //therfore put it outside\n                            } else {\n                                notAllowedMessage = \"Must be placed inside a Form!\";\n                                finalShow = false; //don't drop\n                            }\n                        }\n\n\n                        if (elmDrop.hasClass(\"control\")) { //droppable is form-group .control\n                            isOut = false;\n                        }\n                        if (elmDrop.hasClass(\"help-block\")) { //droppable is help text\n                            finalShow = false;\n                        }\n\n                    </script>\n                </div>\n            </div>\n            <div class=\"component divider\" title=\"Form Controls\"></div>\n            <div class=\"component\" title=\"Button\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Button.png\">\n                <div class=\"html-content\"><button type=\"button\" class=\"btn btn-default\">Button</button></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Button\", \".btn\");\n                        designSetting(\"addIDtoButton\", \".btn\");\n                    </script>\n                    <style>\n                        .btn.disabled, .btn[disabled], fieldset[disabled] .btn {\n                            pointer-events: auto !important;\n                            cursor: pointer;\n                        }\n                    </style>  \n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"btn-default,btn-primary,btn-success,btn-info,btn-warning,btn-danger,btn-link\");\n                        list.hasNone = false;\n                        addListButton(inEditor, \"Type\", list, \".btn\");\n\n                        var list = new listOption(\"btn-lg,btn-sm,btn-xs\");\n                        list.altCaption = {\"btn-lg\": \"Large\", \"btn-sm\": \"Small\", \"btn-xs\": \"Extra Small\"};\n                        addListButton(inEditor, \"Sizing\", list, \".btn\");\n\n                        addClassButton(inEditor, \"Disabled\", \"disabled\", \".btn\");\n                        addClassButton(inEditor, \"Block\", \"btn-block\", \".btn\");\n\n                    </script>\n                </div>\n                <div class=\"onDoubleClickHandle\">\n                    <script>\n                        if (eventHandleFile.length > 0){\n                            //double click <a class=\"btn\"> and go into code for click event\n                            if (tag == \"a\") {\n                                if (ths.hasClass(\"btn\") == true){\n                                    if (attributeExist(dbClickItem, \"id\") == true){\n                                        goToSourceCode();\n                                        var id = dbClickItem.attr(\"id\");\n                                        handleEvent({\n                                            useSnippet:'jQueryEvent',\n                                            snippetParameters: [\"#\" + id,\"click\"]\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Common Controls\">\n                <div class=\"component\" title=\"Text Input, Password, Number...\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Text_Input__Password__Number___.png\">\n                    <div class=\"html-content\"><input type=\"text\" placeholder=\"placeholder\" class=\"form-control\"></div>\n                </div>\n                <div class=\"component\" title=\"Text Area\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Text_Area.png\">\n                    <div class=\"html-content\"><textarea class=\"form-control\" rows=\"3\"></textarea></div>\n                </div>\n                <div class=\"component\" title=\"Drop Down List\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Drop_Down_List.png\">\n                    <div class=\"html-content\"><select class=\"form-control\"><option value=\"1\">1</option><option value=\"2\">2</option><option value=\"3\">3</option><option value=\"4\">4</option><option value=\"5\">5</option></select></div>\n                </div>\n                <div class=\"component\" title=\"Multiple List\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Multiple_List.png\">\n                    <div class=\"html-content\"><select multiple=\"multiple\" class=\"form-control\"><option value=\"1\">1</option><option value=\"2\">2</option><option value=\"3\">3</option><option value=\"4\">4</option><option value=\"5\">5</option></select></div>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"input-lg,input-sm\");\n                        list.altCaption = {\"input-lg\": \"Large\", \"input-sm\": \"Small\"};\n                        addListButton(inEditor, \"Size\", list, \"input, textarea, select\", \"input[type='radio'], input[type='checkbox']\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Checkboxes\">\n                <div class=\"component\" title=\"Inline Checkboxes\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Inline_Checkboxes.png\">\n                    <div class=\"html-content\"><label class=\"checkbox-inline\"><input type=\"checkbox\" value=\"\"><span class=\"ag-text-span\"> 1 </span></label><label class=\"checkbox-inline\"><input type=\"checkbox\" value=\"\"><span class=\"ag-text-span\"> 2 </span></label><label class=\"checkbox-inline\"><input type=\"checkbox\" value=\"\"><span class=\"ag-text-span\"> 3 </span></label></div>\n                </div>\n                <div class=\"component\" title=\"Multiple Checkboxes\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Multiple_Checkboxes.png\">\n                    <div class=\"html-content\"><div class=\"checkbox\"><label><input type=\"checkbox\" value=\"\"><span class=\"ag-text-span\"> Option 1 </span></label></div><div class=\"checkbox\"><label><input type=\"checkbox\" value=\"\"><span class=\"ag-text-span\"> Option 2 </span></label></div><div class=\"checkbox\"><label><input type=\"checkbox\" value=\"\"><span class=\"ag-text-span\"> Option 3 </span></label></div></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Checkbox\", \".checkbox\");\n                        designSetting(\"notDraggable\", \"label input[type='checkbox']\");\n                        designSetting(\"notDraggable\", \".checkbox > label\");\n\n                    </script>\n                    <style>\n                        .checkbox-inline > input[type=\"checkbox\"], .checkbox > label > input[type=\"checkbox\"]{\n                            vertical-align: top!important;\n                        }\n                    </style>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Radios\">\n                <div class=\"component\" title=\"Inline Radios\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Inline_Radios.png\">\n                    <div class=\"html-content\"><label class=\"radio-inline\"><input type=\"radio\" name=\"radioGroup-x\" value=\"\"><span class=\"ag-text-span\"> 1 </span></label><label class=\"radio-inline\"><input type=\"radio\" name=\"radioGroup-x\" value=\"\"><span class=\"ag-text-span\"> 2 </span></label><label class=\"radio-inline\"><input type=\"radio\" name=\"radioGroup-x\" value=\"\"><span class=\"ag-text-span\"> 3 </span></label></div>\n                    <div class=\"afterDrop\" id=\"uniqueRadioGroupName\">\n                        <script>\n                            //adds unique name to every new radio group\n                            function uniqueRadioGroup(designFrame, oldName, containerName) {\n\n                                //adds unique name to every new radio group\n                                var namGen = true;\n\n                                var reNam = \"\";\n                                var elm = designFrame.find(\"input[name='\" + oldName + \"x']\");\n                                var fg = elm.closest(containerName);\n\n                                if (fg.length > 0) {\n                                    var rado = fg.find(\"input[type='radio']\");\n\n                                    if (rado.length > 0) {\n                                        var nm = attrExist(rado, \"name\");\n\n                                        if (nm != \"\") {\n                                            if (nm != (oldName + \"x\")) {\n                                                namGen = false;\n                                                reNam = nm;\n                                            }\n                                        }\n                                    }\n                                }\n\n                                if (namGen == true) {\n                                    var i = uniqueAttributeName(oldName);\n                                    reNam = oldName + i;\n                                }\n                                elm.each(function () {\n                                    $(this).attr(\"name\", reNam);\n                                });\n\n                            }\n                            uniqueRadioGroup(designFrame, \"radioGroup-\", \".form-group\");\n\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Multiple Radios\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/Multiple_Radios.png\">\n                    <div class=\"html-content\"><div class=\"radio\"><label><input type=\"radio\" name=\"radioGroup-x\" value=\"\" checked><span class=\"ag-text-span\"> Option 1 </span></label></div><div class=\"radio\"><label><input type=\"radio\" name=\"radioGroup-x\" value=\"\"><span class=\"ag-text-span\"> Option 2 </span></label></div><div class=\"radio\"><label><input type=\"radio\" name=\"radioGroup-x\" value=\"\"><span class=\"ag-text-span\"> Option 3 </span></label></div></div>\n                    <div class=\"afterDropCopy\" title=\"uniqueRadioGroupName\"></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Radio\", \".radio\");\n                        designSetting(\"notDraggable\", \"label input[type='radio']\");\n                        designSetting(\"notDraggable\", \".radio > label\");\n                    </script>\n                    <style>\n                        .radio-inline > input[type=\"radio\"], .radio > label > input[type=\"radio\"]{\n                            vertical-align: top!important;\n                        }\n                    </style>\n                </div>\n            </div>\n            <div class=\"component\" title=\"File Upload Button\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/standard/File_Upload_Button.png\">\n                <div class=\"html-content\"><input type=\"file\"></div>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Form Controls (Advanced)\">\n            <div class=\"component\" title=\"Checkbox Buttons\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Checkbox_Buttons.png\">\n                <div class=\"html-content\"><div class=\"btn-group\" data-toggle=\"buttons\"><label class=\"btn btn-default\"><input type=\"checkbox\" autocomplete=\"off\"><span class=\"ag-text-span\"> Checkbox 1 </span></label><label class=\"btn btn-default\"><input type=\"checkbox\" autocomplete=\"off\"><span class=\"ag-text-span\"> Checkbox 2 </span></label><label class=\"btn btn-default\"><input type=\"checkbox\" autocomplete=\"off\"><span class=\"ag-text-span\"> Checkbox 3 </span></label></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Button\", \"label.btn\");\n                        designSetting(\"notDraggable\", '[data-toggle=\"buttons\"] > .btn input[type=\"checkbox\"], [data-toggle=\"buttons\"] > .btn span');\n                        designSetting(\"notDroppable\", '[data-toggle=\"buttons\"] > .btn input[type=\"checkbox\"]');\n                        designSetting(\"ignoreOnOff\", '[data-toggle=\"buttons\"] > .btn input[type=\"checkbox\"]');\n                    </script>\n                    <style>\n                        [data-toggle=\"buttons\"] > .btn:hover input[type=\"checkbox\"],\n                        [data-toggle=\"buttons\"] > .btn-group > .btn:hover input[type=\"checkbox\"]{\n                            position: relative !important;\n                            clip: auto !important;\n                            pointer-events: auto !important;\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n\n                        addCustomButton(inEditor, \"onOffCheckBox\", \"On/Off\", \"\", \"\", \"[data-toggle='buttons'] > .btn input[type='checkbox']\");\n\n                        inEditor.find(\"#onOffCheckBox\").click(function (event) {\n                            var elm = selectedElement();\n                            var btn = elm.closest(\".btn\");\n                            var chk = elm.is(\":checked\");\n                            elm.prop('checked', !(chk));\n                            if (chk == false) {\n                                btn.addClass(\"active\");\n                            } else {\n                                btn.removeClass(\"active\");\n                            }\n                            undoManager.add({\n                                undo: function () {\n                                    elm.prop('checked', chk);\n                                    if (chk == true) {\n                                        btn.addClass(\"active\");\n                                    } else {\n                                        btn.removeClass(\"active\");\n                                    }\n                                    showIfHidden(btn);\n                                    resetBreadcrumbAndProps(btn, false);\n\n                                },\n                                redo: function () {\n                                    elm.prop('checked', !(chk));\n                                    if (chk == false) {\n                                        btn.addClass(\"active\");\n                                    } else {\n                                        btn.removeClass(\"active\");\n                                    }\n                                    showIfHidden(btn);\n                                    resetBreadcrumbAndProps(btn, false);\n\n                                }\n                            });\n\n                            undoRedoStatus();\n\n                            event.stopPropagation();\n                        });\n\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Radio Buttons\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Radio_Buttons.png\">\n                <div class=\"html-content\"><div class=\"btn-group ag-radio-button\" data-toggle=\"buttons\"><label class=\"btn btn-default\"><input type=\"radio\" name=\"radioGroup-x\" value=\"\" autocomplete=\"off\"><span class=\"ag-text-span\"> Option 1 </span></label><label class=\"btn btn-default\"><input type=\"radio\" name=\"radioGroup-x\" value=\"\" autocomplete=\"off\"><span class=\"ag-text-span\"> Option 2 </span></label><label class=\"btn btn-default\"><input type=\"radio\" name=\"radioGroup-x\" value=\"\" autocomplete=\"off\"><span class=\"ag-text-span\"> Option 3 </span></label></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        designSetting(\"notDraggable\", '[data-toggle=\"buttons\"] > .btn input[type=\"radio\"]');\n                        designSetting(\"notDroppable\", '[data-toggle=\"buttons\"] > .btn input[type=\"radio\"]');\n                        designSetting(\"ignoreOnOff\", '[data-toggle=\"buttons\"] > .btn input[type=\"radio\"]');\n                        hideClassFromPropInspector(\"ag-radio-button\", true);\n                        designSetting(\"noCopy\", \".ag-radio-button > label.btn.active\");\n                        designSetting(\"noCopy\", \".ag-radio-button input[type='radio']\");\n                        designSetting(\"noRemove\", \".ag-radio-button input[type='radio']\");\n                    </script>\n                    <style>\n                        [data-toggle=\"buttons\"] > .btn:hover input[type=\"radio\"],\n                        [data-toggle=\"buttons\"] > .btn-group > .btn:hover input[type=\"radio\"]{\n                            position: relative !important;\n                            clip: auto !important;\n                            pointer-events: auto !important;\n                        }\n                    </style>\n                </div>\n                <div class=\"afterDropCopy\" title=\"uniqueRadioGroupName\"></div>\n                <div class=\"addButtons\">\n                    <script>\n\n                        addCustomButton(inEditor, \"onOffRadio\", \"On/Off\", \"\", \"\", \"[data-toggle='buttons'] > .btn input[type='radio']\");\n\n                        inEditor.find(\"#onOffRadio\").click(function (event) {\n                            var elm = selectedElement();\n\n                            var chk = elm.is(\":checked\");\n                            var btn = elm.closest(\".btn\");\n\n                            var nam = attrExist(elm, \"name\");\n\n                            var prevRadio = false;\n\n                            if (chk == false) {\n                                if (nam != \"\") {\n                                    prevRadio = editFrameContent().find(\"input[type='radio'][name='\" + nam + \"']:checked\");\n                                    if (prevRadio.length == 0) {\n                                        prevRadio = false;\n                                    }\n                                }\n                            }\n\n\n                            elm.prop('checked', !(chk));\n                            elm.closest('[data-toggle=\"buttons\"]').find('.active').removeClass('active');\n                            if (chk == false) {\n                                btn.addClass(\"active\");\n                            } else {\n                                btn.removeClass(\"active\");\n                            }\n\n                            undoManager.add({\n                                undo: function () {\n                                    if (prevRadio === false) {\n                                        elm.prop('checked', chk);\n                                        elm.closest('[data-toggle=\"buttons\"]').find('.active').removeClass('active');\n                                        if (chk == true) {\n                                            btn.addClass(\"active\");\n                                        } else {\n                                            btn.removeClass(\"active\");\n                                        }\n                                        showIfHidden(btn);\n                                        resetBreadcrumbAndProps(btn, false);\n                                    } else {\n                                        prevRadio.prop('checked', true);\n                                        var prevRadioBtn = prevRadio.closest(\".btn\");\n                                        elm.closest('[data-toggle=\"buttons\"]').find('.active').removeClass('active');\n                                        if (chk == false) {\n                                            prevRadioBtn.addClass(\"active\");\n                                        } else {\n                                            prevRadioBtn.removeClass(\"active\");\n                                        }\n                                        showIfHidden(prevRadioBtn);\n                                        resetBreadcrumbAndProps(prevRadioBtn, false);\n                                    }\n\n\n                                },\n                                redo: function () {\n                                    elm.prop('checked', !(chk));\n                                    elm.closest('[data-toggle=\"buttons\"]').find('.active').removeClass('active');\n                                    if (chk == false) {\n                                        btn.addClass(\"active\");\n                                    } else {\n                                        btn.removeClass(\"active\");\n                                    }\n                                    showIfHidden(btn);\n                                    resetBreadcrumbAndProps(btn, false);\n\n                                }\n                            });\n\n                            undoRedoStatus();\n\n                            event.stopPropagation();\n                        });\n\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Drop-down Menu Buttons\">\n                <div class=\"component\" title=\"Drop-down Menu Button\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Drop-down_menu_button.png\">\n                    <div class=\"html-content\"><div class=\"btn-group\"><a href=\"#\" data-target=\"#\" role=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Action <span class=\"caret\"></span></a><ul class=\"dropdown-menu\" role=\"menu\"><li><a href=\"#\">Action</a></li><li><a href=\"#\">Another action</a></li><li><a href=\"#\">Something else here</a></li><li class=\"divider\"></li><li><a href=\"#\">Separated link</a></li></ul></div></div>\n                    <div class=\"afterDrop\" id=\"stopDropdown\">\n                        <script>\n                            //stop new Dropdown from closing\n                            designWindow().stopDropdown();\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Split Button Dropdowns\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Split_button_dropdowns.png\">\n                    <div class=\"html-content\"><div class=\"btn-group\"><a class=\"btn btn-default\" href=\"#\" role=\"button\">Action</a><a href=\"#\" data-target=\"#\" role=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><span class=\"caret\"></span><span class=\"sr-only\">Toggle Dropdown</span></a><ul class=\"dropdown-menu\" role=\"menu\"><li><a href=\"#\">Action</a></li><li><a href=\"#\">Another action</a></li><li><a href=\"#\">Something else here</a></li><li class=\"divider\"></li><li><a href=\"#\">Separated link</a></li></ul></div></div>\n                    <div class=\"afterDropCopy\" title=\"stopDropdown\"></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Divider\", \".divider\");\n                        designSetting(\"notDraggable\", \".dropdown-menu li, .dropdown-menu li a\");\n                        designSetting(\"notDroppable\", \".dropdown-menu li\");\n                        designSetting(\"unTouchElement\", \".dropdown-menu\");\n                        designSetting(\"isAbsolutePosition\", \".dropdown-menu\");\n                        designSetting(\"notContentEditable\", \".dropdown-menu li\");\n                    </script>\n                    <style>\n                        .dropdown-menu .divider{\n                            height: 20px;\n                            margin: 0px;\n                            background-color: transparent;\n                        }\n                        .dropdown-menu .divider:before{\n                            border-top: 1px solid #e5e5e5;\n                            display: block;\n                            height: 1px;\n                            content: \" \";\n                            width: 100%;\n                            margin-top: 9px;\n                            position: relative !important;\n                            top:auto !important;\n\n\n                        }\n                        .dropdown-menu .divider:empty{\n                            padding: 0px !important;\n                            background:none !important;\n                            outline: none;\n                            -webkit-box-shadow: none !important;\n                            -moz-box-shadow: none !important;\n                            box-shadow: none !important; \n                        }\n\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addClassButton(inEditor, \"Drop UP\", \"dropup\", \".dropdown-toggle\", \"\", 'selectedElement().parent()'); \n                        addClassButton(inEditor, \"Menu Right\", \"dropdown-menu-right\", \".dropdown-toggle\", \"\", 'selectedElement().parent().find(\".dropdown-menu\")'); \n                        addClassButton(inEditor, \"Disabled\", \"disabled\", \".dropdown-menu  > li > a\", \"\", 'selectedElement().closest(\"li\")'); \n\n                        addCustomButton(inEditor, \"addDropdownDivider\", \"Add Divider\", \"\", \"\", \".dropdown-menu li a\");\n\n                        inEditor.find(\"#addDropdownDivider\").click(function (event) {\n                            var elm = selectedElement();\n                            elm.closest(\"li\").after('<div class=\"newStuff\"><li class=\"divider\"></li></div>');\n                            runUndoAddNew(false);\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, false, true);\n                            event.stopPropagation();\n                        });\n\n                        addCustomButton(inEditor, \"addDropdownHeader\", \"Add Header\", \"\", \"\", \".dropdown-menu a\");\n\n                        inEditor.find(\"#addDropdownHeader\").click(function (event) {\n                            var elm = selectedElement();\n                            elm.closest(\"li\").after('<div class=\"newStuff\"><li class=\"dropdown-header\">Dropdown header</li></div>');\n                            runUndoAddNew(false);\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, false, true);\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n                <div class=\"beforeCopy\">\n                    <script>\n                        if (elm.parent().parent().hasClass(\"dropdown-menu\")) {\n                            if (elm.closest(\"li\").length > 0) {\n                                elm = elm.closest(\"li\");\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (dropTag == \"a\") { //droppable is a link\n                            if (elmDrop.closest(\".dropdown-menu\").length > 0) { //the link is dropdown item link\n                                if (dragTag == \"span\"){\n                                    isOut = false;//therefore put is inside the link\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"beforeRemove\">\n                    <script>\n                        if (elm.attr(\"data-toggle\") == \"dropdown\") { //the item to be removed is a drop down button\n                            if (elm.parent().is(\".btn-group, .dropdown\")) { //check to see if it is defo a drop down\n                                elm = elm.parent();//if it is then remove parent instead button\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"beforeUnHide\">\n                    <script>\n\n                        //close all dropdowns before executing undo\n                        var allDrops = editFrameContent().find(\".dropdown-menu[role='menu']\");\n\n                        allDrops.each(function () {\n                            var allParnt = $(this).closest(\".btn-group, .dropdown\");\n                            if (allParnt.length > 0) {\n                                allParnt.removeClass(\"open\");\n                                allParnt.children(\"a\").attr(\"aria-expanded\", \"false\");\n                            }\n                        });\n                    </script>\n                </div>\n                <div class=\"afterUnHide\">\n                    <script>\n                        var dropMenu = visibleElm.closest(\".dropdown-menu[role='menu']\");\n                        if (dropMenu.length > 0) {\n                            var dropParnt = dropMenu.closest(\".btn-group, .dropdown\");\n                            if (dropParnt.length > 0) {\n                                dropParnt.addClass(\"open\");\n                                dropParnt.children(\"a\").attr(\"aria-expanded\", \"true\");\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Button group types\">\n                <div class=\"component\" title=\"Button Toolbar\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Button_toolbar.png\">\n                    <div class=\"html-content\"><div class=\"btn-toolbar\" role=\"toolbar\" ><div class=\"btn-group\" role=\"group\" ><a class=\"btn btn-default\" href=\"#\" role=\"button\">Left</a><a class=\"btn btn-default\" href=\"#\" role=\"button\">Middle</a><a class=\"btn btn-default\" href=\"#\" role=\"button\">Right</a></div><div class=\"btn-group\" role=\"group\" ><a class=\"btn btn-default\" href=\"#\" role=\"button\">1</a><a class=\"btn btn-default\" href=\"#\" role=\"button\">2</a><a class=\"btn btn-default\" href=\"#\" role=\"button\">3</a></div></div></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Button Toolbar\", \".btn-toolbar\");\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Button Groups\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Button_groups.png\">\n                    <div class=\"html-content\"><div class=\"btn-group\" role=\"group\" ><a class=\"btn btn-default\" href=\"#\" role=\"button\">Left</a><a class=\"btn btn-default\" href=\"#\" role=\"button\">Middle</a><a class=\"btn btn-default\" href=\"#\" role=\"button\">Right</a></div></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Button Group\", \".btn-group\");\n                            designSetting(\"notDraggable\", \".btn-group .btn\");\n                            designSetting(\"showWhenEmpty\", \".btn-group\");\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Button Groups Vertical\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Button_groups_vertical.png\">\n                    <div class=\"html-content\"><div class=\"btn-group-vertical\" role=\"group\" aria-label=\"Vertical button group\"><a class=\"btn btn-default\" href=\"#\" role=\"button\"><span class=\"glyphicon glyphicon-home\"></span> Button 1</a><a class=\"btn btn-default\" href=\"#\" role=\"button\"><span class=\"glyphicon glyphicon-pencil\"></span> Button 2</a><a class=\"btn btn-default\" href=\"#\" role=\"button\"><span class=\"glyphicon glyphicon-question-sign\"></span> Button 3</a></div></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Button Group Vertical\", \".btn-group-vertical\");\n                            designSetting(\"notDraggable\", \".btn-group-vertical .btn\");\n                            designSetting(\"showWhenEmpty\", \".btn-group-vertical\");\n                        </script>\n                    </div>\n                </div>  \n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"btn-group-lg,btn-group-sm,btn-group-xs\");\n                        list.altCaption = {\"btn-group-lg\": \"Large\", \"btn-group-sm\": \"Small\", \"btn-group-xs\": \"Extra Small\"};\n                        addListButton(inEditor, \"Sizing\", list, \".btn-group, .btn-group-vertical\");\n\n                        addClassButton(inEditor, \"Justified\", \"btn-group-justified\", \".btn-group\");\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrag.hasClass(\"btn-toolbar\")) { //draggable is toolbar\n                            if (elmDrop.hasClass(\"btn-toolbar\")) { //droppable is toolbar\n                                isOut = true; //therfore put it outside\n                            }\n                            if (elmDrop.hasClass(\"btn-group\")) { //droppable is btn-group\n                                finalShow = false; //therfore not allowed\n                            }\n\n                            if (elmDrop.hasClass(\"btn-group-vertical\")) { //droppable is btn-group-vertical\n                                finalShow = false; //therfore not allowed\n                            }\n\n                            if (elmDrop.hasClass(\"btn\")) { //droppable is button\n                                finalShow = false; //therfore not allowed\n                            }\n                        }\n\n                        if (elmDrag.hasClass(\"btn-group\")) { //draggable is btn-group\n                            if (elmDrop.hasClass(\"btn-group\")) { //droppable is btn-group\n                                if (elmDrag.find(\"ul\").length == 0) { //so long as the draggable is not a drop down button\n                                    isOut = true; //therfore put it outside\n                                }\n                            }\n                            if (elmDrop.hasClass(\"btn\")) { //droppable is button\n                                finalShow = false; //therfore not allowed\n                            }\n                        }\n\n                        if (elmDrag.hasClass(\"btn-group-vertical\")) { //draggable is btn-group-vertical\n                            if (elmDrop.hasClass(\"btn-group-vertical\")) { //droppable is btn-group\n                                if (elmDrag.find(\"ul\").length == 0) { //so long as the draggable is not a drop down button\n                                    isOut = true; //therfore put it outside\n                                }\n                            }\n                            if (elmDrop.hasClass(\"btn\")) { //droppable is button\n                                finalShow = false; //therfore not allowed\n                            }\n                        }\n\n                    </script>  \n                </div>\n            </div>\n            <div class=\"copyComponent\" title=\"Pagination\"></div>\n            <div class=\"component\" title=\"Fix Dropdown to Textbox\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Fix_Dropdown_to_Textbox.png\">\n                <div class=\"html-content\"><div class=\"input-group\"><div class=\"input-group-btn\"><div class=\"btn-group\"><a href=\"#\" data-target=\"#\" role=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Action <span class=\"caret\"></span></a><ul class=\"dropdown-menu\" role=\"menu\"><li><a href=\"#\">Action</a></li><li><a href=\"#\">Another action</a></li><li><a href=\"#\">Something else here</a></li><li class=\"divider\"></li><li><a href=\"#\">Separated link</a></li></ul></div></div><input type=\"text\" class=\"form-control\" placeholder=\"placeholder\"><div class=\"input-group-btn\"><div class=\"btn-group\"><a href=\"#\" data-target=\"#\" role=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Action <span class=\"caret\"></span></a><ul class=\"dropdown-menu dropdown-menu-right\" role=\"menu\"><li><a href=\"#\">Action</a></li><li><a href=\"#\">Another action</a></li><li><a href=\"#\">Something else here</a></li><li class=\"divider\"></li><li><a href=\"#\">Separated link</a></li></ul></div></div></div></div>\n                <div class=\"afterDropCopy\" title=\"stopDropdown\"></div>\n                <div class=\"beforeRemove\">\n                    <script>\n                        if (elm.is(\".btn-group\")) { //the item to be removed is a dropdown button group\n                            if (elm.closest(\".input-group-btn\").length > 0) { //check to see if it is in input group\n                                elm = elm.closest(\".input-group-btn\");//if it is then remove .input-group-btn instead of the button\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"copyComponent\" title=\"Pager\"></div>\n            <div class=\"component\" title=\"Fix Button to Textbox\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Fix_Button_to_Textbox.png\">\n                <div class=\"html-content\"><div class=\"input-group\"><div class=\"input-group-btn\"><a class=\"btn btn-default\" href=\"#\" role=\"button\">Button</a></div><input type=\"text\" class=\"form-control\" placeholder=\"placeholder\"><div class=\"input-group-btn\"><a class=\"btn btn-default\" href=\"#\" role=\"button\">Button</a></div></div></div>  \n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Input Group Button\", \".input-group-btn\");\n                        designSetting(\"notDraggable\", \".input-group-btn\");\n                        designSetting(\"notDraggable\", \".input-group-btn .btn\");\n                        designSetting(\"showWhenEmpty\", \".input-group-btn\");\n                    </script>\n                    <style>\n                        .input-group-btn:empty{\n                            width: 70px;\n                        }\n                        .input-group-btn:empty:before{\n                            content: \"add button\";\n                        }\n                    </style>\n                </div>\n                <div class=\"beforeRemove\">\n                    <script>\n                        if (elm.is(\".btn\")) { //the item to be removed is a button\n                            if (elm.parent().is(\"div.input-group-btn\")) { //check to see if it is in input group\n                                elm = elm.parent(); //if it is then remove .input-group-btn instead of the button\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Fix to Textbox\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Fix_to_Textbox.png\">\n                <div class=\"html-content\"><div class=\"input-group\"><span class=\"input-group-addon\">www.</span><input type=\"text\" class=\"form-control\" placeholder=\"placeholder\"><span class=\"input-group-addon\">.com</span></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Input Group\", \".input-group\");\n                        designSetting(\"notDraggable\", \".input-group-addon\");\n                        designSetting(\"notContentEditable\", \"span.input-group-addon\");\n                        designSetting(\"addTextTo\", \"span.input-group-addon\");\n                        designSetting(\"showWhenEmpty\", \"div.input-group\");\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Fix Checkbox to Textbox\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Fix_Checkbox_to_Textbox.png\">\n                <div class=\"html-content\"><div class=\"input-group\"><span class=\"input-group-addon\"><input type=\"checkbox\"></span><input type=\"text\" class=\"form-control\" placeholder=\"placeholder\"><span class=\"input-group-addon\"><input type=\"checkbox\"></span></div></div>\n            </div>\n            <div class=\"component\" title=\"Fix Radio to Textbox\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Fix_Radio_to_Textbox.png\">\n                <div class=\"html-content\"><div class=\"input-group\"><span class=\"input-group-addon\"><input type=\"radio\"></span><input type=\"text\" class=\"form-control\" placeholder=\"placeholder\"><span class=\"input-group-addon\"><input type=\"radio\"></span></div></div>\n            </div>\n        </div>\n        <div class=\"category\" title=\"Form Components\">\n            <div class=\"component\" title=\"Modals\" data-alias=\"dialog,prompts,alert,warn,notice,window\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Modals_dialog_prompts.png\">\n                <div class=\"html-content\"><div class=\"modal ag-modal-edit\" id=\"modal-x\"><div class=\"modal-dialog\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><div class=\"modal-title\"><span>Modal title</span></div></div><div class=\"modal-body\"></div><div class=\"modal-footer\"><div class=\"pull-left\"></div><div class=\"pull-right\"><a class=\"btn btn-default\" href=\"#\" role=\"button\" data-dismiss=\"modal\">Close</a><a class=\"btn btn-primary\" href=\"#\" role=\"button\">Save changes</a></div></div></div></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Modal\", \".modal\", false, \"modal\");\n                        tagReName(\"Modal Header\", \".modal-header\", false, \"modal-header\");\n                        tagReName(\"Modal Body\", \".modal-body\", false, \"modal-body\");\n                        tagReName(\"Modal Footer\", \".modal-footer\", false, \"modal-footer\");\n                        tagReName(\"Modal Title\", \".modal-title\");\n                        tagReName(\"Buttons Left\", \".modal-footer .pull-left\");\n                        tagReName(\"Buttons Right\", \".modal-footer .pull-right\");\n\n                        designSetting(\"addTextTo\", \".modal-title\");\n                        designSetting(\"unTouchElement\", \".modal-dialog, .modal-content\");\n                        designSetting(\"notSelectable\", \".modal-body, .modal-title\");\n                        designSetting(\"noCopy\", \".modal, .modal-header, .modal-footer\");\n                        designSetting(\"notDroppable\", \".modal-header\");\n\n                        hideClassFromPropInspector(\"ag-modal-edit\", true);\n                        hideClassFromPropInspector(\"modal\", false);\n                        designSetting(\"hiddenContent\", \".modal\");\n                    </script>\n                    <style>\n                        .ag-modal-edit {\n                            position: relative;\n                            top: auto;\n                            right: auto;\n                            bottom: auto;\n                            left: auto;\n                            z-index: 1;\n                            margin: 10px;\n                            opacity: 1 !important;\n                            -moz-transition:  none !important;\n                            -webkit-transition:  none !important;\n                            -o-transition: none !important;\n                            transition:  none !important;\n\n                        }\n                        .ag-modal-edit .modal-dialog{\n                            margin: 0px;\n                            -webkit-transition:  none !important;\n                            -o-transition:  none !important;\n                            transition:  none !important;\n                            -webkit-transform:  none !important;;\n                            -ms-transform:  none !important;\n                            -o-transform:  none !important;\n                            transform:  none !important;\n                        }\n                        .modal-body:empty{\n                            padding-bottom: 150px;\n                        }\n                        .modal-footer .pull-left:empty, .modal-footer .pull-right:empty{\n                            width:100px;\n                        }\n                        .modal-footer .pull-left:empty:before, .modal-footer .pull-right:empty:before{\n                            content: \"Add Buttons\";\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"openModal\", \"Open Modal\", \"\", \"\", \"a, button\", \".alert button.close, .dropdown-toggle, [data-toggle='tab'], .navbar-toggle\");\n                        showIDlist(inEditor, \"openModal\", \"Modals\", \".modal[id]\", \"data-target\", \"#\", {\"data-toggle\": \"modal\"});\n\n                        addClassButton(inEditor, \"Fade\", \"fade\", \".modal\");\n\n                        var list = new listOption(\"modal-lg,modal-sm\");\n                        list.altCaption = {\"modal-lg\": \"Large\", \"modal-sm\": \"Small\"};\n                        list.applyToFind = \".modal-dialog\";\n                        addListButton(inEditor, \"Size\", list, \".modal\");\n                    </script>\n                </div>\n                <div class=\"beforeDrop\">\n                    <script>\n                        if (dropFromOutside) {//dropped from outside\n                            if (elmDrag.hasClass(\"modal\")) {//is a modal\n                                useCustomDrop = true;\n                                selFrame.find(\"body\").append(elmDragCode);\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n\n                        if (elmDrop.is(getVar[\"modal\"])) {  //droppable is modal therefor make it inside\n                            isOut = false;\n                        } else if (elmDrop.is(\".modal-title\")) {  //droppable is modal-header therefor make it inside\n                            isOut = false;\n                        } else if (elmDrop.is(getVar[\"modal-footer\"])) {  //droppable is modal-footer therefor make it inside\n                            isOut = false;\n                        } else if (elmDrop.is(getVar[\"modal-body\"])) {  //droppable is modal-body therefor make it inside\n                            isOut = false;\n                        }\n\n                        //we don't want to drop one modal into another modal\n                        if (elmDrag.is(getVar[\"modal\"])) {  //draggable is modal\n                            if ($(\"#hideModeButton\").hasClass(\"isInHideMode\") == true) {//we are viewing content hidden mode\n                                finalShow = false;\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"afterDrop\">\n                    <script>\n                        //adds unique id to every new navbar\n                        var id = \"modal-\";\n                        var i = uniqueID(id);\n                        var elm = designFrame.find(\"#\" + id + \"x\");\n                        elm.attr(\"id\", id + i);\n\n                        goIntoHideMode(id + i, true);\n\n                        createHiddenControl(id + i);\n\n                    </script>\n                </div>\n                <div class=\"beforeRemove\">\n                    <script>\n                        if (elm.hasClass(\"modal\")) {// collapsible button therefore any hidden content needs to be made vivible\n                            deleteHiddenContNode(\"vis-content-\" + elm.attr(\"id\"));\n                            selectHiddenControl(\"parentPage\");\n                            if (redoRemove == true) {//has the redo to remove button been pressed\n                                if ($(\"#hideModeButton\").hasClass(\"isInHideMode\") == false) { // we are not in content hidden mode therefore we do not know if the item has been removed when the redo was pressed\n                                    undoRedoCaption(\"Hidden Content Removed (\" + elm.attr(\"id\") + \")\");\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Alerts\">\n                <div class=\"component\" title=\"Alerts (Basic)\" data-alias=\"message,notice,warn\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Alerts_Basic.png\">\n                    <div class=\"html-content\"><div class=\"alert alert-success alert-dismissible fade in\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><strong>Well done!</strong> <p>You successfully read this important alert message. </p></div></div>\n                    <div class=\"afterDrop\" id=\"alertNoClose\">\n                        <script>\n                            //stop new alert from closing\n                            designWindow().alertNoClose();\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Alerts with Controls\" data-alias=\"message,notice,warn\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Alerts_with_Controls.png\">\n                    <div class=\"html-content\"><div class=\"alert alert-danger alert-dismissible fade in\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><div class=\"ag-header h4\">Oh snap! You got an error!</div><p>Change this and that and try again. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras mattis consectetur purus sit amet fermentum.</p><a class=\"btn btn-danger\" href=\"#\" role=\"button\">Take this action</a> <a class=\"btn btn-default\" href=\"#\" role=\"button\">Or do this</a></div></div>\n                    <div class=\"afterDropCopy\" title=\"alertNoClose\"></div>\n                </div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Alert\", \".alert\");\n                        designSetting(\"unTouchElement\", \"button.close > span[aria-hidden='true']\");\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"alert-success,alert-info,alert-warning,alert-danger\");\n                        list.hasNone = false;\n                        addListButton(inEditor, \"Type\", list, \".alert\");\n                    </script>\n                </div>\n                <div class=\"contentEditableCleaner\">\n                    <script>\n                        if (contEdt.closest(\".alert\").length > 0) {\n                            contEdt.find(\"a\").addClass(\"alert-link\");\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component\" title=\"Tab Panel\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Tabs.png\">\n                <div class=\"html-content\"><div class=\"ag-tabs\" role=\"tabpanel\" id=\"tabpanel-x\"><ul class=\"nav nav-tabs\" role=\"tablist\"><li role=\"presentation\" class=\"active\"><a href=\"#tabpanel-x-tab-1\" aria-controls=\"tabpanel-x-tab-1\" role=\"tab\" data-toggle=\"tab\">Home</a></li><li role=\"presentation\"><a href=\"#tabpanel-x-tab-2\" aria-controls=\"tabpanel-x-tab-2\" role=\"tab\" data-toggle=\"tab\">Profile</a></li><li role=\"presentation\"><a href=\"#tabpanel-x-tab-3\" aria-controls=\"tabpanel-x-tab-3\" role=\"tab\" data-toggle=\"tab\">Messages</a></li></ul><div class=\"tab-content\"><div role=\"tabpanel\" class=\"tab-pane active\" id=\"tabpanel-x-tab-1\"></div><div role=\"tabpanel\" class=\"tab-pane\" id=\"tabpanel-x-tab-2\"></div><div role=\"tabpanel\" class=\"tab-pane\" id=\"tabpanel-x-tab-3\"></div></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Tab Panel\", \".ag-tabs\");\n\n                        tagReName(\"Tab\", \".ag-tabs > .nav > li > a\");\n                        designSetting(\"unTouchElement\", \".ag-tabs > .nav, .ag-tabs > .nav > li, .ag-tabs .tab-content\");\n                        designSetting(\"notSelectable\", \".ag-tabs .tab-pane\");\n                        designSetting(\"noCopy\", \".ag-tabs\");\n                        designSetting(\"noCopy\", \".ag-tabs > .nav > li > a[role='tab']\");\n\n                        designSetting(\"removeOnCopy\", \".ag-tabs\");\n                        designSetting(\"notDraggable\", \".ag-tabs > .nav > li > a, .ag-tabs .tab-pane\");\n                        designSetting(\"notContentEditable\", \".nav li\");\n                        designSetting(\"addOutline\", \"div[role='tabpanel'], .tab-content\");\n\n                        hideClassFromPropInspector(\"ag-tabs\", true);\n                    </script>\n                    <style>\n                        .tab-pane:empty{\n                            padding-bottom: 150px;\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        var list = new listOption(\"nav-tabs,nav-pills\");\n                        list.hasNone = false;\n                        list.applyToFind = \".nav\";\n                        addListButton(inEditor, \"Type\", list, \"div[role='tabpanel']\", \".panel-collapse\");\n\n                        addClassButton(inEditor, \"Justified\", \"nav-justified\", \"div[role='tabpanel']\", \".panel-collapse\", 'selectedElement().find(\".nav\")');\n                        addClassButton(inEditor, \"Stacked\", \"nav-stacked\", \"div[role='tabpanel']\", \".panel-collapse\", 'selectedElement().find(\".nav\")');\n\n                    </script>\n                </div>\n                <div class=\"addButtons\">\n                    <script>\n                        addCustomButton(inEditor, \"addNewTab\", \"Add New Tab\", \"\", \"\", \".ag-tabs > .nav > li > a[role='tab']\", \"\", \"#2196f3\");\n                        inEditor.find(\"#addNewTab\").click(function (event) {\n\n                            var elm = selectedElement();\n\n                            var tab = elm.closest(\".ag-tabs\");\n                            var tabID = tab.attr(\"id\");\n                            var tabButton = elm.parent();\n                            var tabIndex = tabButton.index();\n                            var tabPanel = tab.children(\".tab-content\").children(\".tab-pane\").eq(tabIndex);\n\n                            tabButton.parent().children(\"li\").removeClass(\"active\");\n                            tabButton.parent().children(\"li\").children(\"a[role='tab']\").removeAttr(\"aria-expanded\");\n                            tabButton.after('<div class=\"newStuff\"><li role=\"presentation\" class=\"active\"><a href=\"\" aria-controls=\"\" role=\"tab\" data-toggle=\"tab\">New Tab</a></li></div>');\n\n                            tabPanel.parent().children(\".tab-pane\").removeClass(\"active\");\n                            tabPanel.after('<div class=\"newStuff\"><div role=\"tabpanel\" class=\"tab-pane active\"></div></div>');\n\n                            runUndoAddNew(false);\n                            var ifram = editFrameContent();\n                            finishNewElem(ifram, true, false);\n\n                            tab.children(\".nav\").children(\"li\").each(function (index) {\n                                var tabBtns = $(this).children(\"a[role='tab']\");\n                                tabBtns.attr(\"href\", \"#\" + tabID + \"-tab-\" + index);\n                                tabBtns.attr(\"aria-controls\", tabID + \"-tab-\" + index);\n                            });\n                            tab.children(\".tab-content\").children(\".tab-pane\").each(function (index) {\n                                $(this).attr(\"id\", tabID + \"-tab-\" + index);\n                            });\n\n\n\n                            setTimeout(function () {\n                                focusElement(tabButton.next().children(\"a[role='tab']\"));\n                            }, 100);\n\n\n                            event.stopPropagation();\n                        });\n                    </script>\n                </div>\n                <div class=\"afterDetach\">\n                    <script>\n                        if (addToElm.is(\".ag-tabs > .nav > li\")) {\n                            var tab = addToElm.closest(\".ag-tabs\");\n                            var tabID = tab.attr(\"id\");\n                            tab.children(\".nav\").children(\"li\").each(function (index) {\n                                var tabBtns = $(this).children(\"a[role='tab']\");\n                                tabBtns.attr(\"href\", \"#\" + tabID + \"-tab-\" + index);\n                                tabBtns.attr(\"aria-controls\", tabID + \"-tab-\" + index);\n                                tabBtns.parent().removeClass(\"active\");\n                                tabBtns.removeAttr(\"aria-expanded\");\n                                if (index == 0) {\n                                    tabBtns.parent().addClass(\"active\");\n                                }\n                            });\n                            tab.children(\".tab-content\").children(\".tab-pane\").each(function (index) {\n                                $(this).attr(\"id\", tabID + \"-tab-\" + index);\n                                $(this).removeClass(\"active\");\n                                if (index == 0) {\n                                    $(this).addClass(\"active\");\n                                }\n                            });\n\n                        }\n                    </script>\n                </div>\n                <div class=\"afterAttach\">\n                    <script>\n                        if (elm.is(\".ag-tabs > .nav > li\")) {\n                            var tab = elm.closest(\".ag-tabs\");\n                            var tabID = tab.attr(\"id\");\n                            var tabIndex = elm.index();\n                            tab.children(\".nav\").children(\"li\").each(function (index) {\n                                var tabBtns = $(this).children(\"a[role='tab']\");\n                                tabBtns.attr(\"href\", \"#\" + tabID + \"-tab-\" + index);\n                                tabBtns.attr(\"aria-controls\", tabID + \"-tab-\" + index);\n                                tabBtns.parent().removeClass(\"active\");\n                                tabBtns.parent().removeClass(\"active\");\n                                if (tabIndex == index){\n                                    tabBtns.parent().addClass(\"active\");\n                                }\n                            });\n                            tab.children(\".tab-content\").children(\".tab-pane\").each(function (index) {\n                                $(this).attr(\"id\", tabID + \"-tab-\" + index);\n                                $(this).removeClass(\"active\");\n                                if (tabIndex == index){\n                                    $(this).addClass(\"active\");\n                                }\n                            });\n                        }\n                    </script>\n                </div>\n                <div class=\"onAttributeSelected\">\n                    <script>\n                        if (elm.hasClass('ag-tabs') == true) {\n                            $(\"#checkID\").prop( \"disabled\", true );\n                        }\n                    </script>\n                </div>\n                <div class=\"whenDrag\">\n                    <script>\n                        if (elmDrop.is(\".ag-tabs > .nav > li > a\")) { //is drop elem tab \n                            isOut = false;\n                        }\n                        if (elmDrop.hasClass(\"ag-tabs\")) {\n                            isOut = true;\n                        }\n                        if (elmDrop.is(\".ag-tabs > .tab-content > .tab-pane\")) {\n                            isOut = false;\n                        }\n                    </script>\n                </div>\n                <div class=\"afterDrop\">\n                    <script>\n                        //adds unique id to every new tab\n                        var id = \"tabpanel-\";\n                        var i = uniqueID(id);\n                        var elm = designFrame.find(\"#\" + id + \"x\");\n                        tabId = id + i;\n                        elm.attr(\"id\", tabId);\n                        elm.children(\".nav\").children(\"li\").each(function (index) {\n                            var tabButton = $(this).children(\"a[role='tab']\");\n                            tabButton.attr(\"href\", \"#\" + tabId + \"-tab-\" + index);\n                            tabButton.attr(\"aria-controls\", tabId + \"-tab-\" + index);\n                        });\n                        elm.children(\".tab-content\").children(\".tab-pane\").each(function (index) {\n                            $(this).attr(\"id\", tabId + \"-tab-\" + index);\n                        });\n\n                    </script>\n                </div>\n                <div class=\"beforeRemove\">\n                    <script>\n                        if (elm.is(\".ag-tabs > .nav > li[role='presentation']\")) {\n                            var cntrol = attrExist(elm.children(\"a[href]\"), \"href\");\n                            var tab = elm.closest(\".ag-tabs\");\n                            var tabpane = tab.find(cntrol);\n                            extraDetach.push(reAttachHow(tabpane));\n                            tabpane.detach();\n                        }\n                    </script>\n                </div>\n                <div class=\"afterUnHide\">\n                    <script>\n                        var tabpane = visibleElm.closest(\".tab-pane\");\n                        if (tabpane.length > 0) {\n                            if (tabpane.hasClass(\"active\") == false) {\n                                var tab = tabpane.parent().parent();\n                                if (tab.hasClass(\"ag-tabs\")) {\n                                    tab.children(\".nav\").children(\"li\").removeClass(\"active\");\n                                    tab.children(\".nav\").children(\"li\").children(\"a[role='tab']\").removeAttr(\"aria-expanded\");\n                                    tab.children(\".tab-content\").children(\".tab-pane\").removeClass(\"active\");\n\n                                    tab.children(\".nav\").children(\"li\").eq(tabpane.index()).addClass(\"active\");\n                                    tabpane.addClass(\"active\");\n                                }\n                            }\n                        }\n                    </script>\n                </div>\n                <div class=\"afterMove\">\n                    <script>\n                        if (movedElm.is(\".ag-tabs > .nav > li > a[data-toggle='tab']\")) {\n                            var tab = movedElm.closest(\".ag-tabs\");\n                            var tabPnlID = movedElm.attr(\"aria-controls\");\n                            var tabCont = tab.find(\"#\" + tabPnlID);\n\n                            if (mAfter == true) {\n                                var tNxt = tabCont.next();\n                            } else {\n                                var tNxt = tabCont.prev();\n                            }\n\n                            if (tNxt.length > 0) {\n                                if (mAfter == true) {\n                                    tNxt.after(tabCont);\n                                } else {\n                                    tNxt.before(tabCont);\n                                }\n                                var tabID = tab.attr(\"id\");\n                                tab.children(\".nav\").children(\"li\").each(function (index) {\n                                    var tabButton = $(this).children(\"a[role='tab']\");\n                                    tabButton.attr(\"href\", \"#\" + tabID + \"-tab-\" + index);\n                                    tabButton.attr(\"aria-controls\", tabID + \"-tab-\" + index);\n                                    tabButton.parent().removeClass(\"active\");\n                                    tabButton.removeAttr(\"aria-expanded\");\n                                });\n                                tab.children(\".tab-content\").children(\".tab-pane\").each(function (index) {\n                                    $(this).attr(\"id\", tabID + \"-tab-\" + index);\n                                    $(this).removeClass(\"active\");\n                                });\n                                movedElm.parent().addClass(\"active\");\n                                tabCont.addClass(\"active\");\n\n                            }\n\n                        }\n                    </script>\n                </div>\n            </div>\n            <div class=\"component-group\" title=\"Collapsibles\">\n                <div class=\"component\" title=\"Collapsible box\" data-alias=\"show,hide\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Collapsible_box.png\">\n                    <div class=\"html-content\"><a class=\"btn btn-primary\" data-toggle=\"collapse\" href=\"#collapse-basic-x\" aria-expanded=\"true\" aria-controls=\"collapse-basic-x\"> SHOW / HIDE </a><div class=\"collapse in\" id=\"collapse-basic-x\"></div></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Collapsible\", \".collapse.in\");\n                            designSetting(\"noCopy\", \".collapse.in, a[data-toggle='collapse']\");\n                        </script>\n                        <style>\n                            .collapse:empty{\n                                padding-bottom: 150px;\n                            }\n                        </style>\n                    </div>\n                    <div class=\"beforeRemove\">\n                        <script>\n                            if (elm.is('[data-toggle=\"collapse\"]')) {// collapsible button therefore any hidden content needs to be made visible\n                                affectElm = elm.attr(\"href\");//used to track hidden content\n                            }\n                        </script>\n                    </div>\n                    <div class=\"afterRemove\">\n                        <script>\n                            if (affectElm != \"\") {\n                                var efElm = editFrameContent().find(affectElm); //hidden content\n                                if (efElm.length > 0) {\n                                    if (efElm.hasClass(\"in\") == false) { //is hidden therefore unhide it and select it\n                                        efElm.css(\"height\", \"auto\");\n                                        efElm.addClass(\"in\");\n                                        focusElement(efElm);\n                                        sclTop = efElm.offset().top;\n                                        var iFrame = editFrame();\n                                        var frameContent = iFrame.contents();\n                                        if (sclTop > (frameContent.scrollTop() + iFrame.height() - 30)) {\n                                            frameContent.find(\"html, body\").stop().animate({scrollTop: sclTop - 100}, 1000, \"easeOutExpo\");\n                                        }\n                                    }\n                                }\n                            }\n                        </script>\n                    </div>\n                    <div class=\"afterDrop\">\n                        <script>\n\n                            //adds unique id to every new navbar\n                            var id = \"collapse-basic-\";\n                            var i = uniqueID(id);\n                            designFrame.find(\"#\" + id + \"x\").attr(\"id\", id + i);\n                            var elm = designFrame.find(\"a[aria-controls='collapse-basic-x']\");\n                            elm.attr(\"href\", \"#\" + id + i);\n                            elm.attr(\"aria-controls\", id + i);\n                        </script>\n                    </div>\n                </div>\n                <div class=\"component\" title=\"Accordion\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Accordion.png\">\n                    <div class=\"html-content\"><div class=\"panel-group ag-accordion\" id=\"accordion-x\" role=\"tablist\" aria-multiselectable=\"true\"><div class=\"panel panel-default\"><div class=\"panel-heading\" role=\"tab\" id=\"accordion-x-heading-1\"><div class=\"panel-title\"><a data-toggle=\"collapse\" data-parent=\"#accordion-x\" href=\"#accordion-x-collapse-1\" aria-expanded=\"true\" aria-controls=\"accordion-x-collapse-1\"> Collapsible Group Item #1 </a></div></div><div id=\"accordion-x-collapse-1\" class=\"panel-collapse collapse in\" role=\"tabpanel\" aria-labelledby=\"accordion-x-heading-1\"><div class=\"panel-body\"></div></div></div><div class=\"panel panel-default\"><div class=\"panel-heading\" role=\"tab\" id=\"accordion-x-heading-2\"><div class=\"panel-title\"><a class=\"collapsed\" data-toggle=\"collapse\" data-parent=\"#accordion-x\" href=\"#accordion-x-collapse-2\" aria-expanded=\"false\" aria-controls=\"accordion-x-collapse-2\"> Collapsible Group Item #2 </a></div></div><div id=\"accordion-x-collapse-2\" class=\"panel-collapse collapse\" role=\"tabpanel\" aria-labelledby=\"accordion-x-heading-2\"><div class=\"panel-body\"></div></div></div><div class=\"panel panel-default\"><div class=\"panel-heading\" role=\"tab\" id=\"accordion-x-heading-3\"><div class=\"panel-title\"><a class=\"collapsed\" data-toggle=\"collapse\" data-parent=\"#accordion-x\" href=\"#accordion-x-collapse-3\" aria-expanded=\"false\" aria-controls=\"accordion-x-collapse-3\"> Collapsible Group Item #3 </a></div></div><div id=\"accordion-x-collapse-3\" class=\"panel-collapse collapse\" role=\"tabpanel\" aria-labelledby=\"accordion-x-heading-3\"><div class=\"panel-body\"></div></div></div></div></div>\n                    <div class=\"runOnLoad\">\n                        <script>\n                            tagReName(\"Accordion\", \".ag-accordion\", true);\n                            designSetting(\"noCopy\", \".ag-accordion\");\n                            designSetting(\"removeOnCopy\", \".ag-accordion\");\n                            designSetting(\"notSelectable\", \".ag-accordion .panel-heading, .ag-accordion div[role='tabpanel']\");\n                            hideClassFromPropInspector(\"ag-accordion\", true);\n                        </script>\n                    </div>\n                    <div class=\"afterDrop\">\n                        <script>\n                            //adds unique id to every new accordian\n                            var id = \"accordion-\";\n                            var i = uniqueID(id);\n                            var elm = designFrame.find(\"#\" + id + \"x\");\n                            accID = id + i;\n                            elm.attr(\"id\", accID);\n                            elm.find('a[data-parent=\"#accordion-x\"]').each(function () {\n                                $(this).attr(\"data-parent\", \"#\" + accID);\n                            });\n                            elm.find(\".panel\").each(function (index) {\n                                var pHead = $(this).find(\".panel-heading\").first();\n                                var pColpse = $(this).find(\".panel-collapse\").first();\n\n                                var id = accID + \"-heading-\";\n                                pHead.attr(\"id\", id + index);\n                                pColpse.attr(\"aria-labelledby\", id + index);\n\n                                var id = accID + \"-collapse-\";\n                                pColpse.attr(\"id\", id + index);\n                                var pLink = pHead.find(\"a[data-toggle='collapse']\").first();\n                                pLink.attr(\"href\", \"#\" + id + index);\n                                pLink.attr(\"aria-controls\", id + index);\n\n                            });\n                        </script>\n                    </div>\n                    <div class=\"onAttributeSelected\">\n                        <script>\n                            if (elm.hasClass('ag-accordion') == true) {\n                                $(\"#checkID\").prop( \"disabled\", true );\n                            }\n                        </script>\n                    </div>\n                    <div class=\"whenDrag\">\n                        <script>\n                            if (elmDrop.is(\".panel-body\")) { //drop element is a panel body\n                                isOut = false; // therfore only drop inside\n                            }\n                        </script>\n                    </div>\n                    <div class=\"whenCopy\">\n                        <script>\n\n                            //when copying an accordian panel we need to setup unigue id's for both the header and body of the new panel\n                            if (elm.hasClass(\"panel\")) {//check if panel\n                                if (elm.closest(\".panel-group\").length > 0) {\n                                    if (elm.closest(\".panel-group\").attr(\"aria-multiselectable\") == \"true\") {//check if accordian\n\n                                        var clClone = clonedElement.closest(\".newStuff\");\n                                        var pHead = clClone.find(\".panel-heading\").first();\n                                        alert(clonedElement.html());\n                                        var pColpse = clClone.find(\".panel-collapse\").first();\n                                        var accID = elm.closest(\".panel-group\").attr(\"id\");\n\n                                        //add unique id to header\n                                        var id = accID + \"-heading-\";\n                                        var i = uniqueID(id);\n                                        pHead.attr(\"id\", id + i);\n                                        pColpse.attr(\"aria-labelledby\", id + i);\n\n                                        //add unique id to body\n                                        var id = accID + \"-collapse-\";\n                                        //var i = uniqueID(id);\n                                        pColpse.attr(\"id\", id + i);\n                                        var pLink = pHead.find(\"a[data-toggle='collapse']\").first();\n                                        pLink.attr(\"href\", \"#\" + id + i);\n                                        pLink.attr(\"aria-controls\", id + i);\n\n                                        clClone.find(\".panel-body\").html(\"\");\n                                        //if prevous accordian was open, then close it\n                                        var prevAcc = elm.find(\".panel-heading\").first().find(\"a[data-toggle='collapse']\").first();\n                                        prevAcc.attr(\"aria-expanded\", \"false\");\n                                        prevAcc.addClass(\"collapsed\");\n                                        elm.find(\".panel-collapse\").first().removeClass(\"in\");\n                                    }\n                                }\n                            }\n\n                        </script>\n                    </div>\n                    <div class=\"afterUnHide\">\n                        <script>\n                            var accord = visibleElm.closest(\"div[aria-multiselectable='true']\");\n                            if (accord.length > 0) {\n                                accord.children().each(function () {\n                                    var panelHead = $(this).find(\".panel-heading > .panel-title > a[aria-expanded='true']\");\n                                    if (panelHead.length == 1) {\n                                        panelHead.addClass(\"collapsed\");\n                                        panelHead.attr(\"aria-expanded\", \"false\");\n                                        $(this).find(\".panel-collapse.collapse.in\").removeClass(\"in\");\n                                    }\n\n                                });\n                            }\n                        </script>\n                    </div>\n                    <div class=\"afterAttach\">\n                        <script>\n\n                            if (elm.hasClass(\"panel\")) { //check if its a panel\n                                if (elm.parent().is(\"div[aria-multiselectable='true']\")) {//check if its an accordian\n                                    //elm.parent().children().each(function () {\n                                    var panelHead = elm.find(\".panel-heading > .panel-title > a[aria-expanded='true']\");\n                                    if (panelHead.length == 1) {\n                                        panelHead.addClass(\"collapsed\");\n                                        panelHead.attr(\"aria-expanded\", \"false\");\n                                        elm.find(\".panel-collapse.collapse.in\").removeClass(\"in\");\n                                    }\n                                    //});  \n                                }\n                            }\n\n                        </script>\n                    </div>\n                </div>\n            </div>\n            <div class=\"component\" data-alias=\"load\" title=\"Progress bars\" data-thumbnail=\"https://editor.bragndrop.com/assets/js/framework/thumbnails/bootstrap3/Progress_bars.png\">\n                <div class=\"html-content\"><div class=\"progress\"><div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"min-width: 2em;\"></div></div></div>\n                <div class=\"runOnLoad\">\n                    <script>\n                        tagReName(\"Progress Bar\", \".progress-bar\");\n                        tagReName(\"Progress\", \".progress\");\n                        designSetting(\"notDraggable\", \".progress-bar\");\n                        designSetting(\"notDroppable\", \".progress-bar\");\n                    </script>\n                    <style>\n                        .progress-bar{\n                            min-width: 10% !important;\n                        }\n                        .progress-bar:empty::before{\n                            content: \"\" !important;\n                        }\n                    </style>\n                </div>\n                <div class=\"addButtons\">\n                    <div id=\"progressValue\">\n                        <form class=\"form-inline col-sm-offset-1\">\n                            <div class=\"form-group\">\n                                <label for=\"prog-val\">Enter a number between <span id=\"prog-min\">0</span> and <span id=\"prog-max\">100</span>: </label>\n                                <div class=\"input-group\">\n                                    <input type=\"number\" min=\"0\" max=\"100\" class=\"form-control\" id=\"prog-val\" aria-label=\"Percentage\">\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <script>\n\n                        addCustomButton(inEditor, \"progValue\", \"Value\", \"\", \"\", \".progress-bar\", \"\", \"#2196f3\");\n                        inEditor.find(\"#progValue\").click(function (event) {\n                            var elm = selectedElement();\n                            var dCont = $(\"#dynamicContent\");\n                            dCont.html(controlLayout.find(\"#progressValue\").html());\n\n                            var progVal = dCont.find(\"#prog-val\");\n                            var valNow = elm.attr('aria-valuenow');\n                            var oldVal = valNow;\n                            progVal.val(valNow);\n\n                            var mx = elm.attr('aria-valuemax');\n                            var mn = elm.attr('aria-valuemin');\n                            progVal.attr(\"min\", mn);\n                            progVal.attr(\"max\", mx);\n\n                            dCont.find(\"#prog-min\").text(mn);\n                            dCont.find(\"#prog-max\").text(mx);\n\n\n                            var okButton = $(\"#CustomModalApplyButton\");\n                            okButton.show();\n                            okButton.off();\n                            okButton.click(function () {\n\n                                var vl = dCont.find(\"#prog-val\").val();\n                                if (vl != \"\") {\n                                    if (isNaN(vl) == false) {\n\n                                        elm.attr(\"aria-valuenow\", vl);\n\n                                        var percentage = Math.floor((vl / Number(mx)) * 100);\n                                        elm.css(\"width\", percentage + \"%\");\n\n                                        focusElement(elm);\n\n                                        undoManager.add({\n                                            undo: function () {\n                                                showIfHidden(elm);\n                                                elm.attr(\"aria-valuenow\", oldVal);\n                                                var oldPercentage = Math.floor((oldVal / Number(mx)) * 100);\n                                                elm.css(\"width\", oldPercentage + \"%\");\n\n                                                resetBreadcrumbAndProps(elm, false);\n                                            },\n                                            redo: function () {\n                                                showIfHidden(elm);\n                                                elm.attr(\"aria-valuenow\", vl);\n                                                elm.css(\"width\", percentage + \"%\");\n\n                                                resetBreadcrumbAndProps(elm, false);\n\n                                            }\n                                        });\n\n                                        undoRedoStatus();\n\n                                    }\n                                }\n\n                                $('#CustomModal').modal('hide');\n\n\n                            });\n\n                            $('#CustomModal').modal('show');\n                            event.stopPropagation();\n                        });\n\n                        var list = new listOption(\"progress-bar-success,progress-bar-info,progress-bar-warning,progress-bar-danger\");\n                        list.prefixMatch = \"progress-bar-\";\n                        addListButton(inEditor, \"Style\", list, \".progress-bar\");   \n\n                        addClassButton(inEditor, \"Striped\", \"progress-bar-striped\", \".progress-bar\");\n                        addClassButton(inEditor, \"Animated\", \"active\", \".progress-bar\");\n\n                    </script>\n                </div>\n            </div>\n        </div>\n        <div class=\"globalOptions\">\n            <div class=\"runOnLoad\">\n                <script>\n                    designSetting(\"unTouchElement\", \".sr-only\");\n                </script>\n            </div>\n            <div class=\"afterUnHide\">\n                <script>\n                    // this is used to unhide any hidden contents that is triggered when using undo redo\n                    // the reseason i put this at the bottom here is so that i want the unhide collapse\n                    // to be called last.\n                    var colapse = visibleElm.closest(\".collapse\");\n                    if (colapse.length > 0) {\n                        if (colapse.hasClass(\"in\") == false) {\n                            colapse.addClass(\"in\");\n                            colapse.attr(\"aria-expanded\", \"true\");\n                            colapse.css(\"height\", \"\");\n                            var cID = colapse.attr(\"id\");\n                            var btn = editFrameContent().find(\".collapsed[aria-controls='\" + cID + \"']\");\n                            if (btn.length > 0) {\n                                btn.removeClass(\"collapsed\");\n                                btn.attr(\"aria-expanded\", \"true\");\n                            }\n                        }\n                    }\n                </script>\n            </div>\n            <div class=\"beforeCopy\">\n                <script>\n                    if (elm.is('[data-toggle=\"dropdown\"]')) {\n                        elm = elm.parent();\n                    }\n                </script>\n            </div>\n            <div class=\"afterCopy\">\n                <script>\n                    designWindow().runAllFunctions();\n                </script>\n            </div>\n        </div>\n    </div>\n</div>","include_files":"https://editor.bragndrop.com/assets/js/addOn/meta-settings.js\nhttps://editor.bragndrop.com/assets/js/addOn/html-rules.js\nhttps://editor.bragndrop.com/assets/js/addOn/angular-js.js\nhttps://editor.bragndrop.com/assets/js/addOn/style-edit.js\nhttps://editor.bragndrop.com/assets/js/addOn/google-font-picker.js\nhttps://editor.bragndrop.com/assets/js/addOn/hidden-content.js\nhttps://editor.bragndrop.com/assets/js/addOn/table-edit.js\nhttps://editor.bragndrop.com/assets/js/addOn/jquery-event-handler.js\nhttps://editor.bragndrop.com/assets/js/addOn/manifest.js\nhttps://editor.bragndrop.com/assets/js/addOn/safari-settings.js\nhttps://editor.bragndrop.com/assets/js/addOn/windows-tiles.js\nhttps://editor.bragndrop.com/assets/js/addOn/service-worker.js","property_inspector":"<div class=\"addAttributes\">\n    <script>\n        toggleClassAttribute(\"Align\", \"edit\", [{\"label\": \"Align\", \"data\": {\"\": \"none\", \"text-left\": \"left\", \"text-center\": \"center\", \"text-right\": \"right\", \"text-justify\": \"justify\", \"text-nowrap\": \"nowrap\"}}], \"*\", \".ag-text, .ag-text-edit, img\");\n\n        toggleClassAttribute(\"Color\", \"edit\", [{\"label\": \"Background Color\", \"data\": {\"\": \"none\", \"bg-primary\": \"#337ab7\", \"bg-success\": \"#dff0d8\", \"bg-info\": \"#d9edf7\", \"bg-warning\": \"#fcf8e3\", \"bg-danger\": \"#f2dede\"}}, {\"label\": \"Text Color\", \"data\": {\"\": \"none\", \"text-muted\": \"#777\", \"text-primary\": \"#337ab7\", \"text-success\": \"#3c763d\", \"text-info\": \"#31708f\", \"text-warning\": \"#8a6d3b\", \"text-danger\": \"#a94442\"}}], \"*\", \".ag-text, .ag-text-edit, img\");\n\n        toggleClassAttribute(\"Print\", \"yes\", [{\"label\": \"Print\", \"data\": {\"\": \"yes\", \"hidden-print\": \"no\"}}], \"*\", \".ag-text, .ag-text-edit\");\n\n        toggleClassAttribute(\"Pull left/right\", \"edit\", [{\"label\": \"Pull left/right\", \"data\": {\"\": \"none\", \"pull-left\": \"left\", \"pull-right\": \"right\", \"clearfix\": \"clear fix\"}}], \"*\", \"body, .ag-text, .ag-text-edit\");\n\n    </script>\n</div>\n<div class=\"onAttributeSelected\" title=\"hide\">\n    <div id=\"hideIn\">\n        <div class=\"checkbox\">\n            <label class=\"user-select-none\">\n                <input type=\"checkbox\" value=\"lg\" id=\"hideInLG\">\n                Hide content on Large Screens\n            </label>\n        </div>\n        <div class=\"checkbox\">\n            <label class=\"user-select-none\">\n                <input type=\"checkbox\" value=\"md\" id=\"hideInMD\">\n                Hide content on Desktops\n            </label>\n        </div>\n        <div class=\"checkbox\">\n            <label class=\"user-select-none\">\n                <input type=\"checkbox\" value=\"sm\" id=\"hideInSM\">\n                Hide content on Tablets\n            </label>\n        </div>\n        <div class=\"checkbox\">\n            <label class=\"user-select-none\">\n                <input type=\"checkbox\" value=\"xs\" id=\"hideInXS\">\n                Hide content on Phones\n            </label>\n        </div>\n    </div>\n    <script>\n        // build \"device-hide\" option, if it's not already made:\n        if ($(\"#device-hide\").length == 0) {\n            var propBody = controlLayout.find(\"#hideIn\").html();\n            var deviceHide = buildCustomProp(\"#device-hide\", propBody);\n            deviceHide.find(\"input\").each(function () {\n                $(this).change(function () {\n                    var elm = selectedElement();\n\n                    var vl = $(this).val();\n                    var sc = \"md\";\n                    var chk = $(this).is(':checked');\n                    if (chk) {\n                        elm.addClass(\"hidden-\" + vl);\n                    } else {\n                        elm.removeClass(\"hidden-\" + vl);\n                    }\n\n                    var prevView = $(\"#viewportList\").val();\n\n\n                    if (vl == \"lg\") {\n                        sc = \"large_screen\";\n                    } else if (vl == \"md\") {\n                        sc = \"desktop\";\n                    } else if (vl == \"sm\") {\n                        sc = \"tablet\";\n                    } else if (vl == \"xs\") {\n                        sc = \"mobile\";\n                    }\n                    var newView = sc;\n                    updateClassValue(elm);\n\n                    $(\"#viewportList\").val(sc);\n                    changeViewport(sc);\n                    if (deviceHide.find(\"input:checked\").length == 4) {\n                        alert(\"Content can not be hidden under all devices! Use the 'Hidden Content' Control instead.\");\n                        $(this).prop('checked', false);\n                        elm.removeClass(\"hidden-\" + vl);\n                    } else {\n\n\n                        undoManager.add({\n                            undo: function () {\n                                eastPanelShowContent(\"#device-hide\");\n                                showIfHidden(elm);\n\n                                if (chk) {\n                                    elm.removeClass(\"hidden-\" + vl);\n                                } else {\n                                    elm.addClass(\"hidden-\" + vl);\n                                }\n\n                                deviceHide.find(\"#hideInLG\").prop('checked', elm.hasClass(\"hidden-lg\"));\n                                deviceHide.find(\"#hideInMD\").prop('checked', elm.hasClass(\"hidden-md\"));\n                                deviceHide.find(\"#hideInSM\").prop('checked', elm.hasClass(\"hidden-sm\"));\n                                deviceHide.find(\"#hideInXS\").prop('checked', elm.hasClass(\"hidden-xs\"));\n                                $(\"#viewportList\").val(prevView);\n                                changeViewport(prevView);\n                                updateClassValue(elm);\n                                resetBreadcrumbAndProps(elm, false, true);\n\n                            },\n                            redo: function () {\n                                eastPanelShowContent(\"#device-hide\");\n                                showIfHidden(elm);\n\n                                if (chk) {\n                                    elm.addClass(\"hidden-\" + vl);\n                                } else {\n                                    elm.removeClass(\"hidden-\" + vl);\n                                }\n                                deviceHide.find(\"#hideInLG\").prop('checked', elm.hasClass(\"hidden-lg\"));\n                                deviceHide.find(\"#hideInMD\").prop('checked', elm.hasClass(\"hidden-md\"));\n                                deviceHide.find(\"#hideInSM\").prop('checked', elm.hasClass(\"hidden-sm\"));\n                                deviceHide.find(\"#hideInXS\").prop('checked', elm.hasClass(\"hidden-xs\"));\n\n                                $(\"#viewportList\").val(newView);\n                                changeViewport(newView);\n                                updateClassValue(elm);\n                                resetBreadcrumbAndProps(elm, false, true);\n\n                            }\n                        });\n\n                        undoRedoStatus();\n                    }\n\n                    if (elm.is(\":visible\") == false) {\n                        hideControlBtns();\n                    }\n                });\n            });\n        }\n\n        $(\"#hide\").click(function (event) {\n\n            var elm = selectedElement();\n\n            var dh = $(\"#device-hide\");\n            dh.find(\"#hideInLG\").prop('checked', elm.hasClass(\"hidden-lg\"));\n            dh.find(\"#hideInMD\").prop('checked', elm.hasClass(\"hidden-md\"));\n            dh.find(\"#hideInSM\").prop('checked', elm.hasClass(\"hidden-sm\"));\n            dh.find(\"#hideInXS\").prop('checked', elm.hasClass(\"hidden-xs\"));\n\n            eastPanelShowContent(\"#device-hide\");\n\n            event.stopPropagation();\n        });\n    </script>\n</div>\n<div class=\"addAttributes\">\n    <script>\n        addAttribute(\"hide\", \"Hide\", \"change\");\n    </script>\n</div>\n<div class=\"showAttributes\">\n    <script>\n        showAttribute(inEditor, \"#hide\", \"*\", \"body, .ag-text, .ag-text-edit\");\n    </script>\n</div>\n<div class=\"eventSnippet\">\n    <script>\n        eventSnippet['bootstrapPopover'] = '$(\"?????\").popover({\\n        // trigger: \"focus\"\\n    });';\n        eventSnippet['bootstrapPopoverCheck'] = '$(\"?????\").popover(';\n    </script>\n</div>\n<div class=\"onAttributeSelected\" title=\"popover\">\n    <div id=\"popoverBox\">\n        <form>\n            <div class=\"form-group\">\n                <div class=\"popover top\" id=\"popoverDemo\" style=\"position: relative; display: block; max-width: 100%; font-family: 'Open Sans', sans-serif !important;\">\n                    <div class=\"arrow\"></div>\n                    <div class=\"popover-title\" title=\"Title\" style=\"padding: 0px;\"><input type=\"text\" placeholder=\"title\" class=\"form-control\" id=\"popoverText\" value=\"\"></div>\n                    <div class=\"popover-content\">\n                        <textarea id=\"popoverContent\" placeholder=\"content\" title=\"Content\" style=\"resize: none; width:100%; height: 120px; border: 1px dotted #cecece; font-size: 13px;\"></textarea>\n                        <div style=\"width: 100%; height: 28px; padding: 5px;\">\n                            <div class=\"pull-right\">\n                                <select class=\"form-control input-sm\" id=\"contentAS\" style=\"padding: 0px; height: 25px;\">\n                                    <option value=\"false\">text</option>\n                                    <option value=\"true\">HTML</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"popoverPlacement\" class=\"control-label\">Placement:</label>\n                <select class=\"form-control\" id=\"popoverPlacement\">\n                    <option value=\"top\" selected=\"selected\">top</option>\n                    <option value=\"bottom\">bottom</option>\n                    <option value=\"left\">left</option>\n                    <option value=\"right\">right</option>\n                    <option value=\"auto\">auto</option>\n                </select>\n            </div>\n            <div class=\"form-group clearfix\">\n                <button class=\"btn btn-primary btn-block\" style=\"margin-top: 20px;\" id=\"updatePopover\" type=\"button\">Update</button>\n            </div>\n            <div class=\"form-group clearfix\" style=\"border-top: 1px solid #d0d0d0; padding-top: 12px; margin-top: 21px;\">\n                <div class=\"pull-right\"><button class=\"btn btn-link btn-xs\" id=\"popoverSetupCode\" type=\"button\">Popover Setup Code</button></div>\n            </div>\n        </form>\n        <style>\n        \t#popoverText{\n            \tbackground: transparent; \n                color: #000000; \n                border: 0px; \n                text-overflow: ellipsis;\n            }\n            #popoverSetupCode{\n            \tborder-bottom: 1px dotted #000000; \n                color: #000000; \n                background-color: #ffffff !important;\n            }\n            .ui-dark-theme #popover-option .popover, .ui-dark-theme #popover-option .popover-title, .ui-dark-theme #popoverText {\n              color: #cccccc;\n              background-color: #424242;\n            }\n            .ui-dark-theme .popover-title {\n              border-color: #252526;\n            }\n            .ui-dark-theme .popover.top > .arrow:after {\n              border-top-color: #424242;\n            }\n            .ui-dark-theme .popover.bottom > .arrow:after {\n              border-bottom-color: #424242;\n            }\n            .ui-dark-theme .popover.left > .arrow:after {\n              border-left-color: #424242;\n            }\n            .ui-dark-theme .popover.right > .arrow:after {\n              border-right-color: #424242;\n            }\n            .ui-dark-theme #popoverSetupCode {\n              border-bottom: 1px dotted #5c5c5f !important;\n              color: #cccccc !important;\n              background-color: #252526 !important;\n            }\n            .ui-dark-theme #popover-option .form-group.clearfix {\n              border-top-color: #1f1f1f !important;\n            }\n\n        </style>\n    </div>\n    <script>\n        // build \"popover-option\", if it's not already made:\n        if ($(\"#popover-option\").length == 0) {\n            var propBody = controlLayout.find(\"#popoverBox\").html();\n            var popoverOption = buildCustomProp(\"#popover-option\", propBody);\n\n            popoverOption.find(\"#updatePopover\").click(function (event) {\n                var elm = selectedElement();\n                var popoverChange = false;\n\n                var oldAttributesExist = {\n                    \"title\": elm.is(\"[title]\"),\n                    \"data-content\": elm.is(\"[data-content]\"),\n                    \"data-html\": elm.is(\"[data-html]\"),\n                    \"data-placement\": elm.is(\"[data-placement]\"),\n                    \"data-toggle\": elm.is(\"[data-toggle]\")\n                }\n\n                var oldAttributesValue = {\n                    \"title\": elm.attr(\"title\"),\n                    \"data-content\": elm.attr(\"data-content\"),\n                    \"data-html\": elm.attr(\"data-html\"),\n                    \"data-placement\": elm.attr(\"data-placement\"),\n                    \"data-toggle\": elm.attr(\"data-toggle\")\n                }\n\n\n                var title = popoverOption.find(\"#popoverText\").val().replace(/[\"]+/g, \"'\");\n                if (attrExist(elm, \"title\") != title){\n                    popoverChange = true;\n                }\n                elm.attr(\"title\", title);\n\n\n                var popoverContent = popoverOption.find(\"#popoverContent\").val().replace(/[\"]+/g, \"'\");\n                if (attrExist(elm, \"data-content\") != popoverContent){\n                    popoverChange = true;\n                }\n                elm.attr(\"data-content\", popoverContent);\n\n                var contentAS = popoverOption.find(\"#contentAS\").val();\n                if (attrExist(elm, \"data-html\") != contentAS){\n                    popoverChange = true;\n                    elm.attr(\"data-html\", contentAS);\n                }\n\n\n                var popoverPlacement = \"\";\n                var setPopoverPlacement = false;\n                if (popoverOption.find(\"#popoverPlacement option:selected\").length == 1) {\n                    popoverPlacement = popoverOption.find(\"#popoverPlacement\").val();\n                    if (attrExist(elm, \"data-placement\") != popoverPlacement){\n                        popoverChange = true;\n                    }\n                    elm.attr(\"data-placement\", popoverPlacement);\n                    setPopoverPlacement = true;\n                }\n\n                var setDataToggle = false;\n                if (attrExist(elm, \"data-toggle\") != \"popover\"){\n                    popoverChange = true;\n                    elm.attr(\"data-toggle\", \"popover\");\n                    setDataToggle = true;\n                }\n\n                setTimeout(function(){ \n                    focusElement(elm);\n                }, 100);\n\n                if (popoverChange == true){\n                    undoManager.add({\n                        undo: function () {\n                            eastPanelShowContent(\"#popover-option\");\n\n                            if (oldAttributesExist[\"title\"] == true){\n                                elm.attr(\"title\", oldAttributesValue[\"title\"]);\n                                popoverOption.find(\"#popoverText\").val(oldAttributesValue[\"title\"]);\n                            }else{\n                                elm.removeAttr(\"title\");\n                                popoverOption.find(\"#popoverText\").val(\"\");\n                            }\n\n                            if (oldAttributesExist[\"data-content\"] == true){\n                                elm.attr(\"data-content\", oldAttributesValue[\"data-content\"]);\n                                popoverOption.find(\"#popoverContent\").val(oldAttributesValue[\"data-content\"]);\n                            }else{\n                                elm.removeAttr(\"data-content\");\n                                popoverOption.find(\"#popoverContent\").val(\"\");\n                            }\n\n                            if (oldAttributesExist[\"data-html\"] == true){\n                                elm.attr(\"data-html\", oldAttributesValue[\"data-html\"]);\n                                popoverOption.find(\"#contentAS\").val(oldAttributesValue[\"data-html\"]);\n                            }else{\n                                elm.removeAttr(\"data-html\");\n                                popoverOption.find(\"#contentAS\").val(\"false\");\n                            }\n\n                            if (oldAttributesExist[\"data-placement\"] == true){\n                                elm.attr(\"data-placement\", oldAttributesValue[\"data-placement\"]);\n                                popoverOption.find(\"#popoverPlacement\").val(oldAttributesValue[\"data-placement\"]);\n                            }else{\n                                elm.removeAttr(\"data-placement\");\n                                popoverOption.find(\"#popoverPlacement\").val(\"top\");\n                            }\n\n                            if (oldAttributesExist[\"data-toggle\"] == true){\n                                elm.attr(\"data-toggle\", oldAttributesValue[\"data-toggle\"]);\n                            }else{\n                                elm.removeAttr(\"data-toggle\");\n                            }\n\n                            showIfHidden(elm);\n                            resetBreadcrumbAndProps(elm, false, true);\n\n                        },\n                        redo: function () {\n                            eastPanelShowContent(\"#popover-option\");\n\n                            elm.attr(\"title\", title);\n                            popoverOption.find(\"#popoverText\").val(title);\n\n                            elm.attr(\"data-content\", popoverContent);\n                            popoverOption.find(\"#popoverContent\").val(popoverContent);\n\n                            elm.attr(\"data-html\", contentAS);\n                            popoverOption.find(\"#contentAS\").val(contentAS);\n\n                            if (setPopoverPlacement == true){\n                                elm.attr(\"data-placement\", popoverPlacement);\n                                popoverOption.find(\"#popoverPlacement\").val(popoverPlacement);\n                            }\n\n                            if (setDataToggle == true){\n                                elm.attr(\"data-toggle\", \"popover\");\n                            }\n\n                            showIfHidden(elm);\n                            resetBreadcrumbAndProps(elm, false, true);\n\n                        }\n                    });\n\n                    undoRedoStatus();\n                }\n\n                event.stopPropagation();\n            });\n\n            popoverOption.find('#popoverPlacement').on('change', function() {\n                popoverOption.find('#popoverDemo').removeClass(\"top bottom left right auto\").addClass($(this).val());\n            });\n\n            popoverOption.find(\"#popoverSetupCode\").click(function (event) {\n\n                popoverOption.find(\"#updatePopover\").click();\n\n                var elm = selectedElement();\n\n                goToSourceCode();\n                handleEvent({\n                    useSnippet:'bootstrapPopover',\n                    snippetParameters: [\"[data-toggle='popover']\"]\n                });\n                event.stopPropagation();\n            });\n\n        }\n\n        $(\"#popover\").click(function (event) {\n            var elm = selectedElement();\n            var popoverOption = $(\"#popover-option\");\n\n            var title = attrExist(elm, \"title\");\n            popoverOption.find(\"#popoverText\").val(title);\n\n            var popoverContent = attrExist(elm, \"data-content\");\n            popoverOption.find(\"#popoverContent\").val(popoverContent);\n\n            var contentAS = attrExist(elm, \"data-html\");\n            if (contentAS == \"true\") {\n                popoverOption.find(\"#contentAS\").val(\"true\");\n            }else{\n                popoverOption.find(\"#contentAS\").val(\"false\");\n            }\n\n            var popoverPlacement = attrExist(elm, \"data-placement\");\n            if (popoverPlacement == \"\") {\n                popoverPlacement = \"top\";\n            }\n            popoverOption.find(\"#popoverPlacement\").val(popoverPlacement);\n            popoverOption.find('#popoverDemo').removeClass(\"top bottom left right auto\").addClass(popoverPlacement);\n\n            eastPanelShowContent(\"#popover-option\");\n            $(\"#popover-option\").find(\"#popoverText\").focus();\n\n            event.stopPropagation();\n        });\n    </script>\n</div>\n<div class=\"addJStoFinal\" data-check=\"[data-toggle='popover']\">\n    <script>\n        $(function () {\n            $(\"[data-toggle='popover']\").popover();\n        });\n    </script>\n</div>\n<div class=\"addAttributes\">\n    <script>\n        addAttribute(\"popover\", \"Popover\", \"change\", true);\n    </script>\n</div>\n<div class=\"showAttributes\">\n    <script>\n        showAttribute(inEditor, \"#popover\", \"*\", \"body, .ag-text, .ag-text-edit, [data-toggle^='button'], [data-toggle='collapse'], [data-toggle='dropdown'], [data-toggle='modal'], [data-toggle='tab'], [data-toggle='pill'], [data-toggle='group']\");\n    </script>\n</div>\n<div class=\"eventSnippet\">\n    <script>\n        eventSnippet['bootstrapTooltip'] = '$(\"?????\").tooltip();';\n        eventSnippet['bootstrapTooltipCheck'] = '$(\"?????\").tooltip(';\n    </script>\n</div>\n<div class=\"onAttributeSelected\" title=\"tooltip\">\n    <div id=\"tooltipBox\">\n        <form>\n            <div class=\"form-group\">\n                <div class=\"tooltip top\" id=\"tooltipDemo\" role=\"tooltip\" style=\"position: relative !important; opacity: 1 !important;\">\n                    <div class=\"tooltip-arrow\"></div>\n                    <div class=\"tooltip-inner\" style=\"width: 100%; max-width: initial !important;\">\n                        <input type=\"text\" class=\"form-control\" id=\"tooltipText\" value=\"\" style=\"background-color: #4ba5ff; color: #ffffff; border: 1px dotted #0061c1; margin-top: 3px; text-overflow: ellipsis;\">\n                        <div style=\"width: 100%; height: 24px; padding: 0px; margin: 15px 0px 5px 0px;\">\n                            <div class=\"pull-right\">\n                                <select class=\"form-control input-sm\" id=\"tooltipAS\" style=\"padding: 0px; height: 25px;\">\n                                    <option value=\"false\">text</option>\n                                    <option value=\"true\">HTML</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"tooltipPlacement\" class=\"control-label\">Placement:</label>\n                <select class=\"form-control\" id=\"tooltipPlacement\">\n                    <option value=\"top\" selected=\"selected\">top</option>\n                    <option value=\"bottom\">bottom</option>\n                    <option value=\"left\">left</option>\n                    <option value=\"right\">right</option>\n                    <option value=\"auto\">auto</option>\n                </select>\n            </div>\n            <div class=\"form-group clearfix\">\n                <button class=\"btn btn-primary btn-block\" style=\"margin-top: 20px;\" id=\"updateTooltip\" type=\"button\">Update</button>\n            </div>\n            <div class=\"form-group clearfix\" style=\"border-top: 1px solid #d0d0d0; padding-top: 12px; margin-top: 21px;\">\n                <div class=\"pull-right\"><button class=\"btn btn-link btn-xs\" id=\"tooltipSetupCode\" type=\"button\">Tooltip Setup Code</button></div>\n            </div>\n        </form>\n        <style>\n            #tooltipSetupCode{\n            \tborder-bottom: 1px dotted #000000; \n                color: #000000; \n                background-color: #ffffff !important;\n            }\n            .ui-dark-theme #tooltipSetupCode {\n              border-bottom: 1px dotted #5c5c5f !important;\n              color: #cccccc !important;\n              background-color: #252526 !important;\n            }\n            .ui-dark-theme #tooltip-option .form-group.clearfix {\n              border-top-color: #1f1f1f !important;\n            }\n        </style>\n    </div>\n    <script>\n        // build \"tooltip-option\", if it's not already made:\n        if ($(\"#tooltip-option\").length == 0) {\n            var propBody = controlLayout.find(\"#tooltipBox\").html();\n            var tooltipOption = buildCustomProp(\"#tooltip-option\", propBody);\n\n            tooltipOption.find(\"#updateTooltip\").click(function (event) {\n                var elm = selectedElement();\n                var tooltipChange = false;\n\n                var oldAttributesExist = {\n                    \"title\": elm.is(\"[title]\"),\n                    \"data-html\": elm.is(\"[data-html]\"),\n                    \"data-placement\": elm.is(\"[data-placement]\"),\n                    \"data-toggle\": elm.is(\"[data-toggle]\")\n                }\n\n                var oldAttributesValue = {\n                    \"title\": elm.attr(\"title\"),\n                    \"data-html\": elm.attr(\"data-html\"),\n                    \"data-placement\": elm.attr(\"data-placement\"),\n                    \"data-toggle\": elm.attr(\"data-toggle\")\n                }\n\n\n                var title = tooltipOption.find(\"#tooltipText\").val().replace(/[\"]+/g, \"'\");\n                if (attrExist(elm, \"title\") != title){\n                    tooltipChange = true;\n                }\n                elm.attr(\"title\", title);\n\n                var tooltipAS = tooltipOption.find(\"#tooltipAS\").val();\n                if (attrExist(elm, \"data-html\") != tooltipAS){\n                    tooltipChange = true;\n                    elm.attr(\"data-html\", tooltipAS);\n                }\n\n                var tooltipPlacement = \"\";\n                var setTooltipPlacement = false;\n                if (tooltipOption.find(\"#tooltipPlacement option:selected\").length == 1) {\n                    tooltipPlacement = tooltipOption.find(\"#tooltipPlacement\").val();\n                    if (attrExist(elm, \"data-placement\") != tooltipPlacement){\n                        tooltipChange = true;\n                    }\n                    elm.attr(\"data-placement\", tooltipPlacement);\n                    setTooltipPlacement = true;\n                }\n\n                var setDataToggle = false;\n                if (attrExist(elm, \"data-toggle\") != \"tooltip\"){\n                    tooltipChange = true;\n                    elm.attr(\"data-toggle\", \"tooltip\");\n                    setDataToggle = true;\n                }\n\n                setTimeout(function(){ \n                    focusElement(elm);\n                }, 100);\n\n                if (tooltipChange == true){\n                    undoManager.add({\n                        undo: function () {\n                            eastPanelShowContent(\"#tooltip-option\");\n\n                            if (oldAttributesExist[\"title\"] == true){\n                                elm.attr(\"title\", oldAttributesValue[\"title\"]);\n                                tooltipOption.find(\"#tooltipText\").val(oldAttributesValue[\"title\"]);\n                            }else{\n                                elm.removeAttr(\"title\");\n                                tooltipOption.find(\"#tooltipText\").val(\"\");\n                            }\n\n                            if (oldAttributesExist[\"data-html\"] == true){\n                                elm.attr(\"data-html\", oldAttributesValue[\"data-html\"]);\n                                tooltipOption.find(\"#tooltipAS\").val(oldAttributesValue[\"data-html\"]);\n                            }else{\n                                elm.removeAttr(\"data-html\");\n                                tooltipOption.find(\"#tooltipAS\").val(\"false\");\n                            }\n\n                            if (oldAttributesExist[\"data-placement\"] == true){\n                                elm.attr(\"data-placement\", oldAttributesValue[\"data-placement\"]);\n                                tooltipOption.find(\"#tooltipPlacement\").val(oldAttributesValue[\"data-placement\"]);\n                            }else{\n                                elm.removeAttr(\"data-placement\");\n                                tooltipOption.find(\"#tooltipPlacement\").val(\"top\");\n                            }\n\n                            if (oldAttributesExist[\"data-toggle\"] == true){\n                                elm.attr(\"data-toggle\", oldAttributesValue[\"data-toggle\"]);\n                            }else{\n                                elm.removeAttr(\"data-toggle\");\n                            }\n\n                            showIfHidden(elm);\n                            resetBreadcrumbAndProps(elm, false, true);\n\n                        },\n                        redo: function () {\n                            eastPanelShowContent(\"#tooltip-option\");\n\n                            elm.attr(\"title\", title);\n                            tooltipOption.find(\"#tooltipText\").val(title);\n\n                            elm.attr(\"data-html\", tooltipAS);\n                            tooltipOption.find(\"#tooltipAS\").val(tooltipAS);\n\n                            if (setTooltipPlacement == true){\n                                elm.attr(\"data-placement\", tooltipPlacement);\n                                tooltipOption.find(\"#tooltipPlacement\").val(tooltipPlacement);\n                            }\n\n                            if (setDataToggle == true){\n                                elm.attr(\"data-toggle\", \"tooltip\");\n                            }\n\n                            showIfHidden(elm);\n                            resetBreadcrumbAndProps(elm, false, true);\n\n                        }\n                    });\n\n                    undoRedoStatus();\n                }\n\n                event.stopPropagation();\n            });\n\n            tooltipOption.find('#tooltipPlacement').on('change', function() {\n                tooltipOption.find('#tooltipDemo').removeClass(\"top bottom left right auto\").addClass($(this).val());\n            });\n\n            tooltipOption.find(\"#tooltipSetupCode\").click(function (event) {\n\n                tooltipOption.find(\"#updateTooltip\").click();\n\n                var elm = selectedElement();\n\n                goToSourceCode();\n                handleEvent({\n                    useSnippet:'bootstrapTooltip',\n                    snippetParameters: [\"[data-toggle='tooltip']\"]\n                });\n                event.stopPropagation();\n            });\n\n        }\n\n        $(\"#tooltip\").click(function (event) {\n            var elm = selectedElement();\n            var tooltipOption = $(\"#tooltip-option\");\n\n            var title = attrExist(elm, \"title\");\n            tooltipOption.find(\"#tooltipText\").val(title);\n\n            var tooltipAS = attrExist(elm, \"data-html\");\n            if (tooltipAS == \"true\") {\n                tooltipOption.find(\"#tooltipAS\").val(\"true\");\n            }else{\n                tooltipOption.find(\"#tooltipAS\").val(\"false\");\n            }\n\n            var tooltipPlacement = attrExist(elm, \"data-placement\");\n            if (tooltipPlacement == \"\") {\n                tooltipPlacement = \"top\";\n            }\n            tooltipOption.find(\"#tooltipPlacement\").val(tooltipPlacement);\n            tooltipOption.find('#tooltipDemo').removeClass(\"top bottom left right auto\").addClass(tooltipPlacement);\n\n            eastPanelShowContent(\"#tooltip-option\");\n            $(\"#tooltip-option\").find(\"#tooltipText\").focus();\n\n            event.stopPropagation();\n        });\n    </script>\n</div>\n<div class=\"addJStoFinal\" data-check=\"[data-toggle='tooltip']\">\n    <script>\n        $(function () {\n            $(\"[data-toggle='tooltip']\").tooltip();\n        });\n    </script>\n</div>\n<div class=\"addAttributes\">\n    <script>\n        addAttribute(\"tooltip\", \"Tooltip\", \"change\", true);\n    </script>\n</div>\n<div class=\"showAttributes\">\n    <script>\n        showAttribute(inEditor, \"#tooltip\", \"*\", \"body, .ag-text, .ag-text-edit, [data-toggle^='button'], [data-toggle='collapse'], [data-toggle='dropdown'], [data-toggle='modal'], [data-toggle='tab'], [data-toggle='pill'], [data-toggle='group']\");\n    </script>\n</div>\n<div class=\"globalOptions\">\n    <div class=\"runOnLoad\">\n        <style>\n            .pull-left, .pull-right{\n                z-index: 2000;\n            }\n        </style>\n    </div>\n</div>","blank_page":"<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta-temp charset=\"utf-8\"/>\n        <meta-temp http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n        <meta-temp name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n        <title></title>\n        <meta-temp name=\"description\" content=\"\"/>\n        <meta-temp name=\"keywords\" content=\"\"/>\n        <!--CSS BEFORE FRAMEWORK GOES HERE-->\n        <link id=\"mainFrameworkCSS\" href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.min.css\" rel=\"stylesheet\">\n        <!--CSS AFTER FRAMEWORK GOES HERE-->\n        <!--THEME GOES HERE-->\n    </head>\n    <body>\n        <!--[if lt IE 9]>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/1.12.0/jquery.min.js\"></script>\n<![endif]-->\n        <!--[if gte IE 9]><!-->\n        <script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n        <!--<![endif]-->\n        <script src=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n    </body>\n</html>","blank_page_no_framework":"<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta-temp charset=\"utf-8\"/>\n        <title></title>\n        <meta-temp name=\"description\" content=\"\"/>\n        <meta-temp name=\"keywords\" content=\"\"/>\n    </head>\n    <body>\n    </body>\n</html>","adding_new_files":"<div>\n    <div class=\"addFile\" data-type=\"Bootstrap3\" data-ext=\"html\" data-folder=\"site\"></div>\n    <div class=\"addFile\" data-type=\"JavaScript\" data-ext=\"js\" data-folder=\"site/JavaScript\" data-selected=\"selected\"></div>\n    <div class=\"addFile\" data-type=\"Style Sheet\" data-ext=\"css\" data-folder=\"site/CSS\"></div>\n</div>","frame_work_config":"<div>\n   <div id=\"device_types\">\n      <script>var viewportSizes = {\"devices\":[\n    {\"name\":\"Browser Width\", \"id\":\"browser_width\", \"selected\":\"yes\"},\n    {\"name\":\"Large Devices\", \"id\":\"large_screen\", \"width\":\"1220px\"},\n    {\"name\":\"Desktop\", \"id\":\"desktop\", \"width\":\"1050px\"},\n    {\"name\":\"Tablet\", \"id\":\"tablet\", \"width\":\"771px\"},\n    {\"name\":\"Mobile\", \"id\":\"mobile\", \"width\":\"400px\"}\n]};</script>\n   </div>\n   \n   <div id=\"onShowPreview\">\n      <script>// Get all required argument from the Design View:\ngetArgument['selectedTheme'] = selectedTheme;\ngetArgument['styles'] = myPage[\"styles\"];\ngetArgument['body'] = myPage[\"body\"];\ngetArgument['cssAfterFramework'] = myPage[\"cssAfterFramework\"];\ngetArgument['cssBeforeFramework'] = myPage[\"cssBeforeFramework\"];\ngetArgument['scripts'] = myPage[\"scripts\"];\n\n\nrunInPreview['createPreviewPage'] = function createPreviewPage() {\n\n    // Set all Design arguments in the Preview IFrame\n    if (getArgument['selectedTheme'] != \"\"){\n        $(\"head\").append('<link href=\"' + getArgument['selectedTheme'] + '\" rel=\"stylesheet\">');\n    }\n\n    $(\"head\").append(getArgument['styles']);\n    $(\"body\").prop('outerHTML', getArgument['body']);\n\n    if (getArgument['cssAfterFramework'] != \"\"){\n        $(\"#mainFrameworkCSS\").after(getArgument['cssAfterFramework']);\n    }\n    if (getArgument['cssBeforeFramework'] != \"\"){\n        $(\"#mainFrameworkCSS\").before(getArgument['cssBeforeFramework']);\n    }\n\n    var s = getArgument['scripts'];\n    var jsHack = \"script\";\n\n    if (s != \"\") {\n        var script = '<' + jsHack + ' type=\"text/javascript\">' + s + '</' + jsHack + '>';\n        $(\"body\").append(script);\n    }\n\n};\n\n</script>\n   </div>\n   <div id=\"requiredFiles\">//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.js\n//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.css</div>\n   <div id=\"onShowSourceCode\">\n      <script>// This will replace the outerHTML of <body></body> with myPage[\"body\"]:\ncode = code.replace(/\\<body[\\s\\S]*?\\>/i,function(a, m) { \n    var pos = myPage['body'].lastIndexOf('</body>');\n    return myPage['body'].substring(0, pos); \n});\n\n\n// This will convert all local image paths to relative\n// code = code.replace(/\\<img[\\s\\S]*?\\>/ig,function(a, m) { \n//     return a = a.replace(/src\\s*=\\s*\"(.+?)\"/ig,function(b, n) { \n//         // Use 'sitePath' to get the full path of the current Project\n//         if (b.indexOf(sitePath()) != -1){\n//             var relativePath = b.replace(sitePath() + \"/\", \"\"); \n//             return relativePath;\n//         }else{\n//             return b;\n//         }\n//     });\n// });\n\n// If a CSS Theme is used, then select it:\nif (selectedTheme != \"\"){\n    var themeTag = '<link href=\"'+selectedTheme+'\" rel=\"stylesheet\">';\n    code = code.replace(/<!--THEME GOES HERE-->/i, themeTag);\n}else{\n    code = code.replace(/<!--THEME GOES HERE-->/i, \"\");\n}\n\n// Remove the ID marker from the main Framework CSS <link>:\ncode = code.replace(/<link id=\"mainFrameworkCSS\" /i, \"<link \");\n\n// Add all CSS Links that need to go before the main Framework CSS Link:\ncode = code.replace(/<!--CSS BEFORE FRAMEWORK GOES HERE-->/i, myPage['cssBeforeFramework']);\n\n// Add all CSS Links that need to go after the main Framework CSS Link:\ncode = code.replace(/<!--CSS AFTER FRAMEWORK GOES HERE-->/i, myPage['cssAfterFramework']);\n\n\n// If the Design page contains any CSS or JavaScript code required for the \"Source Code\" or \"Preview\" page, then add it:\nif (myPage['styles'] != \"\"){\n    code = code.replace(/<\\/head>/i, \"\\n\" + myPage['styles'] + \"\\n</head>\");\n}\n\nif (myPage['scriptURL'] != \"\"){\n    code = code.replace(/<\\/body>/i,\"\\n\" + myPage['scriptURL'] + \"\\n</body>\"); \n}\n\nvar jsHack = \"script\";\nif (myPage['scripts'] != \"\"){\n    code = code.replace(/<\\/body>/i,\"\\n<\" + jsHack + \">\" + myPage['scripts'] + \"</\" + jsHack + \">\\n</body>\"); \n}\n\n</script>\n   </div>\n      \n   <div id=\"codeUsedForPublishing\">\n      <script>var body = pageClone.find(\"body\").prop('outerHTML');\nmyPage[\"body\"] = body;\n\n// Find all components that require additional CSS styles\nvar reqCSS = \"\";\ncontrolLayout.find(\".requireCSS\").each(function () {\n    if (attrExist($(this), \"data-check\") == \"\") {\n        reqCSS = reqCSS + $(this).find(\"style\").text();\n    } else {\n        var checkCondition = $(this).attr(\"data-check\");\n        if (pageClone.find(checkCondition).length > 0) {\n            reqCSS = reqCSS + $(this).find(\"style\").text();\n        }\n    }\n});\nif (reqCSS != \"\") {\n    styles = styles + '<style type=\"text/css\">' + reqCSS + '</style>';\n}\n\nmyPage[\"styles\"] = styles;\n\n\n\n// Find all components that require CSS Links\nvar cssBeforeFramework = \"\";\nvar cssAfterFramework = \"\";\n\ncontrolLayout.find(\".requireCSSLink\").each(function () {\n    var cssLink = \"\";\n    // Check if the required CSS File is actually used\n    if (attrExist($(this), \"data-check\") == \"\") {\n        cssLink = $(this).html();\n    } else {\n        var checkCondition = $(this).attr(\"data-check\");\n        if (pageClone.find(checkCondition).length > 0) {\n            cssLink = $(this).html();\n        }\n    }\n    // You can prioritize the style settings by placing it before or after the Framework CSS file respectively\n    if (attrExist($(this), \"data-placeBeforeFramework\") == \"yes\") {\n        cssBeforeFramework = cssBeforeFramework + cssLink;\n    }else{\n        cssAfterFramework = cssAfterFramework + cssLink;\n    }\n});\n\nmyPage[\"cssBeforeFramework\"] = cssBeforeFramework;\nmyPage[\"cssAfterFramework\"] = cssAfterFramework;\n\n\n// Find all components that require additional JavaScript code\nvar scripts = \"\";\ncontrolLayout.find(\".addJStoFinal\").each(function () {\n\n    if (attrExist($(this), \"data-check\") == \"\") {\n        scripts = scripts + $(this).find(\"script\").text();\n    } else {\n        var checkCondition = $(this).attr(\"data-check\");\n        if (pageClone.find(checkCondition).length > 0) {\n            scripts = scripts + $(this).find(\"script\").text();\n        }\n    }\n});\n\nmyPage[\"scripts\"] = scripts;\n\n\n// Find all components that require JavaScript Links\nvar scriptURL = \"\";\nmyPage[\"scriptURL\"] = scriptURL;</script>\n   </div>\n   <div id=\"saveToDatabase\">\n      <script>if (pageClone.find(\"#ag-themeToggle\").length > 0){\n    sendData['theme'] = pageClone.find(\"#ag-themeToggle\").attr(\"href\");\n}else{\n    sendData['theme'] = \"\";\n}\n\npageClone.find('*[style=\"position:relative;\"]').removeAttr(\"style\");\n\nvar body = pageClone.find(\"body\");\n\nif (body.attr(\"class\") == \"\") {\n    body.removeAttr(\"class\");\n}\n\nbody.find(\"*[class='']\").each(function () {\n    $(this).removeAttr(\"class\");\n});\n\nsendData['body'] = body.prop('outerHTML');\n\nsendData['used_addons'] = used_addons;\n\n</script>\n   </div>\n   <div id=\"getFromDatabase\">\n      <script>if (typeof getData['theme'] !== \"undefined\"){\n    var cleanTheme = DOMPurify.sanitize(getData['theme'].toString());\n    if (cleanTheme != \"\") {\n        addSelectedTheme(cleanTheme);\n    }\n}\n\nif (typeof getData['body'] !== \"undefined\"){\n    var cleanBody = DOMPurify.sanitize(getData['body'].toString(), {SAFE_FOR_JQUERY: true, WHOLE_DOCUMENT: true, ADD_ATTR: allowed_attributes, ADD_TAGS: allowed_tags});\n    cleanBody = cleanBody.substring(19,cleanBody.length-7);\n    editFrameContent().find(\"body\").prop('outerHTML', cleanBody);\n}\n\n\nif (typeof getData['used_ScriptFiles'] !== \"undefined\"){\n    var cleanScriptFiles = DOMPurify.sanitize(getData['used_ScriptFiles'].toString(), {SAFE_FOR_JQUERY: true, ADD_ATTR: allowed_attributes, ADD_TAGS: allowed_tags});\n    used_ScriptFiles = cleanScriptFiles;\n}\n\nif (typeof getData['used_addons'] !== \"undefined\"){\n    var clean_used_addons = DOMPurify.sanitize(getData['used_addons'].toString());\n    used_addons = clean_used_addons;\n}\n\ndesignWindow().runAllFunctions();\n</script>\n   </div>\n<div id=\"languageDefinitions\"><code data-url=\"https://editor.bragndrop.com/assets/js/definitions/v1/jquery/index.d.ts\" data-environment=\"javascript\" data-conditional=\"\"></code>\n<code data-url=\"https://editor.bragndrop.com/assets/js/definitions/v1/bootstrap/bootstrap.d.ts\" data-environment=\"javascript\" data-conditional=\"\"></code></div></div>","folder_layout":"<li>site\n    <ul>\n        <li id=\"1DK\">index.html</li>\n        <li>JavaScript\n            <ul>\n                <li id=\"1KE\">index_events.js</li>\n            </ul>\n        </li>\n    </ul>\n</li>","design_area":"<section id=\"designHead\">\n    <link id=\"frameworkCSSinDesign\" href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.min.css\" rel=\"stylesheet\">\n</section>\n\n<section id=\"designBody\">\n    <script>\n        $LAB\n            .script(\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js\").wait(function () {\n\n            $(document).off('.modal.data-api');\n\n            stopCarousel = function() {\n                $('.carousel').each(function () {\n                    if (typeof this.isOff === 'undefined') {\n                        this.isOff = true;\n                        $(this).carousel({\n                            interval: false\n                        });\n                    }\n                });\n            };\n\n            alertNoClose = function() {\n                $('.alert').each(function () {\n                    if (typeof this.isOff === 'undefined') {\n                        this.isOff = true;\n                        $(this).on('close.bs.alert', function () {\n                            return false;\n                        });\n                    }\n                });\n            };\n\n            stopDropdown = function() {\n                $('.dropdown-menu').each(function () {\n                    if (typeof this.isOff === 'undefined') {\n                        this.isOff = true;\n\n                        $(this).parent().find(\"span\").on(\"keydown\", function (event) {\n                            var keyCode = event.which;\n                            if (keyCode == 32) {\n                                event.stopPropagation();\n                            }\n                        });\n\n                        $(this).parent().on({\n                            'hide.bs.dropdown': function () {\n                                var cls = this.closable;\n                                if (typeof cls !== 'undefined') {\n                                    if (cls == false) {\n                                        this.closable = true;\n                                    }\n                                    return cls;\n                                }\n                            }\n                        });\n                        $(this).on({\n                            'click': function () {\n                                this.parentNode.closable = false;\n                            }\n                        });\n\n                    }\n                });\n            };\n\n            runAllFunctions = function() {\n                stopCarousel();\n                stopDropdown();\n                alertNoClose();\n\n                designAreaReady = function () {\n                    return false;\n                };\n            };\n\n            $(function () {\n                $.fn.button.Constructor.prototype.toggle = function () {\n                    var changed = true\n                    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n                    if ($parent.length == 0) {\n                        this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n\n                        if (changed)\n                            this.$element.toggleClass('active')\n                    }\n                }\n\n                runAllFunctions();\n\n                //<ADD-ON SCRIPTS FOR 'DESIGN VIEW' WILL GO HERE>\n            });\n        });\n    </script>\n</section>","preview_area":"<section id=\"previewHead\">\n    <link id=\"mainFrameworkCSS\" href=\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.min.css\" rel=\"stylesheet\">\n</section>\n\n<section id=\"previewBody\">\n    <script>\n        $LAB\n            .script(\"//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js\").wait(function () {\n            mainScriptsLoaded = true;\n        });\n\n        var overridePreviewScript = false;\n        //<ADD-ON SCRIPTS FOR 'PREVIEW MODE' WILL GO HERE>\n        runPreviewScripts(overridePreviewScript);\n    </script>\n</section>"};